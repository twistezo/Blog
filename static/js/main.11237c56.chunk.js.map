{"version":3,"sources":["data/firebase.js","data/index.js","data/generator.js","data/dataUtils.js","reducers/reducersUtils.js","reducers/index.js","actions/index.js","components/Navbar/SearchForm.js","containers/SearchFormContainer.js","components/Navbar/Navbar.js","containers/NavbarContainer.js","components/SidePanel/AboutMe.js","components/SidePanel/Tags.js","containers/TagsContainer.js","components/SidePanel/Archives.js","containers/ArchivesContainer.js","components/SidePanel/SidePanel.js","components/MainPanel/PostCards/PostCardHorizontal.js","components/MainPanel/SearchResult.js","containers/SearchResultContainer.js","components/MainPanel/PostCards/PostCardVertical.js","components/MainPanel/MainBoard.js","containers/MainBoardContainer.js","components/MainPanel/Post.js","containers/PostContainer.js","components/MainPanel/AddPost/Preview.js","components/MainPanel/AddPost/FormattingHelp.js","components/MainPanel/AddPost/AddPost.js","containers/AddPostContainer.js","components/App.js","containers/AppContainer.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseFirestore","firestore","Post","id","title","shortDescription","text","author","date","tags","mainImage","Object","classCallCheck","this","_id","_title","_shortDescription","_text","_author","_date","_tags","_mainImage","DataGenerator","_this","_generate","quantity","chance","Chance","i","_data","push","uuidv1","sentence","words","paragraph","sentences","DataUtils","generateExampleMarkdownText","string","american","year","randomArrayItem","arrayFromArrayRandomItems","word","length","isNullEmptyOrUndefinded","Error","fetch","Promise","resolve","reject","result","array","Math","floor","random","value","undefined","Array","from","filter","randomBoolean","arrayContainsAllElementsFromAnother","array0","array1","map","a","some","b","every","e","randomSentence","randomParagraph","concat","convertMarkdownToHtml","markdownString","showdown","Converter","noHeaderId","makeHtml","updateCodeSyntaxHighlighting","document","querySelectorAll","forEach","block","hljs","highlightBlock","jsPostObjToFirestoreObj","post","Timestamp","fromDate","firestorePostObjToJsOjb","firestoreObj","toDate","addPostsToFirestore","num","then","posts","collection","doc","set","catch","error","console","err","log","ReducersUtils","sortPostsByDateDesc","sort","Date","unwrapTagsFromPosts","allTags","flat","uniqueTags","Set","uniqueWithQuantity","uniqueTag","name","tag","state","switchTagState","tagName","find","filterPostsBy","filters","dates","searchValue","filtered","switchedOnTags","toLowerCase","includes","switchedOnYears","yearState","getFullYear","switchedOnMonths","months","month","item","monthNameFromDate","unwrapDatesFromPosts","years","yearsWithMonths","postsQuantityByDate","toLocaleString","switchDateState","dateToSwitch","archiveDates","resetFilters","reseted","assign","filtersShape","combineReducers","arguments","action","type","data","toConsumableArray","filteredPosts","objectSpread","fetchinghError","occured","message","postsFetched","fetchPosts","dispatch","getState","get","querySnapshot","docs","unwrapTags","unwrapDates","filterPosts","fetchingError","SearchForm","handleSearchFormInputChange","event","target","props","handleSearchInput","react_default","createElement","Form","inline","Link","to","PUBLIC_URL","FormControl","className","placeholder","onChange","Component","mapDispatchToProps","SearchFormContainer","connect","Navbar","handleLogoClick","es_Navbar","bg","variant","Container","onClick","Brand","Button","NavbarContainer","AboutMe","Tags","onTagClick","preventDefault","key","Badge","TagsContainer","Archives","onDateClick","Dates","ArchivesContainer","Archive","SidePanel","Row","SidePanel_AboutMe","PostsCard","postURL","src","alt","substring","day","SearchResult","PostCards","PostCardHorizontal","EmptyResult","SearchResultContainer","PostsCardVertical","MainBoard","HeadPosts","headCards","slice","headPostsNum","PostCardVertical","MainBoardContainer","PostContainer","routeParamId","dangerouslySetInnerHTML","__html","Preview","parsedText","FormattingHelp","Table","bordered","width","height","href","AddPost","possibleConstructorReturn","getPrototypeOf","call","handleShowFormattingHelp","current","controllers","showFormattingHelp","setState","handlePasteExample","shouldClearPastedExample","formInput","handleInputChange","defineProperty","handleAddPost","addPost","Group","Control","required","maxLength","as","rows","Helper","Col","AddPost_FormattingHelp","AddPost_Preview","add","addPostToFirestore","AddPostContainer","App","ErrorContainer","WaitContainer","MainContainer","BrowserRouter","sm","components_SidePanel_SidePanel","Switch","Route","exact","path","component","route","match","params","prevProps","AppContainer","Boolean","window","location","hostname","__webpack_require__","d","__webpack_exports__","process","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11237c56.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport DataUtils from \"./dataUtils\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBU_CK4oTRzwPIOjZWQn8tpF5kOcnESnps\",\r\n  authDomain: \"twistezo-blog.firebaseapp.com\",\r\n  databaseURL: \"https://twistezo-blog.firebaseio.com\",\r\n  projectId: \"twistezo-blog\",\r\n  storageBucket: \"twistezo-blog.appspot.com\",\r\n  messagingSenderId: \"1065707028990\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\nexport const firebaseFirestore = firebase.firestore();\r\n\r\nexport const fetchPostsFromFirestore = () =>\r\n  firebaseFirestore\r\n    .collection(\"posts\")\r\n    .get()\r\n    .then(querySnapshot =>\r\n      querySnapshot.docs.map(doc =>\r\n        DataUtils.firestorePostObjToJsOjb(doc.data())\r\n      )\r\n    )\r\n    .catch(\r\n      error =>\r\n        new Error(\r\n          \"Errow while fetching posts from Firestore. Error message: \",\r\n          error\r\n        )\r\n    );\r\n\r\nexport const addPostToFirestore = post =>\r\n  firebaseFirestore\r\n    .collection(\"posts\")\r\n    .add(DataUtils.jsPostObjToFirestoreObj(post))\r\n    .catch(\r\n      error =>\r\n        new Error(\r\n          \"Errow while adding post to Firestore. Error message: \",\r\n          error\r\n        )\r\n    );\r\n","class Post {\r\n  constructor(\r\n    id,\r\n    title,\r\n    shortDescription,\r\n    text,\r\n    author,\r\n    date,\r\n    tags,\r\n    mainImage\r\n  ) {\r\n    this._id = id;\r\n    this._title = title;\r\n    this._shortDescription = shortDescription;\r\n    this._text = text;\r\n    this._author = author;\r\n    this._date = date;\r\n    this._tags = tags;\r\n    this._mainImage = mainImage;\r\n  }\r\n\r\n  get id() {\r\n    return this._id;\r\n  }\r\n\r\n  get title() {\r\n    return this._title;\r\n  }\r\n\r\n  get shortDescription() {\r\n    return this._shortDescription;\r\n  }\r\n\r\n  get text() {\r\n    return this._text;\r\n  }\r\n\r\n  get author() {\r\n    return this._author;\r\n  }\r\n\r\n  get date() {\r\n    return this._date;\r\n  }\r\n\r\n  set date(date) {\r\n    this._date = date;\r\n  }\r\n\r\n  get tags() {\r\n    return this._tags;\r\n  }\r\n\r\n  get mainImage() {\r\n    return this._mainImage;\r\n  }\r\n}\r\n\r\nexport { Post };\r\n","import Chance from \"chance\";\r\nimport uuidv1 from \"uuid/v1\";\r\nimport DataUtils from \"./dataUtils\";\r\nimport { Post } from \"./\";\r\n\r\nclass DataGenerator {\r\n  constructor() {\r\n    this._data = [];\r\n    this._tags = [\"#javascript\", \"#css\", \"#rust\", \"#webpack\", \"#cargo\"];\r\n  }\r\n\r\n  _generate = quantity => {\r\n    const chance = new Chance();\r\n    for (let i = 0; i < quantity; i++) {\r\n      this._data.push(\r\n        new Post(\r\n          uuidv1(),\r\n          chance.sentence({ words: 6 }),\r\n          chance.paragraph({ sentences: 3 }),\r\n          DataUtils.generateExampleMarkdownText(),\r\n          \"twistezo\",\r\n          chance.date({\r\n            string: false,\r\n            american: false,\r\n            year: DataUtils.randomArrayItem([2016, 2017, 2018])\r\n          }),\r\n          DataUtils.arrayFromArrayRandomItems(this._tags),\r\n          \"https://avatars.dicebear.com/v2/identicon/\" +\r\n            chance.word({ length: 15 }) +\r\n            \".svg\"\r\n        )\r\n      );\r\n    }\r\n\r\n    return DataUtils.isNullEmptyOrUndefinded(this._data)\r\n      ? new Error(\"Generate data failed.\")\r\n      : this._data;\r\n  };\r\n\r\n  fetch = quantity =>\r\n    new Promise((resolve, reject) => {\r\n      const result = this._generate(quantity);\r\n      if (result instanceof Error) {\r\n        reject(\r\n          new Error(\"Error while fetching data. The data seems to be broken.\")\r\n        );\r\n      } else {\r\n        resolve(result);\r\n      }\r\n    });\r\n}\r\n\r\nexport default DataGenerator;\r\n","import Chance from \"chance\";\r\nimport showdown from \"showdown\";\r\nimport firebase from \"./firebase\";\r\nimport { firebaseFirestore } from \"../data/firebase\";\r\nimport hljs from \"highlight.js\";\r\nimport \"../dracula.css\";\r\nimport { Post } from \"../data/index\";\r\nimport DataGenerator from \"./generator\";\r\n\r\nclass DataUtils {\r\n  static randomArrayItem = array =>\r\n    array[Math.floor(Math.random() * array.length)];\r\n\r\n  static isNullEmptyOrUndefinded = value =>\r\n    value === null || value === [] || value === undefined || value.length === 0;\r\n\r\n  static arrayFromArrayRandomItems = array => {\r\n    const result = Array.from(array).filter(() => DataUtils.randomBoolean());\r\n    return result.length === 0 ? [array[0]] : result;\r\n  };\r\n\r\n  static randomBoolean = () => Math.random() >= 0.5;\r\n\r\n  static arrayContainsAllElementsFromAnother = (array0, array1) =>\r\n    array1\r\n      .map(a => {\r\n        return array0.some(b => {\r\n          return b === a;\r\n        });\r\n      })\r\n      .every(e => e);\r\n\r\n  static generateExampleMarkdownText = () => {\r\n    const chance = new Chance();\r\n    const randomSentence = words => chance.sentence({ words });\r\n    const randomParagraph = sentences =>\r\n      chance.paragraph({\r\n        sentences\r\n      });\r\n    const word = length => chance.word({ length });\r\n\r\n    return `### ${randomSentence(6)}\r\n        \\n ${randomParagraph(10)}\r\n        \\n![Alt Text](https://avatars.dicebear.com/v2/identicon/${word(\r\n          15\r\n        )}.svg =200x200)\r\n        \\nPhoto: *${randomSentence(6)}*\r\n        \\nVisit: <http://www.example.com>\r\n        \\n### ${randomSentence(6)}\r\n        \\n${randomParagraph(6)}\r\n        \\n${word()} ${word()}:\r\n        \\n* ${word()}\r\n        \\n* ${word()}\r\n        \\n* ${word()}\r\n        \\n### ${randomSentence(6)}\r\n        \\nSome code:\r\n        \\n\r\n        \\`\\`\\`\r\n        function resolveAfter2Seconds() {\r\n          return new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve('resolved');\r\n            }, 2000);\r\n          });\r\n        }\r\n        \r\n        async function asyncCall() {\r\n          console.log('calling');\r\n          var result = await resolveAfter2Seconds();\r\n          console.log(result);\r\n          // expected output: 'resolved'\r\n        }\r\n        \r\n        asyncCall();\r\n        \\`\\`\\`\r\n        `;\r\n  };\r\n\r\n  static convertMarkdownToHtml = markdownString =>\r\n    new showdown.Converter({ noHeaderId: true }).makeHtml(markdownString);\r\n\r\n  static updateCodeSyntaxHighlighting = () => {\r\n    document.querySelectorAll(\"pre code\").forEach(block => {\r\n      hljs.highlightBlock(block);\r\n    });\r\n  };\r\n\r\n  static jsPostObjToFirestoreObj = post => ({\r\n    id: post.id,\r\n    title: post.title,\r\n    shortDescription: post.shortDescription,\r\n    text: post.text,\r\n    author: post.author,\r\n    date: firebase.firestore.Timestamp.fromDate(post.date),\r\n    tags: post.tags,\r\n    mainImage: post.mainImage\r\n  });\r\n\r\n  static firestorePostObjToJsOjb = firestoreObj =>\r\n    new Post(\r\n      firestoreObj.id,\r\n      firestoreObj.title,\r\n      firestoreObj.shortDescription,\r\n      firestoreObj.text,\r\n      firestoreObj.author,\r\n      firestoreObj.date.toDate(),\r\n      firestoreObj.tags,\r\n      firestoreObj.mainImage\r\n    );\r\n\r\n  /**\r\n   * Use only for first time writing to firestore random generated data.\r\n   * It creates in firestore  `posts` collection with documents `post` by `post.id`.\r\n   */\r\n  static addPostsToFirestore = num => {\r\n    new DataGenerator()\r\n      .fetch(num)\r\n      .then(posts => {\r\n        posts.forEach(post => {\r\n          firebaseFirestore\r\n            .collection(\"posts\")\r\n            .doc(post.id)\r\n            .set(DataUtils.jsPostObjToFirestoreObj(post))\r\n            .catch(error =>\r\n              console.error(\"Skipping write document cause: \", error)\r\n            );\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\n\r\nexport default DataUtils;\r\n","import DataUtils from \"../data/dataUtils\";\r\n\r\nclass ReducersUtils {\r\n  static sortPostsByDateDesc = posts =>\r\n    posts.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n\r\n  static unwrapTagsFromPosts = posts => {\r\n    const allTags = Array.from(posts.map(post => post.tags).flat());\r\n    const uniqueTags = Array.from(new Set(allTags));\r\n\r\n    let uniqueWithQuantity = [];\r\n    uniqueTags.forEach(uniqueTag =>\r\n      uniqueWithQuantity.push({\r\n        name: uniqueTag,\r\n        quantity: allTags.filter(tag => tag === uniqueTag).length,\r\n        state: false\r\n      })\r\n    );\r\n\r\n    return uniqueWithQuantity;\r\n  };\r\n\r\n  static switchTagState = (tagName, tags) => {\r\n    let tag = tags.find(tag => tag.name === tagName);\r\n    tag.state = !tag.state;\r\n    return tags;\r\n  };\r\n\r\n  static filterPostsBy = (posts, filters) => {\r\n    const tags = filters.tags;\r\n    const dates = filters.dates;\r\n    const searchValue = filters.searchValue;\r\n\r\n    let filtered = [];\r\n    const switchedOnTags = tags.filter(tag => tag.state).map(tag => tag.name);\r\n    filtered = posts.filter(\r\n      post =>\r\n        // by tags\r\n        DataUtils.arrayContainsAllElementsFromAnother(\r\n          post.tags,\r\n          switchedOnTags\r\n        ) &&\r\n        // by searchValue (title)\r\n        post.title.toLowerCase().includes(searchValue.toLowerCase())\r\n    );\r\n\r\n    // by date - years\r\n    let switchedOnYears = dates\r\n      .filter(date => date.yearState)\r\n      .map(date => date.year);\r\n    if (switchedOnYears.length !== 0) {\r\n      filtered = filtered.filter(post =>\r\n        DataUtils.arrayContainsAllElementsFromAnother(switchedOnYears, [\r\n          post.date.getFullYear()\r\n        ])\r\n      );\r\n    }\r\n\r\n    // by date - months\r\n    let switchedOnMonths = dates\r\n      .map(date =>\r\n        date.months\r\n          .map(month => ({\r\n            year: date.year,\r\n            month: month.name,\r\n            state: month.state\r\n          }))\r\n          .flat()\r\n      )\r\n      .flat()\r\n      .filter(month => month.state);\r\n    if (switchedOnMonths.length !== 0) {\r\n      filtered = filtered.filter(\r\n        post =>\r\n          switchedOnMonths.some(\r\n            item => item.year === post.date.getFullYear()\r\n          ) &&\r\n          switchedOnMonths.some(\r\n            item => item.month === ReducersUtils.monthNameFromDate(post.date)\r\n          )\r\n      );\r\n    }\r\n    return ReducersUtils.sortPostsByDateDesc(filtered);\r\n  };\r\n\r\n  static unwrapDatesFromPosts = posts => {\r\n    const years = Array.from(\r\n      new Set(posts.map(post => post.date.getFullYear()))\r\n    );\r\n\r\n    let yearsWithMonths = [];\r\n    years.forEach(year =>\r\n      yearsWithMonths.push({\r\n        year: year,\r\n        yearState: false,\r\n        months: Array.from(\r\n          new Set(\r\n            posts\r\n              .filter(post => post.date.getFullYear() === year)\r\n              .map(post => ReducersUtils.monthNameFromDate(post.date))\r\n          )\r\n        ).map(month => ({\r\n          name: month,\r\n          quantity: ReducersUtils.postsQuantityByDate(posts, month, year),\r\n          state: false\r\n        }))\r\n      })\r\n    );\r\n    return yearsWithMonths;\r\n  };\r\n\r\n  static postsQuantityByDate = (posts, month, year) =>\r\n    posts.filter(\r\n      post =>\r\n        post.date.getFullYear() === year &&\r\n        ReducersUtils.monthNameFromDate(post.date) === month\r\n    ).length;\r\n\r\n  static monthNameFromDate = date =>\r\n    date.toLocaleString(\"en-us\", { month: \"long\" });\r\n\r\n  static switchDateState = (dateToSwitch, archiveDates) => {\r\n    if (dateToSwitch.month === undefined) {\r\n      let date = archiveDates.find(date => date.year === dateToSwitch.year);\r\n      date.yearState = !date.yearState;\r\n      // reset all months state\r\n      archiveDates.forEach(date =>\r\n        date.months.forEach(month => (month.state = false))\r\n      );\r\n    } else {\r\n      let month = archiveDates\r\n        .find(date => date.year === dateToSwitch.year)\r\n        .months.find(month => month.name === dateToSwitch.month);\r\n      month.state = !month.state;\r\n      // reset all years state\r\n      archiveDates.forEach(date => (date.yearState = false));\r\n    }\r\n    return archiveDates;\r\n  };\r\n\r\n  static resetFilters = filters => {\r\n    let reseted = Object.assign({}, filters);\r\n    reseted.tags.forEach(tag => (tag.state = false));\r\n    reseted.dates.forEach(date => (date.yearState = false));\r\n    reseted.dates.forEach(date =>\r\n      date.months.forEach(month => (month.state = false))\r\n    );\r\n    reseted.searchValue = \"\";\r\n    return reseted;\r\n  };\r\n}\r\n\r\nexport default ReducersUtils;\r\n","/**\r\n * Reducers\r\n *\r\n * Reducers specify how the application's state changes in response to actions\r\n * sent to the store. Remember that actions only describe what happened but\r\n * don't describe how the application's state changes.\r\n */\r\n\r\nimport { combineReducers } from \"redux\";\r\nimport ReducersUtils from \"./reducersUtils\";\r\n\r\nconst posts = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_POSTS\":\r\n      return {\r\n        data: [...ReducersUtils.sortPostsByDateDesc(action.posts)],\r\n        error: action.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const filteredPosts = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FILTER_POSTS\":\r\n      return [...ReducersUtils.filterPostsBy(action.posts, action.filters)];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filtersShape = {\r\n  tags: [],\r\n  dates: [],\r\n  searchValue: \"\"\r\n};\r\n\r\nconst filters = (state = filtersShape, action) => {\r\n  switch (action.type) {\r\n    case \"UNWRAP_TAGS\":\r\n      return {\r\n        ...state,\r\n        tags: [...ReducersUtils.unwrapTagsFromPosts(action.posts)]\r\n      };\r\n    case \"SWITCH_TAG\":\r\n      return {\r\n        ...state,\r\n        tags: [...ReducersUtils.switchTagState(action.tagName, state.tags)]\r\n      };\r\n    case \"UNWRAP_DATES\":\r\n      return {\r\n        ...state,\r\n        dates: [...ReducersUtils.unwrapDatesFromPosts(action.posts)]\r\n      };\r\n    case \"SWITCH_DATE_STATE\":\r\n      return {\r\n        ...state,\r\n        dates: [...ReducersUtils.switchDateState(action.date, state.dates)]\r\n      };\r\n    case \"HANDLE_SEARCH_INPUT\":\r\n      return {\r\n        ...state,\r\n        searchValue: action.value\r\n      };\r\n    case \"RESET_FILTERS\":\r\n      return ReducersUtils.resetFilters(action.filters);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  posts,\r\n  filteredPosts,\r\n  filters\r\n});\r\n","/**\r\n * Action creators\r\n *\r\n * Actions are payloads of information that send data from your application to your store.\r\n * They are the only source of information for the store.\r\n */\r\n\r\nimport { fetchPostsFromFirestore, addPostToFirestore } from \"../data/firebase\";\r\n\r\nconst fetchinghError = {\r\n  occured: false,\r\n  message: \"\"\r\n};\r\n\r\nconst postsFetched = (posts, error) => ({\r\n  type: \"FETCH_POSTS\",\r\n  posts,\r\n  error\r\n});\r\n\r\nexport const fetchPosts = () => (dispatch, getState) => {\r\n  fetchPostsFromFirestore()\r\n    .then(posts => {\r\n      dispatch(postsFetched(posts, fetchinghError));\r\n      dispatch(unwrapTags(posts));\r\n      dispatch(unwrapDates(posts));\r\n      dispatch(filterPosts(posts, getState().filters));\r\n    })\r\n    .catch(error => {\r\n      let fetchingError = fetchinghError;\r\n      fetchingError.occured = true;\r\n      fetchingError.message = error.message;\r\n      return dispatch(postsFetched([], fetchingError));\r\n    });\r\n};\r\n\r\nexport const addPost = post => dispatch => {\r\n  addPostToFirestore(post).then(() => dispatch(fetchPosts()));\r\n};\r\n\r\nexport const filterPosts = (posts, filters) => ({\r\n  type: \"FILTER_POSTS\",\r\n  posts,\r\n  filters\r\n});\r\n\r\nexport const unwrapTags = posts => ({\r\n  type: \"UNWRAP_TAGS\",\r\n  posts\r\n});\r\n\r\nexport const switchTagState = tagName => ({\r\n  type: \"SWITCH_TAG\",\r\n  tagName\r\n});\r\n\r\nexport const unwrapDates = posts => ({\r\n  type: \"UNWRAP_DATES\",\r\n  posts\r\n});\r\n\r\nexport const switchDateState = date => ({\r\n  type: \"SWITCH_DATE_STATE\",\r\n  date\r\n});\r\n\r\nexport const handleSearchInput = value => ({\r\n  type: \"HANDLE_SEARCH_INPUT\",\r\n  value\r\n});\r\n\r\nexport const resetFilters = filters => ({\r\n  type: \"RESET_FILTERS\",\r\n  filters\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { Form, FormControl } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PUBLIC_URL } from \"../../index\";\r\n\r\nclass SearchForm extends Component {\r\n  handleSearchFormInputChange = event => {\r\n    const value = event.target.value;\r\n    this.props.handleSearchInput(value);\r\n\r\n    let filters = Object.assign({}, this.props.filters);\r\n    filters.searchValue = value;\r\n    this.props.filterPosts(this.props.posts, filters);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form inline>\r\n        <Link to={PUBLIC_URL + \"/search\"}>\r\n          <FormControl\r\n            className=\"mr-sm-2\"\r\n            name=\"search\"\r\n            type=\"text\"\r\n            value={this.props.filters.searchValue}\r\n            placeholder=\"search\"\r\n            onChange={this.handleSearchFormInputChange}\r\n          />\r\n        </Link>\r\n        <i className=\"fas fa-search\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForm;\r\n","import { connect } from \"react-redux\";\r\nimport { filterPosts, handleSearchInput } from \"../actions\";\r\nimport SearchForm from \"../components/Navbar/SearchForm\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.data,\r\n  filters: state.filters\r\n});\r\n\r\nconst mapDispatchToProps = { filterPosts, handleSearchInput };\r\n\r\nexport const SearchFormContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SearchForm);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar as BsNavbar, Form, Button, Container } from \"react-bootstrap\";\r\nimport { SearchFormContainer } from \"../../containers/SearchFormContainer\";\r\nimport { PUBLIC_URL } from \"../../index\";\r\n\r\nclass Navbar extends Component {\r\n  handleLogoClick = () => {\r\n    this.props.resetFilters(this.props.filters);\r\n    this.props.filterPosts(this.props.posts, {\r\n      tags: [],\r\n      dates: [],\r\n      searchValue: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BsNavbar bg=\"dark\" variant=\"dark\" className=\"sticky-top text-center\">\r\n        <Container>\r\n          <Link to={PUBLIC_URL + \"/\"} onClick={this.handleLogoClick}>\r\n            <BsNavbar.Brand className=\"ml-4\">Home</BsNavbar.Brand>\r\n          </Link>\r\n          <SearchFormContainer />\r\n          <Form inline>\r\n            <Link to={PUBLIC_URL + \"/addpost\"}>\r\n              <Button variant=\"outline-info mr-4\">Add Post</Button>\r\n            </Link>\r\n            <Button variant=\"outline-info mr-4\">Sign in</Button>\r\n          </Form>\r\n        </Container>\r\n      </BsNavbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import { connect } from \"react-redux\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport { resetFilters, filterPosts } from \"../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.data,\r\n  filters: state.filters\r\n});\r\n\r\nconst mapDispatchToProps = { resetFilters, filterPosts };\r\n\r\nexport const NavbarContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass AboutMe extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h4>About Me</h4>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutMe;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Badge } from \"react-bootstrap\";\r\nimport { PUBLIC_URL } from \"../../index\";\r\n\r\nclass Tags extends Component {\r\n  onTagClick = (event, tagName) => {\r\n    this.props.switchTagState(tagName);\r\n    this.props.filterPosts(this.props.posts, this.props.filters);\r\n    event.preventDefault();\r\n  };\r\n\r\n  Tags = () => {\r\n    const tags = this.props.filters.tags;\r\n    return tags.length > 0\r\n      ? tags.map(tag => (\r\n          <div\r\n            className=\"mr-2 alert-link\"\r\n            key={tag.name}\r\n            onClick={event => this.onTagClick(event, tag.name)}\r\n          >\r\n            <Link to={PUBLIC_URL + \"/search\"}>\r\n              {tag.name}\r\n              {tag.state ? (\r\n                <i className=\"far fa-check-square ml-2\" />\r\n              ) : (\r\n                <Badge variant=\"secondary\" className=\"ml-2\">\r\n                  {tag.quantity}\r\n                </Badge>\r\n              )}\r\n            </Link>\r\n          </div>\r\n        ))\r\n      : \"\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div>\r\n          <h4>Tags</h4>\r\n          <span className=\"d-flex flex-wrap\">\r\n            <this.Tags />\r\n          </span>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tags;\r\n","import { connect } from \"react-redux\";\r\nimport { switchTagState, filterPosts } from \"../actions\";\r\nimport Tags from \"../components/SidePanel/Tags\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    posts: state.posts.data,\r\n    filters: state.filters\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { switchTagState, filterPosts };\r\n\r\nexport const TagsContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Tags);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Badge } from \"react-bootstrap\";\r\nimport { PUBLIC_URL } from \"../../index\";\r\n\r\nclass Archives extends Component {\r\n  onDateClick = (event, year, month) => {\r\n    this.props.switchDateState({ year, month });\r\n    this.props.filterPosts(this.props.posts, this.props.filters);\r\n    event.preventDefault();\r\n  };\r\n\r\n  Dates = () => {\r\n    const dates = this.props.filters.dates;\r\n    return dates.length > 0\r\n      ? dates.map(date => (\r\n          <ul key={date.year} className=\"list-unstyled\">\r\n            <div\r\n              className=\"alert-link\"\r\n              onClick={event => this.onDateClick(event, date.year)}\r\n            >\r\n              <Link to={PUBLIC_URL + \"/search\"}>\r\n                {date.year}\r\n                {date.yearState ? (\r\n                  <i className=\"far fa-check-square ml-2\" />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Link>\r\n            </div>\r\n            {date.months.map(month => (\r\n              <li key={month.name}>\r\n                <div\r\n                  className=\"alert-link\"\r\n                  onClick={event =>\r\n                    this.onDateClick(event, date.year, month.name)\r\n                  }\r\n                >\r\n                  <Link to={PUBLIC_URL + \"/search\"}>\r\n                    {month.name}\r\n                    {month.state ? (\r\n                      <i className=\"far fa-check-square ml-2\" />\r\n                    ) : (\r\n                      <Badge variant=\"secondary\" className=\"ml-2\">\r\n                        {month.quantity}\r\n                      </Badge>\r\n                    )}\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ))\r\n      : \"\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h4>Archive posts</h4>\r\n        <this.Dates />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Archives;\r\n","import { connect } from \"react-redux\";\r\nimport { filterPosts, switchDateState } from \"../actions\";\r\nimport Archive from \"../components/SidePanel/Archives\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.data,\r\n  filters: state.filters\r\n});\r\n\r\nconst mapDispatchToProps = { filterPosts, switchDateState };\r\n\r\nexport const ArchivesContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Archive);\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport AboutMe from \"./AboutMe\";\r\nimport { TagsContainer } from \"../../containers/TagsContainer\";\r\nimport { ArchivesContainer } from \"../../containers/ArchivesContainer\";\r\n\r\nclass SidePanel extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className=\"pb-2\">\r\n          <AboutMe />\r\n        </Row>\r\n        <Row className=\"pb-2\">\r\n          <TagsContainer />\r\n        </Row>\r\n        <Row className=\"pb-2\">\r\n          <ArchivesContainer />\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidePanel;\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PUBLIC_URL } from \"../../../index\";\r\n\r\nclass PostsCard extends Component {\r\n  render() {\r\n    const post = this.props.post;\r\n    const postURL = PUBLIC_URL + \"/post/id-\" + post.id;\r\n    return (\r\n      <Container className=\"mb-2\">\r\n        <div className=\"card mb-3\">\r\n          <div className=\"row no-gutters\">\r\n            <div className=\"col-md-3 d-flex flex-wrap align-items-center\">\r\n              <Link to={postURL}>\r\n                <img src={post.mainImage} className=\"card-img pl-3\" alt=\"\" />\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-9\">\r\n              <div className=\"card-body\">\r\n                <Link to={postURL}>\r\n                  <h5 className=\"card-title\">{post.title}</h5>\r\n                </Link>\r\n                <p className=\"card-text\">\r\n                  {post.shortDescription.substring(0, 150) + \"...\"}\r\n                </p>\r\n                <span className=\"card-text\">\r\n                  <p className=\"text-muted mb-0\">\r\n                    {post.author +\r\n                      \", \" +\r\n                      post.date.toLocaleString(\"pl-PL\", {\r\n                        day: \"numeric\",\r\n                        month: \"numeric\",\r\n                        year: \"numeric\"\r\n                      })}\r\n                  </p>\r\n                  <p className=\"text-muted mb-0\">\r\n                    {post.tags.map(tag => (\r\n                      <span key={tag} className=\"pr-2\">\r\n                        {tag}\r\n                      </span>\r\n                    ))}\r\n                  </p>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostsCard;\r\n","import React, { Component } from \"react\";\r\nimport PostCardHorizontal from \"./PostCards/PostCardHorizontal\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass SearchResult extends Component {\r\n  PostCards = () => {\r\n    return this.props.filteredPosts.map(post => (\r\n      <PostCardHorizontal key={post.id} post={post} />\r\n    ));\r\n  };\r\n\r\n  EmptyResult = () => {\r\n    return (\r\n      <div className=\"text-center pt-5\">\r\n        <div className=\"pb-2\">\r\n          <h2>Nothing here...</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.props.filteredPosts.length !== 0 ? (\r\n          <this.PostCards />\r\n        ) : (\r\n          <this.EmptyResult />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResult;\r\n","import { connect } from \"react-redux\";\r\nimport SearchResult from \"../components/MainPanel/SearchResult\";\r\n\r\nconst mapStateToProps = state => ({\r\n  filteredPosts: state.filteredPosts\r\n});\r\n\r\nexport const SearchResultContainer = connect(mapStateToProps)(SearchResult);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PUBLIC_URL } from \"../../../index\";\r\n\r\nclass PostsCardVertical extends Component {\r\n  render() {\r\n    const post = this.props.post;\r\n    const postURL = PUBLIC_URL + \"/post/id-\" + post.id;\r\n    return (\r\n      <div className=\"card\">\r\n        <Link to={postURL}>\r\n          <img src={post.mainImage} className=\"card-img-top pt-3\" alt=\"\" />\r\n        </Link>\r\n        <div className=\"card-body\">\r\n          <Link to={postURL}>\r\n            <h4 className=\"card-title\">{post.title}</h4>\r\n          </Link>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <p className=\"text-muted mb-0\">\r\n            {post.author +\r\n              \", \" +\r\n              post.date.toLocaleString(\"pl-PL\", {\r\n                day: \"numeric\",\r\n                month: \"numeric\",\r\n                year: \"numeric\"\r\n              })}\r\n          </p>\r\n          <p className=\"text-muted mb-0\">\r\n            {post.tags.map(tag => (\r\n              <span key={tag} className=\"pr-2\">\r\n                {tag}\r\n              </span>\r\n            ))}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostsCardVertical;\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport PostCardHorizontal from \"./PostCards/PostCardHorizontal\";\r\nimport PostCardVertical from \"./PostCards/PostCardVertical\";\r\n\r\nclass MainBoard extends Component {\r\n  static headPostsNum = 2;\r\n\r\n  HeadPosts = () => {\r\n    const headCards = this.props.filteredPosts\r\n      .slice(0, MainBoard.headPostsNum)\r\n      .map(post => <PostCardVertical key={post.id} post={post} />);\r\n    return <div className=\"card-deck\">{headCards}</div>;\r\n  };\r\n\r\n  PostCards = () => {\r\n    return this.props.filteredPosts\r\n      .slice(MainBoard.headPostsNum)\r\n      .map(post => <PostCardHorizontal key={post.id} post={post} />);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h4>Latest posts</h4>\r\n        <this.HeadPosts />\r\n        <hr />\r\n        <this.PostCards />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainBoard;\r\n","import { connect } from \"react-redux\";\r\nimport MainBoard from \"../components/MainPanel/MainBoard\";\r\n\r\nconst mapStateToProps = state => ({\r\n  filteredPosts: state.filteredPosts\r\n});\r\n\r\nexport const MainBoardContainer = connect(mapStateToProps)(MainBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport DataUtils from \"../../data/dataUtils\";\r\n\r\nclass Post extends Component {\r\n  componentDidMount() {\r\n    DataUtils.updateCodeSyntaxHighlighting();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    DataUtils.updateCodeSyntaxHighlighting();\r\n  }\r\n\r\n  PostContainer = () => {\r\n    const post = this.props.posts.find(\r\n      post => post.id === this.props.routeParamId\r\n    );\r\n    const text = DataUtils.convertMarkdownToHtml(post.text);\r\n    return (\r\n      <div>\r\n        <h1>{post.title}</h1>\r\n        <p>{post.shortDescription}</p>\r\n        <div\r\n          className=\"content pt-3\"\r\n          dangerouslySetInnerHTML={{ __html: text }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <this.PostContainer />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import { connect } from \"react-redux\";\r\nimport Post from \"../components/MainPanel/Post\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.data\r\n});\r\n\r\nexport const PostContainer = connect(mapStateToProps)(Post);\r\n","import React, { Component } from \"react\";\r\nimport DataUtils from \"../../../data/dataUtils\";\r\n\r\nclass Preview extends Component {\r\n  componentDidMount() {\r\n    DataUtils.updateCodeSyntaxHighlighting();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    DataUtils.updateCodeSyntaxHighlighting();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pt-3\">\r\n        <h4>Live preview</h4>\r\n        <hr />\r\n        <h1>{this.props.title}</h1>\r\n        <p>{this.props.shortDescription}</p>\r\n        <div\r\n          className=\"content pt-3\"\r\n          dangerouslySetInnerHTML={{\r\n            __html: DataUtils.convertMarkdownToHtml(this.props.parsedText)\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Preview;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nclass FormattingHelp extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"pt-4\">\r\n        <h4>Formatting options (only in Post body)</h4>\r\n        <Table bordered>\r\n          <thead>\r\n            <tr>\r\n              <th>Usage</th>\r\n              <th>Example</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>### header h3</td>\r\n              <td>\r\n                <h3>header h3</h3>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>#### header h4</td>\r\n              <td>\r\n                <h4>header h4</h4>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>*italics*</td>\r\n              <td>\r\n                <em>italics</em>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>**bold**</td>\r\n              <td>\r\n                <strong>bold</strong>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>`code`</td>\r\n              <td>\r\n                <code>code</code>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>```</p>\r\n                <p>randomArrayItem = array...</p>\r\n                <p>array[Math.floor...</p>\r\n                <p>```</p>\r\n              </td>\r\n              <td>\r\n                <pre>\r\n                  <code>\r\n                    <p>randomArrayItem = array =></p>\r\n                    <p>\r\n                      &nbsp;&nbsp;array[Math.floor(Math.random() *\r\n                      array.length)];\r\n                    </p>\r\n                  </code>\r\n                </pre>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>![alt text](url = 30x30)</td>\r\n              <td>\r\n                <img\r\n                  alt=\"Alt Text\"\r\n                  src=\"https://avatars.dicebear.com/v2/identicon/test.svg\"\r\n                  width=\"30\"\r\n                  height=\"30\"\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>{\"<http://www.example.com>\"}</td>\r\n              <td>\r\n                <a href=\"http://www.example.com\">http://www.example.com</a>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormattingHelp;\r\n","import React, { Component } from \"react\";\r\nimport uuidv1 from \"uuid/v1\";\r\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Post } from \"../../../data/index\";\r\nimport DataUtils from \"../../../data/dataUtils\";\r\nimport Preview from \"./Preview\";\r\nimport FormattingHelp from \"./FormattingHelp\";\r\n\r\nclass AddPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formInput: {\r\n        title: \"\",\r\n        shortDescription: \"\",\r\n        text: \"\"\r\n      },\r\n      parsedText: \"\",\r\n      controllers: {\r\n        showFormattingHelp: false,\r\n        shouldClearPastedExample: false\r\n      }\r\n    };\r\n  }\r\n\r\n  handleShowFormattingHelp = () => {\r\n    const current = this.state.controllers.showFormattingHelp;\r\n    this.setState({\r\n      ...this.state,\r\n      controllers: { showFormattingHelp: !current }\r\n    });\r\n  };\r\n\r\n  handlePasteExample = () => {\r\n    const shouldClearPastedExample = !this.state.controllers\r\n      .shouldClearPastedExample;\r\n    const title = shouldClearPastedExample ? \"Example title\" : \"\";\r\n    const shortDescription = shouldClearPastedExample\r\n      ? \"Example short description\"\r\n      : \"\";\r\n    const text = shouldClearPastedExample\r\n      ? DataUtils.generateExampleMarkdownText()\r\n      : \"\";\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      formInput: {\r\n        title,\r\n        shortDescription,\r\n        text\r\n      },\r\n      parsedText: text,\r\n      controllers: {\r\n        ...this.state.controllers,\r\n        shouldClearPastedExample\r\n      }\r\n    });\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    let text = event.target.value;\r\n    const parsedText =\r\n      event.target.name === \"text\" ? text : this.state.parsedText;\r\n    this.setState({\r\n      ...this.state,\r\n      formInput: {\r\n        ...this.state.formInput,\r\n        [event.target.name]: text\r\n      },\r\n      parsedText\r\n    });\r\n  };\r\n\r\n  handleAddPost = () => {\r\n    this.props.addPost(\r\n      new Post(\r\n        uuidv1(),\r\n        this.state.formInput.title,\r\n        this.state.formInput.shortDescription,\r\n        this.state.parsedText,\r\n        \"twistezo\",\r\n        new Date(),\r\n        [\"#rust\", \"#javascript\", \"#linux\"],\r\n        \"https://avatars.dicebear.com/v2/identicon/test.svg\"\r\n      )\r\n    );\r\n  };\r\n\r\n  Form = () => {\r\n    return (\r\n      <div className=\"pt-4\">\r\n        <h4>Create your post!</h4>\r\n        <hr />\r\n        <Form className=\"pt-2\">\r\n          <Form.Group>\r\n            <Form.Control\r\n              name=\"title\"\r\n              value={this.state.formInput.title}\r\n              type=\"text\"\r\n              placeholder=\"Post title\"\r\n              required\r\n              maxLength=\"30\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Control\r\n              name=\"shortDescription\"\r\n              as=\"textarea\"\r\n              value={this.state.formInput.shortDescription}\r\n              placeholder=\"Short description\"\r\n              required\r\n              rows=\"3\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Control\r\n              name=\"text\"\r\n              as=\"textarea\"\r\n              value={this.state.formInput.text}\r\n              placeholder=\"Post body\"\r\n              rows=\"10\"\r\n              required\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Button onClick={this.handleAddPost}>Add</Button>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  Helper = () => {\r\n    return (\r\n      <div>\r\n        <h4>Need a little help?</h4>\r\n        <hr />\r\n        <Col>\r\n          <Row className=\"pt-2\">\r\n            <span>Formatting options:</span>\r\n            <Button className=\"ml-2\" onClick={this.handleShowFormattingHelp}>\r\n              {this.state.controllers.showFormattingHelp ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </Row>\r\n          <Row className=\"pt-2\">\r\n            <span>Example post:</span>\r\n            <Button className=\"ml-2\" onClick={this.handlePasteExample}>\r\n              {this.state.controllers.shouldClearPastedExample\r\n                ? \"Clear\"\r\n                : \"Paste\"}\r\n            </Button>\r\n          </Row>\r\n        </Col>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <this.Helper />\r\n        {this.state.controllers.showFormattingHelp && <FormattingHelp />}\r\n        <this.Form />\r\n        <Preview\r\n          title={this.state.formInput.title}\r\n          shortDescription={this.state.formInput.shortDescription}\r\n          parsedText={this.state.parsedText}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddPost;\r\n","import { connect } from \"react-redux\";\r\nimport AddPost from \"../components/MainPanel/AddPost/AddPost\";\r\nimport { addPost, filterPosts, unwrapTags, unwrapDates } from \"../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts,\r\n  filters: state.filters\r\n});\r\n\r\nconst mapDispatchToProps = { addPost, filterPosts, unwrapTags, unwrapDates };\r\n\r\nexport const AddPostContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddPost);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport { NavbarContainer } from \"../containers/NavbarContainer\";\r\nimport SidePanel from \"./SidePanel/SidePanel\";\r\nimport { SearchResultContainer } from \"../containers/SearchResultContainer\";\r\nimport { MainBoardContainer } from \"../containers/MainBoardContainer\";\r\nimport { PostContainer } from \"../containers/PostContainer\";\r\nimport { AddPostContainer } from \"../containers/AddPostContainer\";\r\nimport { PUBLIC_URL } from \"../index\";\r\n// import DataUtils from \"../data/dataUtils\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      error: {\r\n        occured: false,\r\n        message: \"\"\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchPosts();\r\n    // DataUtils.addPostsToFirestore(20);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // console.log(window.store.getState());\r\n    const posts = this.props.posts;\r\n    if (posts !== prevProps.posts) {\r\n      this.setState({\r\n        error: {\r\n          occured: posts.error.occured,\r\n          message: posts.error.message\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ErrorContainer = () => {\r\n    return (\r\n      <div className=\"text-center pt-5\">\r\n        <div className=\"pb-2\">\r\n          <h2>Error. Please reload the page.</h2>\r\n          <h5>Error message: \"{this.state.error.message}\"</h5>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  WaitContainer = () => {\r\n    return (\r\n      <div className=\"text-center pt-5\">\r\n        <div className=\"pb-2\">\r\n          <h2>Downloading data...</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  MainContainer = () => {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <NavbarContainer />\r\n          <Container>\r\n            <Row className=\"pt-5\">\r\n              <Col sm={3}>\r\n                <SidePanel />\r\n              </Col>\r\n              <Col sm={9}>\r\n                <Switch>\r\n                  <Route\r\n                    exact\r\n                    path={PUBLIC_URL + \"/\"}\r\n                    component={MainBoardContainer}\r\n                  />\r\n                  <Route\r\n                    path={PUBLIC_URL + \"/search\"}\r\n                    component={SearchResultContainer}\r\n                  />\r\n                  <Route\r\n                    path={PUBLIC_URL + \"/post/id-:id\"}\r\n                    component={route => (\r\n                      <PostContainer routeParamId={route.match.params.id} />\r\n                    )}\r\n                  />\r\n                  <Route\r\n                    path={PUBLIC_URL + \"/addpost\"}\r\n                    component={AddPostContainer}\r\n                  />\r\n                </Switch>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </Router>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.props.posts.length !== 0 && !this.state.error.occured) {\r\n      return <this.MainContainer />;\r\n    } else if (this.state.error.occured) {\r\n      return <this.ErrorContainer />;\r\n    } else {\r\n      return <this.WaitContainer />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { connect } from \"react-redux\";\r\nimport { fetchPosts, filterPosts, unwrapTags, unwrapDates } from \"../actions\";\r\nimport App from \"../components/App\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts,\r\n  filters: state.filters\r\n});\r\n\r\nconst mapDispatchToProps = { fetchPosts, filterPosts, unwrapTags, unwrapDates };\r\n\r\nexport const AppContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport { AppContainer } from \"./containers/AppContainer\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./index.scss\";\r\n\r\nexport const PUBLIC_URL = process.env.PUBLIC_URL;\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n// TODO: Remove. For debugging purposes only!\r\nwindow.store = store;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <AppContainer />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
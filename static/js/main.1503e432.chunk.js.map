{"version":3,"sources":["data/firebase.js","data/index.js","data/generator.js","data/dataUtils.js","reducers/reducersUtils.js","reducers/index.js","actions/index.js","components/Navbar/SearchForm.js","containers/SearchFormContainer.js","components/Navbar/SignInForm.js","containers/SignInFormContainer.js","components/Navbar/Navbar.js","containers/NavbarContainer.js","components/SidePanel/AboutMe.js","components/SidePanel/Tags.js","containers/TagsContainer.js","components/SidePanel/Archives.js","containers/ArchivesContainer.js","components/SidePanel/SidePanel.js","components/MainPanel/PostCards/PostCardHorizontal.js","components/MainPanel/PostCards/PostCardVertical.js","components/MainPanel/PostCards/PostCard.js","containers/PostCardContainer.js","components/MainPanel/SearchResult.js","containers/SearchResultContainer.js","components/MainPanel/MainBoard.js","containers/MainBoardContainer.js","components/MainPanel/Post.js","containers/PostContainer.js","components/MainPanel/AddPost/Preview.js","components/MainPanel/AddPost/FormattingHelp.js","components/MainPanel/AddPost/AddPost.js","containers/AddPostContainer.js","components/MainPanel/Settings.js","containers/SettingsContainer.js","components/App.js","containers/AppContainer.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseFirestore","firestore","Post","id","title","shortDescription","text","author","date","tags","mainImage","Object","classCallCheck","this","_id","_title","_shortDescription","_text","_author","_date","_tags","_mainImage","DataGenerator","_this","_generate","quantity","chance","Chance","examplePost","DataUtils","generateExampleMarkdownPost","i","_data","push","uuidv1","string","american","year","randomArrayItem","arrayFromArrayRandomItems","word","length","isNullEmptyOrUndefinded","Error","fetch","Promise","resolve","reject","result","array","Math","floor","random","value","undefined","Array","from","filter","randomBoolean","arrayContainsAllElementsFromAnother","array0","array1","map","a","some","b","every","e","nextArrayItem","currentIndex","getEmailPrefix","email","slice","indexOf","randomSentence","words","sentence","randomParagraph","sentences","paragraph","randomImageSrc","concat","convertMarkdownToHtml","markdownString","showdown","Converter","noHeaderId","makeHtml","updateCodeSyntaxHighlighting","document","querySelectorAll","forEach","block","hljs","highlightBlock","jsPostObjToFirestoreObj","post","Timestamp","fromDate","firestorePostObjToJsOjb","firestoreObj","toDate","addPostsToFirestore","num","then","posts","collection","doc","set","catch","error","console","err","log","ReducersUtils","sortPostsByDateDesc","sort","Date","unwrapTagsFromPosts","allTags","flat","uniqueTags","Set","uniqueWithQuantity","uniqueTag","name","tag","state","switchTagState","tagName","find","filterPostsBy","filters","dates","searchValue","filtered","switchedOnTags","toLowerCase","includes","switchedOnYears","yearState","getFullYear","switchedOnMonths","months","month","item","monthNameFromDate","unwrapDatesFromPosts","years","yearsWithMonths","postsQuantityByDate","toLocaleString","switchDateState","dateToSwitch","archiveDates","resetFilters","reseted","assign","filtersShape","authShape","displayName","isSignedIn","errorMessage","combineReducers","arguments","action","type","data","toConsumableArray","fetchingError","filteredPosts","objectSpread","auth","fetchPosts","dispatch","getState","get","querySnapshot","docs","postsFetchedSuccess","unwrapTags","unwrapDates","filterPosts","signedIn","fetchedUserData","SearchForm","handleSearchFormInputChange","event","target","props","handleSearchInput","react_default","createElement","Form","inline","className","Link","to","PUBLIC_URL","FormControl","placeholder","onChange","Component","mapDispatchToProps","SearchFormContainer","connect","SignInForm","possibleConstructorReturn","getPrototypeOf","call","handleSignIn","signIn","formData","password","onSignInFormHide","handleHideSignInModal","handleFormInputChange","targetName","targetValue","setState","defineProperty","Modal","show","signInModalShow","onHide","size","aria-labelledby","centered","Header","closeButton","Title","Body","Group","Control","required","Row","Col","Button","onClick","signInWithEmailAndPassword","user","currentUser","userEmail","fetchSignedInUserData","message","SignInFormContainer","Navbar","handleLogoClick","handleSignInClick","signOut","es_Navbar","bg","variant","Container","Brand","NavbarContainer","iconSize","height","width","AboutMe","src","alt","react_social_icons","url","style","Tags","onTagClick","preventDefault","key","Badge","TagsContainer","Archives","onDateClick","Dates","ArchivesContainer","Archive","SidePanel","SidePanel_AboutMe","PostsCardHorizontal","postURL","substring","day","ButtonGroup","onEditPost","onRemovePost","PostCardVertical","PostsCard","handleEditPost","handleRemovePost","removePost","HorizontalCard","PostCardHorizontal","VerticalCard","PostCards_PostCardVertical","cardVersion","postId","delete","removePostByIdFromFirestore","PostCardContainer","PostCard","SearchResult","PostCards","EmptyResult","SearchResultContainer","MainBoard","HeadPosts","headPostsNum","MainBoardContainer","PostContainer","routeParamId","dangerouslySetInnerHTML","__html","Preview","sm","parsedText","FormattingHelp","Table","bordered","href","AddPost","handleShowFormattingHelp","current","controllers","showFormattingHelp","handlePasteExample","shouldClearPastedExample","generatedExample","mainImageSrc","formInput","handleInputChange","handleAddPost","addPost","authDisplayName","maxLength","as","rows","Helper","AddPost_FormattingHelp","AddPost_Preview","addPostToFirestore","AddPostContainer","Settings","handleRemoveAllPosts","handleUserDataChange","SettingsContainer","App","ErrorContainer","WaitContainer","waitMessages","findIndex","m","waitMessage","setTimeout","MainContainer","BrowserRouter","components_SidePanel_SidePanel","Switch","Route","exact","path","component","route","match","params","prevProps","AppContainer","Boolean","window","location","hostname","__webpack_require__","d","__webpack_exports__","process","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1503e432.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport DataUtils from './dataUtils'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBU_CK4oTRzwPIOjZWQn8tpF5kOcnESnps',\n  authDomain: 'twistezo-blog.firebaseapp.com',\n  databaseURL: 'https://twistezo-blog.firebaseio.com',\n  projectId: 'twistezo-blog',\n  storageBucket: 'twistezo-blog.appspot.com',\n  messagingSenderId: '1065707028990'\n}\nfirebase.initializeApp(firebaseConfig)\n\nexport default firebase\nexport const firebaseFirestore = firebase.firestore()\n\nexport const fetchPostsFromFirestore = () =>\n  firebaseFirestore\n    .collection('posts')\n    .get()\n    .then(querySnapshot =>\n      querySnapshot.docs.map(doc =>\n        DataUtils.firestorePostObjToJsOjb(doc.data())\n      )\n    )\n    .catch(\n      error => new Error('Errow while fetching posts. Error message: ', error)\n    )\n\nexport const addPostToFirestore = post =>\n  firebaseFirestore\n    .collection('posts')\n    .doc(post.id)\n    .set(DataUtils.jsPostObjToFirestoreObj(post))\n    .catch(\n      error => new Error('Errow while adding post. Error message: ', error)\n    )\n\nexport const removePostByIdFromFirestore = postId =>\n  firebaseFirestore\n    .collection('posts')\n    .doc(postId)\n    .delete()\n    .catch(\n      error => new Error('Errow while removing post. Error message: ', error)\n    )\n\nexport const signInWithEmailAndPassword = (email, password) =>\n  firebase.auth().signInWithEmailAndPassword(email, password)\n\nexport const fetchSignedInUserData = () => {\n  const user = firebase.auth().currentUser\n  const userEmail = user.email\n  const displayName = user.displayName\n  const newDisplayName =\n    displayName === null ? DataUtils.getEmailPrefix(userEmail) : displayName\n  return {\n    name: newDisplayName,\n    email: userEmail\n  }\n}\n\nexport const signOutUser = () => firebase.auth().signOut()\n","class Post {\n  constructor(\n    id,\n    title,\n    shortDescription,\n    text,\n    author,\n    date,\n    tags,\n    mainImage\n  ) {\n    this._id = id\n    this._title = title\n    this._shortDescription = shortDescription\n    this._text = text\n    this._author = author\n    this._date = date\n    this._tags = tags\n    this._mainImage = mainImage\n  }\n\n  get id() {\n    return this._id\n  }\n\n  get title() {\n    return this._title\n  }\n\n  get shortDescription() {\n    return this._shortDescription\n  }\n\n  get text() {\n    return this._text\n  }\n\n  get author() {\n    return this._author\n  }\n\n  get date() {\n    return this._date\n  }\n\n  set date(date) {\n    this._date = date\n  }\n\n  get tags() {\n    return this._tags\n  }\n\n  get mainImage() {\n    return this._mainImage\n  }\n}\n\nexport { Post }\n","import Chance from 'chance'\nimport uuidv1 from 'uuid/v1'\nimport DataUtils from './dataUtils'\nimport { Post } from './'\n\nclass DataGenerator {\n  constructor() {\n    this._data = []\n    this._tags = ['#javascript', '#css', '#rust', '#webpack', '#cargo']\n  }\n\n  _generate = quantity => {\n    const chance = new Chance()\n    const examplePost = DataUtils.generateExampleMarkdownPost()\n    for (let i = 0; i < quantity; i++) {\n      this._data.push(\n        new Post(\n          uuidv1(),\n          examplePost.title,\n          examplePost.shortDescription,\n          examplePost.text,\n          'twistezo',\n          chance.date({\n            string: false,\n            american: false,\n            year: DataUtils.randomArrayItem([2016, 2017, 2018])\n          }),\n          DataUtils.arrayFromArrayRandomItems(this._tags),\n          'https://avatars.dicebear.com/v2/identicon/' +\n            chance.word({ length: 15 }) +\n            '.svg'\n        )\n      )\n    }\n\n    return DataUtils.isNullEmptyOrUndefinded(this._data)\n      ? new Error('Generate data failed.')\n      : this._data\n  }\n\n  fetch = quantity =>\n    new Promise((resolve, reject) => {\n      const result = this._generate(quantity)\n      if (result instanceof Error) {\n        reject(\n          new Error('Error while fetching data. The data seems to be broken.')\n        )\n      } else {\n        resolve(result)\n      }\n    })\n}\n\nexport default DataGenerator\n","import Chance from 'chance'\nimport showdown from 'showdown'\nimport firebase from './firebase'\nimport { firebaseFirestore } from '../data/firebase'\nimport hljs from 'highlight.js'\nimport '../styles/_dracula.scss'\nimport { Post } from '../data/index'\nimport DataGenerator from './generator'\n\nclass DataUtils {\n  static randomArrayItem = array =>\n    array[Math.floor(Math.random() * array.length)]\n\n  static isNullEmptyOrUndefinded = value =>\n    value === null || value === [] || value === undefined || value.length === 0\n\n  static arrayFromArrayRandomItems = array => {\n    const result = Array.from(array).filter(() => DataUtils.randomBoolean())\n    return result.length === 0 ? [array[0]] : result\n  }\n\n  static randomBoolean = () => Math.random() >= 0.5\n\n  static arrayContainsAllElementsFromAnother = (array0, array1) =>\n    array1\n      .map(a => {\n        return array0.some(b => {\n          return b === a\n        })\n      })\n      .every(e => e)\n\n  static nextArrayItem = (array, currentIndex) =>\n    array[(currentIndex + 1) % array.length]\n\n  static getEmailPrefix = email => email.slice(0, email.indexOf('@'))\n\n  static generateExampleMarkdownPost = () => {\n    const chance = new Chance()\n    const randomSentence = words => chance.sentence({ words })\n    const randomParagraph = sentences =>\n      chance.paragraph({\n        sentences\n      })\n\n    const word = length => chance.word({ length })\n    const randomImageSrc = `https://avatars.dicebear.com/v2/identicon/${word(\n      15\n    )}.svg`\n    const title = randomSentence(6)\n    const shortDescription = randomParagraph(3)\n    const text = `### ${randomSentence(6)}\n    \\n ${randomParagraph(10)}\n    \\n![Alt Text](${randomImageSrc} =200x200)\n    \\nPhoto: *${randomSentence(6)}*\n    \\nVisit: <http://www.example.com>\n    \\n### ${randomSentence(6)}\n    \\n${randomParagraph(6)}\n    \\n${word()} ${word()}:\n    \\n* ${word()}\n    \\n* ${word()}\n    \\n* ${word()}\n    \\n### ${randomSentence(6)}\n    \\nSome code:\n    \\n\n    \\`\\`\\`\n    function resolveAfter2Seconds() {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved');\n        }, 2000);\n      });\n    }\n    \n    async function asyncCall() {\n      console.log('calling');\n      var result = await resolveAfter2Seconds();\n      console.log(result);\n      // expected output: 'resolved'\n    }\n    \n    asyncCall();\n    \\`\\`\\`\n    `\n    return {\n      title,\n      shortDescription,\n      text,\n      randomImageSrc\n    }\n  }\n\n  static convertMarkdownToHtml = markdownString =>\n    new showdown.Converter({ noHeaderId: true }).makeHtml(markdownString)\n\n  static updateCodeSyntaxHighlighting = () => {\n    document.querySelectorAll('pre code').forEach(block => {\n      hljs.highlightBlock(block)\n    })\n  }\n\n  static jsPostObjToFirestoreObj = post => ({\n    id: post.id,\n    title: post.title,\n    shortDescription: post.shortDescription,\n    text: post.text,\n    author: post.author,\n    date: firebase.firestore.Timestamp.fromDate(post.date),\n    tags: post.tags,\n    mainImage: post.mainImage\n  })\n\n  static firestorePostObjToJsOjb = firestoreObj =>\n    new Post(\n      firestoreObj.id,\n      firestoreObj.title,\n      firestoreObj.shortDescription,\n      firestoreObj.text,\n      firestoreObj.author,\n      firestoreObj.date.toDate(),\n      firestoreObj.tags,\n      firestoreObj.mainImage\n    )\n\n  /**\n   * Use only for first time writing to firestore random generated data.\n   * It creates in firestore  `posts` collection with documents `post` by `post.id`.\n   */\n  static addPostsToFirestore = num => {\n    new DataGenerator()\n      .fetch(num)\n      .then(posts => {\n        posts.forEach(post => {\n          firebaseFirestore\n            .collection('posts')\n            .doc(post.id)\n            .set(DataUtils.jsPostObjToFirestoreObj(post))\n            .catch(error =>\n              console.error('Skipping write document cause: ', error)\n            )\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport default DataUtils\n","import DataUtils from '../data/dataUtils'\n\nclass ReducersUtils {\n  static sortPostsByDateDesc = posts =>\n    posts.sort((a, b) => new Date(b.date) - new Date(a.date))\n\n  static unwrapTagsFromPosts = posts => {\n    const allTags = Array.from(posts.map(post => post.tags).flat())\n    const uniqueTags = Array.from(new Set(allTags))\n\n    let uniqueWithQuantity = []\n    uniqueTags.forEach(uniqueTag =>\n      uniqueWithQuantity.push({\n        name: uniqueTag,\n        quantity: allTags.filter(tag => tag === uniqueTag).length,\n        state: false\n      })\n    )\n\n    return uniqueWithQuantity\n  }\n\n  static switchTagState = (tagName, tags) => {\n    let tag = tags.find(tag => tag.name === tagName)\n    tag.state = !tag.state\n    return tags\n  }\n\n  static filterPostsBy = (posts, filters) => {\n    const tags = filters.tags\n    const dates = filters.dates\n    const searchValue = filters.searchValue\n\n    let filtered = []\n    const switchedOnTags = tags.filter(tag => tag.state).map(tag => tag.name)\n    filtered = posts.filter(\n      post =>\n        // by tags\n        DataUtils.arrayContainsAllElementsFromAnother(\n          post.tags,\n          switchedOnTags\n        ) &&\n        // by searchValue (title)\n        post.title.toLowerCase().includes(searchValue.toLowerCase())\n    )\n\n    // by date - years\n    let switchedOnYears = dates\n      .filter(date => date.yearState)\n      .map(date => date.year)\n    if (switchedOnYears.length !== 0) {\n      filtered = filtered.filter(post =>\n        DataUtils.arrayContainsAllElementsFromAnother(switchedOnYears, [\n          post.date.getFullYear()\n        ])\n      )\n    }\n\n    // by date - months\n    let switchedOnMonths = dates\n      .map(date =>\n        date.months\n          .map(month => ({\n            year: date.year,\n            month: month.name,\n            state: month.state\n          }))\n          .flat()\n      )\n      .flat()\n      .filter(month => month.state)\n    if (switchedOnMonths.length !== 0) {\n      filtered = filtered.filter(\n        post =>\n          switchedOnMonths.some(\n            item => item.year === post.date.getFullYear()\n          ) &&\n          switchedOnMonths.some(\n            item => item.month === ReducersUtils.monthNameFromDate(post.date)\n          )\n      )\n    }\n    return ReducersUtils.sortPostsByDateDesc(filtered)\n  }\n\n  static unwrapDatesFromPosts = posts => {\n    const years = Array.from(\n      new Set(posts.map(post => post.date.getFullYear()))\n    )\n\n    let yearsWithMonths = []\n    years.forEach(year =>\n      yearsWithMonths.push({\n        year: year,\n        yearState: false,\n        months: Array.from(\n          new Set(\n            posts\n              .filter(post => post.date.getFullYear() === year)\n              .map(post => ReducersUtils.monthNameFromDate(post.date))\n          )\n        ).map(month => ({\n          name: month,\n          quantity: ReducersUtils.postsQuantityByDate(posts, month, year),\n          state: false\n        }))\n      })\n    )\n    return yearsWithMonths\n  }\n\n  static postsQuantityByDate = (posts, month, year) =>\n    posts.filter(\n      post =>\n        post.date.getFullYear() === year &&\n        ReducersUtils.monthNameFromDate(post.date) === month\n    ).length\n\n  static monthNameFromDate = date =>\n    date.toLocaleString('en-us', { month: 'long' })\n\n  static switchDateState = (dateToSwitch, archiveDates) => {\n    if (dateToSwitch.month === undefined) {\n      let date = archiveDates.find(date => date.year === dateToSwitch.year)\n      date.yearState = !date.yearState\n      // reset all months state\n      archiveDates.forEach(date =>\n        date.months.forEach(month => (month.state = false))\n      )\n    } else {\n      let month = archiveDates\n        .find(date => date.year === dateToSwitch.year)\n        .months.find(month => month.name === dateToSwitch.month)\n      month.state = !month.state\n      // reset all years state\n      archiveDates.forEach(date => (date.yearState = false))\n    }\n    return archiveDates\n  }\n\n  static resetFilters = filters => {\n    let reseted = Object.assign({}, filters)\n    reseted.tags.forEach(tag => (tag.state = false))\n    reseted.dates.forEach(date => (date.yearState = false))\n    reseted.dates.forEach(date =>\n      date.months.forEach(month => (month.state = false))\n    )\n    reseted.searchValue = ''\n    return reseted\n  }\n}\n\nexport default ReducersUtils\n","/**\n * Reducers\n *\n * Reducers specify how the application's state changes in response to actions\n * sent to the store. Remember that actions only describe what happened but\n * don't describe how the application's state changes.\n */\n\nimport { combineReducers } from 'redux'\nimport ReducersUtils from './reducersUtils'\n\nconst posts = (state = [], action) => {\n  switch (action.type) {\n    case 'POSTS_FETCHED_SUCCESS':\n      return {\n        data: [...ReducersUtils.sortPostsByDateDesc(action.posts)],\n        fetchingError: null\n      }\n    case 'POSTS_FETCHED_ERROR':\n      return {\n        data: [],\n        fetchingError: action.fetchingError\n      }\n    default:\n      return state\n  }\n}\n\nexport const filteredPosts = (state = [], action) => {\n  switch (action.type) {\n    case 'FILTER_POSTS':\n      return [...ReducersUtils.filterPostsBy(action.posts, action.filters)]\n    default:\n      return state\n  }\n}\n\nconst filtersShape = {\n  tags: [],\n  dates: [],\n  searchValue: ''\n}\n\nconst filters = (state = filtersShape, action) => {\n  switch (action.type) {\n    case 'UNWRAP_TAGS':\n      return {\n        ...state,\n        tags: [...ReducersUtils.unwrapTagsFromPosts(action.posts)]\n      }\n    case 'SWITCH_TAG':\n      return {\n        ...state,\n        tags: [...ReducersUtils.switchTagState(action.tagName, state.tags)]\n      }\n    case 'UNWRAP_DATES':\n      return {\n        ...state,\n        dates: [...ReducersUtils.unwrapDatesFromPosts(action.posts)]\n      }\n    case 'SWITCH_DATE_STATE':\n      return {\n        ...state,\n        dates: [...ReducersUtils.switchDateState(action.date, state.dates)]\n      }\n    case 'HANDLE_SEARCH_INPUT':\n      return {\n        ...state,\n        searchValue: action.value\n      }\n    case 'RESET_FILTERS':\n      return ReducersUtils.resetFilters(action.filters)\n    default:\n      return state\n  }\n}\n\nconst authShape = {\n  displayName: '',\n  email: '',\n  isSignedIn: false,\n  errorMessage: ''\n}\n\nconst auth = (state = authShape, action) => {\n  switch (action.type) {\n    case 'SIGNED_IN':\n      return {\n        ...state,\n        isSignedIn: action.isSignedIn,\n        errorMessage: action.errorMessage\n      }\n    case 'FETCHED_USER_DATA':\n      return {\n        ...state,\n        displayName: action.displayName,\n        email: action.email\n      }\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  posts,\n  filteredPosts,\n  filters,\n  auth\n})\n","/**\n * Action creators\n *\n * Actions are payloads of information that send data from your application to your store.\n * They are the only source of information for the store.\n */\n\nimport {\n  fetchPostsFromFirestore,\n  addPostToFirestore,\n  removePostByIdFromFirestore,\n  signInWithEmailAndPassword,\n  fetchSignedInUserData,\n  signOutUser\n} from '../data/firebase'\n\nconst postsFetchedSuccess = posts => ({\n  type: 'POSTS_FETCHED_SUCCESS',\n  posts\n})\n\nconst postsFetchedError = fetchingError => ({\n  type: 'POSTS_FETCHED_ERROR',\n  fetchingError\n})\n\nexport const fetchPosts = () => (dispatch, getState) => {\n  fetchPostsFromFirestore()\n    .then(posts => {\n      dispatch(postsFetchedSuccess(posts))\n      dispatch(unwrapTags(posts))\n      dispatch(unwrapDates(posts))\n      dispatch(filterPosts(posts, getState().filters))\n    })\n    .catch(error => dispatch(postsFetchedError(error)))\n}\n\nexport const addPost = post => dispatch => {\n  addPostToFirestore(post).then(() => dispatch(fetchPosts()))\n}\n\nexport const removePost = postId => dispatch => {\n  removePostByIdFromFirestore(postId)\n    .then(() => dispatch(fetchPosts()))\n    .catch(err => console.log(err))\n}\n\nexport const filterPosts = (posts, filters) => ({\n  type: 'FILTER_POSTS',\n  posts,\n  filters\n})\n\nexport const unwrapTags = posts => ({\n  type: 'UNWRAP_TAGS',\n  posts\n})\n\nexport const switchTagState = tagName => ({\n  type: 'SWITCH_TAG',\n  tagName\n})\n\nexport const unwrapDates = posts => ({\n  type: 'UNWRAP_DATES',\n  posts\n})\n\nexport const switchDateState = date => ({\n  type: 'SWITCH_DATE_STATE',\n  date\n})\n\nexport const handleSearchInput = value => ({\n  type: 'HANDLE_SEARCH_INPUT',\n  value\n})\n\nexport const resetFilters = filters => ({\n  type: 'RESET_FILTERS',\n  filters\n})\n\nexport const signedIn = (isSignedIn, errorMessage) => ({\n  type: 'SIGNED_IN',\n  isSignedIn,\n  errorMessage\n})\n\nexport const fetchedUserData = (displayName, email) => ({\n  type: 'FETCHED_USER_DATA',\n  displayName,\n  email\n})\n\nexport const signIn = (email, password) => dispatch =>\n  signInWithEmailAndPassword(email, password)\n    .then(() => dispatch(signedIn(true, '')))\n    .then(() => fetchSignedInUserData())\n    .then(data => dispatch(fetchedUserData(data.name, data.email)))\n    .catch(error => dispatch(signedIn(false, error.message)))\n\nexport const signOut = () => dispatch =>\n  signOutUser()\n    .then(() => dispatch(signedIn(false, '')))\n    .then(() => dispatch(fetchedUserData('', '')))\n","import React, { Component } from 'react'\nimport { Form, FormControl } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { PUBLIC_URL } from '../../index'\n\nclass SearchForm extends Component {\n  handleSearchFormInputChange = event => {\n    const value = event.target.value\n    this.props.handleSearchInput(value)\n\n    let filters = Object.assign({}, this.props.filters)\n    filters.searchValue = value\n    this.props.filterPosts(this.props.posts, filters)\n  }\n\n  render() {\n    return (\n      <Form inline className='pr-4'>\n        <Link to={PUBLIC_URL + '/search'}>\n          <FormControl\n            className='mr-sm-2'\n            name='search'\n            type='text'\n            value={this.props.filters.searchValue}\n            placeholder='search'\n            onChange={this.handleSearchFormInputChange}\n          />\n        </Link>\n        <i className='fas fa-search' />\n      </Form>\n    )\n  }\n}\n\nexport default SearchForm\n","import { connect } from 'react-redux'\nimport { filterPosts, handleSearchInput } from '../actions'\nimport SearchForm from '../components/Navbar/SearchForm'\n\nconst mapStateToProps = state => ({\n  posts: state.posts.data,\n  filters: state.filters\n})\n\nconst mapDispatchToProps = { filterPosts, handleSearchInput }\n\nexport const SearchFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchForm)\n","import React, { Component } from 'react'\nimport { Form, Col, Row, Button, Modal } from 'react-bootstrap'\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      formData: {\n        email: '',\n        password: ''\n      }\n    }\n  }\n\n  handleSignIn = () => {\n    this.props.signIn(this.state.formData.email, this.state.formData.password)\n    this.props.onSignInFormHide()\n  }\n\n  handleHideSignInModal = () => {\n    this.props.onSignInFormHide()\n  }\n\n  handleFormInputChange = e => {\n    const targetName = e.target.name\n    const targetValue = e.target.value\n    this.setState(() => ({\n      formData: {\n        ...this.state.formData,\n        [targetName]: targetValue\n      }\n    }))\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.signInModalShow}\n        onHide={this.props.onSignInFormHide}\n        size='sm'\n        aria-labelledby='contained-modal-title-vcenter'\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id='contained-modal-title-vcenter'>Sign in</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form className='pt-3'>\n            <Form.Group>\n              <Form.Control\n                name='email'\n                // value={this.state.formData.name}\n                type='text'\n                placeholder='Email'\n                required\n                onChange={this.handleFormInputChange}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                name='password'\n                // value={this.state.formData.review}\n                type='password'\n                placeholder='Password'\n                required\n                onChange={this.handleFormInputChange}\n              />\n            </Form.Group>\n            <Row className='pt-3 text-center'>\n              <Col>\n                <Button onClick={this.handleHideSignInModal}>Back</Button>\n              </Col>\n              <Col>\n                <Button onClick={this.handleSignIn}>Ok</Button>\n              </Col>\n            </Row>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    )\n  }\n}\n\nexport default SignInForm\n","import { connect } from 'react-redux'\nimport SignInForm from '../components/Navbar/SignInForm'\nimport { signIn } from '../actions'\n\nconst mapStateToProps = state => ({\n  state: state\n})\n\nconst mapDispatchToProps = { signIn }\n\nexport const SignInFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignInForm)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Navbar as BsNavbar, Button, Container } from 'react-bootstrap'\nimport { SearchFormContainer } from '../../containers/SearchFormContainer'\nimport { SignInFormContainer } from '../../containers/SignInFormContainer'\nimport { PUBLIC_URL } from '../../index'\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { signInModalShow: false }\n  }\n\n  handleLogoClick = () => {\n    this.props.resetFilters(this.props.filters)\n    this.props.filterPosts(this.props.posts, {\n      tags: [],\n      dates: [],\n      searchValue: ''\n    })\n  }\n\n  handleSignInClick = () => {\n    if (this.props.isSignedIn) {\n      this.props.signOut()\n    } else {\n      this.setState({ signInModalShow: true })\n    }\n  }\n\n  handleHideSignInModal = () => {\n    this.setState({ signInModalShow: false })\n  }\n\n  render() {\n    const isSignedIn = this.props.isSignedIn\n    return (\n      <BsNavbar bg='dark' variant='dark' className='sticky-top text-center'>\n        <Container>\n          <div className='d-flex justify-content-between flex-fill align-items-center'>\n            <Link to={PUBLIC_URL + '/'} onClick={this.handleLogoClick}>\n              <BsNavbar.Brand className='ml-4'>\n                John Smith's cave\n              </BsNavbar.Brand>\n            </Link>\n            <div className='d-flex'>\n              <SearchFormContainer />\n              {isSignedIn && (\n                <div className='d-flex'>\n                  <div className='hello-user d-flex align-self-center'>\n                    {'Hello, ' + this.props.displayName + '!'}\n                  </div>\n                  <Link className='ml-4' to={PUBLIC_URL + '/settings'}>\n                    <Button variant='outline-info'>\n                      <i className='fas fa-cogs' />\n                    </Button>\n                  </Link>\n                  <Link className='ml-2' to={PUBLIC_URL + '/addpost'}>\n                    <Button variant='outline-info'>\n                      Add Post&nbsp; <i className='fas fa-pen-alt' />\n                    </Button>\n                  </Link>\n                </div>\n              )}\n              <Button\n                className='ml-2 mr-4'\n                variant='outline-info'\n                onClick={this.handleSignInClick}\n              >\n                {isSignedIn ? (\n                  <div>\n                    Sign out &nbsp; <i className='fas fa-sign-out-alt' />\n                  </div>\n                ) : (\n                  <div>\n                    Sign in &nbsp; <i className='fas fa-sign-in-alt' />\n                  </div>\n                )}\n              </Button>\n            </div>\n          </div>\n          <SignInFormContainer\n            signInModalShow={this.state.signInModalShow}\n            onSignInFormHide={this.handleHideSignInModal}\n          />\n        </Container>\n      </BsNavbar>\n    )\n  }\n}\n\nexport default Navbar\n","import { connect } from 'react-redux'\nimport Navbar from '../components/Navbar/Navbar'\nimport { resetFilters, filterPosts, signOut } from '../actions'\n\nconst mapStateToProps = state => ({\n  posts: state.posts.data,\n  filters: state.filters,\n  displayName: state.auth.displayName,\n  isSignedIn: state.auth.isSignedIn\n})\n\nconst mapDispatchToProps = { resetFilters, signOut, filterPosts }\n\nexport const NavbarContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Navbar)\n","import React, { Component } from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport { SocialIcon } from 'react-social-icons'\n\nconst iconSize = { height: 40, width: 40 }\n\nclass AboutMe extends Component {\n  render() {\n    return (\n      <Container>\n        <h4 className='pb-2'>About Me</h4>\n        <Row className='ml-0 pb-3'>\n          <img\n            src='https://picsum.photos/200/?random'\n            alt=''\n            className='rounded float-left'\n            height='100'\n          />\n        </Row>\n        <Row className='ml-0 pb-2'>\n          <h5>John Smith</h5>\n          <span>Full-stack developer</span>\n        </Row>\n        <Row className='ml-0'>\n          <SocialIcon\n            className='mr-2'\n            url='http://twitter.com/'\n            style={iconSize}\n          />\n          <SocialIcon\n            className='mr-2'\n            url='http://facebook.com/'\n            style={iconSize}\n          />\n          <SocialIcon\n            className='mr-2'\n            url='http://linkedin.com/'\n            style={iconSize}\n          />\n          <SocialIcon\n            className='mr-2'\n            url='http://github.com/'\n            style={iconSize}\n          />\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default AboutMe\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Badge } from 'react-bootstrap'\nimport { PUBLIC_URL } from '../../index'\n\nclass Tags extends Component {\n  onTagClick = (event, tagName) => {\n    this.props.switchTagState(tagName)\n    this.props.filterPosts(this.props.posts, this.props.filters)\n    event.preventDefault()\n  }\n\n  Tags = () => {\n    const tags = this.props.filters.tags\n    return tags.length > 0\n      ? tags.map(tag => (\n          <div\n            className='mr-2 alert-link'\n            key={tag.name}\n            onClick={event => this.onTagClick(event, tag.name)}\n          >\n            <Link to={PUBLIC_URL + '/search'}>\n              {tag.name}\n              {tag.state ? (\n                <i className='far fa-check-square ml-2' />\n              ) : (\n                <Badge variant='secondary' className='ml-2'>\n                  {tag.quantity}\n                </Badge>\n              )}\n            </Link>\n          </div>\n        ))\n      : ''\n  }\n\n  render() {\n    return (\n      <Container>\n        <div>\n          <h4>Tags</h4>\n          <span className='d-flex flex-wrap'>\n            <this.Tags />\n          </span>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default Tags\n","import { connect } from 'react-redux'\nimport { switchTagState, filterPosts } from '../actions'\nimport Tags from '../components/SidePanel/Tags'\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts.data,\n    filters: state.filters\n  }\n}\n\nconst mapDispatchToProps = { switchTagState, filterPosts }\n\nexport const TagsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tags)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Badge } from 'react-bootstrap'\nimport { PUBLIC_URL } from '../../index'\n\nclass Archives extends Component {\n  onDateClick = (event, year, month) => {\n    this.props.switchDateState({ year, month })\n    this.props.filterPosts(this.props.posts, this.props.filters)\n    event.preventDefault()\n  }\n\n  Dates = () => {\n    const dates = this.props.filters.dates\n    return dates.length > 0\n      ? dates.map(date => (\n          <ul key={date.year} className='list-unstyled'>\n            <div\n              className='alert-link'\n              onClick={event => this.onDateClick(event, date.year)}\n            >\n              <Link to={PUBLIC_URL + '/search'}>\n                {date.year}\n                {date.yearState ? (\n                  <i className='far fa-check-square ml-2' />\n                ) : (\n                  ''\n                )}\n              </Link>\n            </div>\n            {date.months.map(month => (\n              <li key={month.name}>\n                <div\n                  className='alert-link'\n                  onClick={event =>\n                    this.onDateClick(event, date.year, month.name)\n                  }\n                >\n                  <Link to={PUBLIC_URL + '/search'}>\n                    {month.name}\n                    {month.state ? (\n                      <i className='far fa-check-square ml-2' />\n                    ) : (\n                      <Badge variant='secondary' className='ml-2'>\n                        {month.quantity}\n                      </Badge>\n                    )}\n                  </Link>\n                </div>\n              </li>\n            ))}\n          </ul>\n        ))\n      : ''\n  }\n\n  render() {\n    return (\n      <Container>\n        <h4>Archive posts</h4>\n        <this.Dates />\n      </Container>\n    )\n  }\n}\n\nexport default Archives\n","import { connect } from 'react-redux'\nimport { filterPosts, switchDateState } from '../actions'\nimport Archive from '../components/SidePanel/Archives'\n\nconst mapStateToProps = state => ({\n  posts: state.posts.data,\n  filters: state.filters\n})\n\nconst mapDispatchToProps = { filterPosts, switchDateState }\n\nexport const ArchivesContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Archive)\n","import React, { Component } from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport AboutMe from './AboutMe'\nimport { TagsContainer } from '../../containers/TagsContainer'\nimport { ArchivesContainer } from '../../containers/ArchivesContainer'\n\nclass SidePanel extends Component {\n  render() {\n    return (\n      <Container>\n        <Row className='pb-5'>\n          <AboutMe />\n        </Row>\n        <Row className='pb-5'>\n          <TagsContainer />\n        </Row>\n        <Row className='pb-5'>\n          <ArchivesContainer />\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default SidePanel\n","import React, { Component } from 'react'\nimport { Row, Col, Button, ButtonGroup } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nclass PostsCardHorizontal extends Component {\n  render() {\n    const post = this.props.post\n    const postURL = this.props.postURL\n    return (\n      <div className='row no-gutters'>\n        <div className='col-md-3 d-flex flex-wrap align-items-center'>\n          <Link to={postURL}>\n            <img src={post.mainImage} className='card-img pl-3' alt='' />\n          </Link>\n        </div>\n        <div className='col-md-9'>\n          <div className='card-body'>\n            <Link to={postURL}>\n              <h5 className='card-title'>{post.title}</h5>\n            </Link>\n            <p className='card-text'>\n              {post.shortDescription.substring(0, 150) + '...'}\n            </p>\n            <span className='card-text'>\n              <Row>\n                <Col>\n                  <p className='text-muted mb-0'>\n                    {post.author +\n                      ', ' +\n                      post.date.toLocaleString('pl-PL', {\n                        day: 'numeric',\n                        month: 'numeric',\n                        year: 'numeric'\n                      })}\n                  </p>\n                  <p className='text-muted mb-0'>\n                    {post.tags.map(tag => (\n                      <span key={tag} className='pr-2'>\n                        {tag}\n                      </span>\n                    ))}\n                  </p>\n                </Col>\n                {this.props.isSignedIn && (\n                  <Col className='align-self-center'>\n                    <ButtonGroup className='float-right btn-group-sm'>\n                      <Button\n                        variant='outline-primary'\n                        onClick={this.props.onEditPost}\n                      >\n                        Edit &nbsp; <i className='fas fa-edit' />\n                      </Button>\n                      <Button\n                        variant='outline-primary'\n                        className='ml-3'\n                        onClick={this.props.onRemovePost}\n                      >\n                        Remove &nbsp; <i className='fas fa-trash-alt' />\n                      </Button>\n                    </ButtonGroup>\n                  </Col>\n                )}\n              </Row>\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PostsCardHorizontal\n","import React, { Component } from 'react'\nimport { Col, Button, ButtonGroup } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nclass PostCardVertical extends Component {\n  render() {\n    const post = this.props.post\n    const postURL = this.props.postURL\n    return (\n      <div>\n        <Link to={postURL}>\n          <img src={post.mainImage} className='card-img-top pt-3' alt='' />\n        </Link>\n        <div className='card-body'>\n          <Link to={postURL}>\n            <h5 className='card-title'>{post.title}</h5>\n          </Link>\n        </div>\n        <div className='card-footer'>\n          <p className='text-muted mb-0'>\n            {post.author +\n              ', ' +\n              post.date.toLocaleString('pl-PL', {\n                day: 'numeric',\n                month: 'numeric',\n                year: 'numeric'\n              })}\n          </p>\n          <p className='text-muted mb-0'>\n            {post.tags.map(tag => (\n              <span key={tag} className='pr-2'>\n                {tag}\n              </span>\n            ))}\n          </p>\n          {this.props.isSignedIn && (\n            <Col className='align-self-center text-center pt-2'>\n              <ButtonGroup className='btn-group-sm'>\n                <Button\n                  variant='outline-primary'\n                  onClick={this.props.onEditPost}\n                >\n                  Edit &nbsp; <i className='fas fa-edit' />\n                </Button>\n                <Button\n                  variant='outline-primary'\n                  className='ml-3'\n                  onClick={this.props.onRemovePost}\n                >\n                  Remove &nbsp; <i className='fas fa-trash-alt' />\n                </Button>\n              </ButtonGroup>\n            </Col>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PostCardVertical\n","import React, { Component } from 'react'\nimport { PUBLIC_URL } from '../../../index'\nimport PostCardHorizontal from './PostCardHorizontal'\nimport PostCardVertical from './PostCardVertical'\n\nclass PostsCard extends Component {\n  handleEditPost = () => {\n    console.log('handleEditPost')\n  }\n  handleRemovePost = () => {\n    this.props.removePost(this.props.post.id)\n  }\n\n  HorizontalCard = props => (\n    <PostCardHorizontal\n      post={props.post}\n      postURL={props.postURL}\n      onEditPost={this.handleEditPost}\n      onRemovePost={this.handleRemovePost}\n      isSignedIn={props.isSignedIn}\n    />\n  )\n\n  VerticalCard = props => (\n    <PostCardVertical\n      post={props.post}\n      postURL={props.postURL}\n      onEditPost={this.handleEditPost}\n      onRemovePost={this.handleRemovePost}\n      isSignedIn={props.isSignedIn}\n    />\n  )\n\n  render() {\n    const post = this.props.post\n    const postURL = PUBLIC_URL + '/post/id-' + post.id\n    const isSignedIn = this.props.isSignedIn\n    const cardVersion = this.props.cardVersion\n    return (\n      <div className='card mb-3'>\n        {cardVersion === 'horizontal' ? (\n          <this.HorizontalCard\n            post={post}\n            postURL={postURL}\n            isSignedIn={isSignedIn}\n          />\n        ) : (\n          <this.VerticalCard\n            post={post}\n            postURL={postURL}\n            isSignedIn={isSignedIn}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default PostsCard\n","import { connect } from 'react-redux'\nimport PostCard from '../components/MainPanel/PostCards/PostCard'\nimport { removePost } from '../actions/'\n\nconst mapStateToProps = state => ({\n  isSignedIn: state.auth.isSignedIn\n})\n\nconst mapDispatchToProps = { removePost }\n\nexport const PostCardContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostCard)\n","import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { PostCardContainer } from '../../containers/PostCardContainer'\n\nclass SearchResult extends Component {\n  PostCards = () => {\n    return this.props.filteredPosts.map(post => (\n      <PostCardContainer key={post.id} cardVersion={'horizontal'} post={post} />\n    ))\n  }\n\n  EmptyResult = () => {\n    return (\n      <div className='text-center pt-5'>\n        <div className='pb-2'>\n          <h2>Nothing here...</h2>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.props.filteredPosts.length !== 0 ? (\n          <this.PostCards />\n        ) : (\n          <this.EmptyResult />\n        )}\n      </Container>\n    )\n  }\n}\n\nexport default SearchResult\n","import { connect } from 'react-redux'\nimport SearchResult from '../components/MainPanel/SearchResult'\n\nconst mapStateToProps = state => ({\n  filteredPosts: state.filteredPosts\n})\n\nexport const SearchResultContainer = connect(mapStateToProps)(SearchResult)\n","import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { PostCardContainer } from '../../containers/PostCardContainer'\n\nclass MainBoard extends Component {\n  static headPostsNum = 2\n\n  HeadPosts = () => {\n    return (\n      <div className='card-deck'>\n        {this.props.filteredPosts.slice(0, MainBoard.headPostsNum).map(post => (\n          <PostCardContainer\n            key={post.id}\n            cardVersion={'vertical'}\n            post={post}\n          />\n        ))}\n      </div>\n    )\n  }\n\n  PostCards = () => {\n    return this.props.filteredPosts\n      .slice(MainBoard.headPostsNum)\n      .map(post => (\n        <PostCardContainer\n          key={post.id}\n          cardVersion={'horizontal'}\n          post={post}\n        />\n      ))\n  }\n\n  render() {\n    return (\n      <Container>\n        <h4 className='pb-3'>Latest posts</h4>\n        <this.HeadPosts />\n        <hr className='pb-2' />\n        <this.PostCards />\n      </Container>\n    )\n  }\n}\n\nexport default MainBoard\n","import { connect } from 'react-redux'\nimport MainBoard from '../components/MainPanel/MainBoard'\n\nconst mapStateToProps = state => ({\n  filteredPosts: state.filteredPosts\n})\n\nexport const MainBoardContainer = connect(mapStateToProps)(MainBoard)\n","import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap'\nimport DataUtils from '../../data/dataUtils'\n\nclass Post extends Component {\n  componentDidMount() {\n    DataUtils.updateCodeSyntaxHighlighting()\n  }\n\n  componentDidUpdate() {\n    DataUtils.updateCodeSyntaxHighlighting()\n  }\n\n  PostContainer = () => {\n    const post = this.props.posts.find(\n      post => post.id === this.props.routeParamId\n    )\n    const text = DataUtils.convertMarkdownToHtml(post.text)\n    return (\n      <div>\n        <h1>{post.title}</h1>\n        <p>{post.shortDescription}</p>\n        <div\n          className='content pt-3'\n          dangerouslySetInnerHTML={{ __html: text }}\n        />\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Container>\n        <this.PostContainer />\n      </Container>\n    )\n  }\n}\n\nexport default Post\n","import { connect } from 'react-redux'\nimport Post from '../components/MainPanel/Post'\n\nconst mapStateToProps = state => ({\n  posts: state.posts.data\n})\n\nexport const PostContainer = connect(mapStateToProps)(Post)\n","import React, { Component } from 'react'\nimport DataUtils from '../../../data/dataUtils'\nimport { Col } from 'react-bootstrap'\n\nclass Preview extends Component {\n  componentDidMount() {\n    DataUtils.updateCodeSyntaxHighlighting()\n  }\n\n  componentDidUpdate() {\n    DataUtils.updateCodeSyntaxHighlighting()\n  }\n\n  render() {\n    return (\n      <div className='pb-4'>\n        <h4>Live preview</h4>\n        <Col sm={3} className='pl-0'>\n          <hr />\n        </Col>\n        <h1>{this.props.title}</h1>\n        <p>{this.props.shortDescription}</p>\n        <div\n          className='content pt-3'\n          dangerouslySetInnerHTML={{\n            __html: DataUtils.convertMarkdownToHtml(this.props.parsedText)\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Preview\n","import React, { Component } from 'react'\nimport { Table } from 'react-bootstrap'\n\nclass FormattingHelp extends Component {\n  render() {\n    return (\n      <div className='pb-4'>\n        <h5 className='pb-2 '>Formatting options (only in Post body)</h5>\n        <Table bordered>\n          <thead>\n            <tr>\n              <th>Usage</th>\n              <th>Example</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>### header h3</td>\n              <td>\n                <h3>header h3</h3>\n              </td>\n            </tr>\n            <tr>\n              <td>#### header h4</td>\n              <td>\n                <h4>header h4</h4>\n              </td>\n            </tr>\n            <tr>\n              <td>*italics*</td>\n              <td>\n                <em>italics</em>\n              </td>\n            </tr>\n            <tr>\n              <td>**bold**</td>\n              <td>\n                <strong>bold</strong>\n              </td>\n            </tr>\n            <tr>\n              <td>`code`</td>\n              <td>\n                <code>code</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p>```</p>\n                <p>randomArrayItem = array...</p>\n                <p>array[Math.floor...</p>\n                <p>```</p>\n              </td>\n              <td>\n                <pre>\n                  <code>\n                    <p>randomArrayItem = array =></p>\n                    <p>\n                      &nbsp;&nbsp;array[Math.floor(Math.random() *\n                      array.length)];\n                    </p>\n                  </code>\n                </pre>\n              </td>\n            </tr>\n            <tr>\n              <td>![alt text](url = 30x30)</td>\n              <td>\n                <img\n                  alt='Alt Text'\n                  src='https://avatars.dicebear.com/v2/identicon/test.svg'\n                  width='30'\n                  height='30'\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>{'<http://www.example.com>'}</td>\n              <td>\n                <a href='http://www.example.com'>http://www.example.com</a>\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    )\n  }\n}\n\nexport default FormattingHelp\n","import React, { Component } from 'react'\nimport uuidv1 from 'uuid/v1'\nimport { Form, Button, Col, Row } from 'react-bootstrap'\nimport { Container } from 'react-bootstrap'\nimport { Post } from '../../../data/index'\nimport DataUtils from '../../../data/dataUtils'\nimport Preview from './Preview'\nimport FormattingHelp from './FormattingHelp'\n\nclass AddPost extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      formInput: {\n        title: '',\n        shortDescription: '',\n        text: '',\n        mainImageSrc: ''\n      },\n      parsedText: '',\n      controllers: {\n        showFormattingHelp: false,\n        shouldClearPastedExample: false\n      }\n    }\n  }\n\n  handleShowFormattingHelp = () => {\n    const current = this.state.controllers.showFormattingHelp\n    this.setState({\n      ...this.state,\n      controllers: { showFormattingHelp: !current }\n    })\n  }\n\n  handlePasteExample = () => {\n    const shouldClearPastedExample = !this.state.controllers\n      .shouldClearPastedExample\n    const generatedExample = DataUtils.generateExampleMarkdownPost()\n    const title = shouldClearPastedExample ? generatedExample.title : ''\n    const shortDescription = shouldClearPastedExample\n      ? generatedExample.shortDescription\n      : ''\n    const text = shouldClearPastedExample ? generatedExample.text : ''\n    const mainImageSrc = generatedExample.randomImageSrc\n\n    this.setState({\n      ...this.state,\n      formInput: {\n        title,\n        shortDescription,\n        text,\n        mainImageSrc\n      },\n      parsedText: text,\n      controllers: {\n        ...this.state.controllers,\n        shouldClearPastedExample\n      }\n    })\n  }\n\n  handleInputChange = event => {\n    let text = event.target.value\n    const parsedText =\n      event.target.name === 'text' ? text : this.state.parsedText\n    this.setState({\n      ...this.state,\n      formInput: {\n        ...this.state.formInput,\n        [event.target.name]: text\n      },\n      parsedText\n    })\n  }\n\n  handleAddPost = () => {\n    this.props.addPost(\n      new Post(\n        uuidv1(),\n        this.state.formInput.title,\n        this.state.formInput.shortDescription,\n        this.state.parsedText,\n        this.props.authDisplayName,\n        new Date(),\n        ['#rust', '#javascript', '#linux'],\n        this.state.formInput.mainImageSrc\n      )\n    )\n  }\n\n  Form = () => {\n    return (\n      <div className='pb-4'>\n        <h5 className='pb-2'>Let's write</h5>\n        <Form>\n          <Form.Group>\n            <Form.Control\n              name='title'\n              value={this.state.formInput.title}\n              type='text'\n              placeholder='Post title'\n              required\n              maxLength='30'\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              name='shortDescription'\n              as='textarea'\n              value={this.state.formInput.shortDescription}\n              placeholder='Short description'\n              required\n              rows='3'\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              name='text'\n              as='textarea'\n              value={this.state.formInput.text}\n              placeholder='Post body'\n              rows='10'\n              required\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group className='d-flex justify-content-end'>\n            <Button onClick={this.handleAddPost}>Add</Button>\n          </Form.Group>\n        </Form>\n      </div>\n    )\n  }\n\n  Helper = () => {\n    return (\n      <div className='pb-4'>\n        <h5 className='pb-1'>Need a little help?</h5>\n        <Col className='pb-4'>\n          <Row className='pb-2 d-flex align-items-center'>\n            <Col sm={4} className='pl-0'>\n              <span>Formatting options:</span>\n            </Col>\n            <Col sm={2} className='d-flex justify-content-end'>\n              <Button className='ml-2' onClick={this.handleShowFormattingHelp}>\n                {this.state.controllers.showFormattingHelp ? 'Hide' : 'Show'}\n              </Button>\n            </Col>\n          </Row>\n          <Row className='d-flex align-items-center'>\n            <Col sm={4} className='pl-0'>\n              <span>Example post:</span>\n            </Col>\n            <Col sm={2} className='d-flex justify-content-end'>\n              <Button className='ml-2' onClick={this.handlePasteExample}>\n                {this.state.controllers.shouldClearPastedExample\n                  ? 'Clear'\n                  : 'Paste'}\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Container>\n        <h4>Write new post!</h4>\n        <hr className='pb-3' />\n        <this.Helper />\n        {this.state.controllers.showFormattingHelp && <FormattingHelp />}\n        <this.Form />\n        <Preview\n          title={this.state.formInput.title}\n          shortDescription={this.state.formInput.shortDescription}\n          parsedText={this.state.parsedText}\n        />\n      </Container>\n    )\n  }\n}\n\nexport default AddPost\n","import { connect } from 'react-redux'\nimport AddPost from '../components/MainPanel/AddPost/AddPost'\nimport { addPost, filterPosts, unwrapTags, unwrapDates } from '../actions'\n\nconst mapStateToProps = state => ({\n  posts: state.posts,\n  filters: state.filters,\n  authDisplayName: state.auth.displayName\n})\n\nconst mapDispatchToProps = { addPost, filterPosts, unwrapTags, unwrapDates }\n\nexport const AddPostContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddPost)\n","import React, { Component } from 'react'\nimport { Container, Form, Button, Col, Row } from 'react-bootstrap'\n\nclass Settings extends Component {\n  handleRemoveAllPosts = () => {\n    console.log('handleRemoveAllPosts')\n  }\n\n  handleUserDataChange = () => {\n    console.log('handleUserDataChange')\n  }\n\n  render() {\n    return (\n      <Container>\n        <h4>Settings</h4>\n        <hr className='pb-3' />\n        <h5 className='pb-1'>For debugging purposes</h5>\n        <Col className='pb-5'>\n          <Row className='pb-2 d-flex align-items-center'>\n            <Col sm={4} className='pl-0'>\n              <span>Remove all posts:</span>\n            </Col>\n            <Col sm={2} className='d-flex justify-content-end'>\n              <Button className='ml-2' onClick={this.handleRemoveAllPosts}>\n                Remove\n              </Button>\n            </Col>\n          </Row>\n          <Row className='d-flex align-items-center'>\n            <Col sm={4} className='pl-0'>\n              <span>Generate new random posts:</span>\n            </Col>\n            <Col sm={2} className='d-flex justify-content-end'>\n              <Button className='ml-2' onClick={this.handleRemoveAllPosts}>\n                Generate\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n        <h5 className='pb-2'>User data</h5>\n        <Form>\n          <Col sm={6} className='pl-0'>\n            <Form.Group>\n              <Form.Control\n                name='displayName'\n                // value={this.state.formInput.title}\n                type='text'\n                placeholder='Name'\n                required\n                maxLength='30'\n                // onChange={this.handleInputChange}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                name='email'\n                type='email'\n                // value={this.state.formInput.shortDescription}\n                placeholder='Email'\n                required\n                // onChange={this.handleInputChange}\n              />\n            </Form.Group>\n            <Form.Group className='d-flex justify-content-end'>\n              <Button onClick={this.handleUserDataChange}>Change</Button>\n            </Form.Group>\n          </Col>\n        </Form>\n      </Container>\n    )\n  }\n}\n\nexport default Settings\n","import { connect } from 'react-redux'\nimport Settings from '../components/MainPanel/Settings'\n\nconst mapStateToProps = state => ({\n  state: state\n})\n\nexport const SettingsContainer = connect(mapStateToProps)(Settings)\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Row, Col, Container } from 'react-bootstrap'\nimport { NavbarContainer } from '../containers/NavbarContainer'\nimport SidePanel from './SidePanel/SidePanel'\nimport { SearchResultContainer } from '../containers/SearchResultContainer'\nimport { MainBoardContainer } from '../containers/MainBoardContainer'\nimport { PostContainer } from '../containers/PostContainer'\nimport { AddPostContainer } from '../containers/AddPostContainer'\nimport { SettingsContainer } from '../containers/SettingsContainer'\nimport { PUBLIC_URL } from '../index'\nimport DataUtils from '../data/dataUtils'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.waitMessages = [\n      'Feeding artificial intelligence',\n      'Decorating unattractive UI',\n      'Refactoring dirty code',\n      'Writing fake news',\n      'Patching security vulnerabilities'\n    ]\n    this.state = {\n      error: null,\n      waitMessage: DataUtils.randomArrayItem(this.waitMessages)\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchPosts()\n    // DataUtils.addPostsToFirestore(20);\n  }\n\n  componentDidUpdate(prevProps) {\n    // console.log(window.store.getState())\n    const posts = this.props.posts\n    if (posts !== prevProps.posts) {\n      this.setState({\n        error: this.props.posts.fetchingError\n      })\n    }\n  }\n\n  ErrorContainer = () => {\n    return (\n      <div className='text-center pt-5'>\n        <div className='pb-2'>\n          <h2>Error. Please reload the page.</h2>\n          <h5>Error message: \"{this.state.error.message}\"</h5>\n        </div>\n      </div>\n    )\n  }\n\n  WaitContainer = () => {\n    const currentIndex = this.waitMessages.findIndex(\n      m => m === this.state.waitMessage\n    )\n    setTimeout(() => {\n      this.setState({\n        waitMessage: DataUtils.nextArrayItem(this.waitMessages, currentIndex)\n      })\n    }, 1000)\n\n    return (\n      <div className='wait-container'>\n        <div className='container text-center h-100 d-flex flex-column justify-content-center'>\n          <Row className='wait-text'>\n            <Col>\n              <h2>{this.state.waitMessage + `.`}</h2>\n            </Col>\n          </Row>\n          <div className='box-loading' />\n        </div>\n      </div>\n    )\n  }\n\n  MainContainer = () => {\n    const isSignedIn = this.props.isSignedIn\n    return (\n      <Router>\n        <div>\n          <NavbarContainer />\n          <Container>\n            <Row className='pt-5'>\n              <Col sm={3}>\n                <SidePanel />\n              </Col>\n              <Col sm={9}>\n                <Switch>\n                  <Route\n                    exact\n                    path={PUBLIC_URL + '/'}\n                    component={MainBoardContainer}\n                  />\n                  <Route\n                    path={PUBLIC_URL + '/search'}\n                    component={SearchResultContainer}\n                  />\n                  <Route\n                    path={PUBLIC_URL + '/post/id-:id'}\n                    component={route => (\n                      <PostContainer routeParamId={route.match.params.id} />\n                    )}\n                  />\n                  {isSignedIn && (\n                    <Route\n                      path={PUBLIC_URL + '/addpost'}\n                      component={AddPostContainer}\n                    />\n                  )}\n                  {isSignedIn && (\n                    <Route\n                      path={PUBLIC_URL + '/settings'}\n                      component={SettingsContainer}\n                    />\n                  )}\n                </Switch>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </Router>\n    )\n  }\n\n  render() {\n    if (this.props.posts.length !== 0 && this.state.error === null) {\n      return <this.MainContainer />\n    } else if (this.state.error !== null) {\n      return <this.ErrorContainer />\n    } else {\n      return <this.WaitContainer />\n    }\n  }\n}\n\nexport default App\n","import { connect } from 'react-redux'\nimport { fetchPosts, filterPosts, unwrapTags, unwrapDates } from '../actions'\nimport App from '../components/App'\n\nconst mapStateToProps = state => ({\n  posts: state.posts,\n  filters: state.filters,\n  isSignedIn: state.auth.isSignedIn\n})\n\nconst mapDispatchToProps = { fetchPosts, filterPosts, unwrapTags, unwrapDates }\n\nexport const AppContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\nimport { AppContainer } from './containers/AppContainer'\nimport * as serviceWorker from './serviceWorker'\nimport './styles/_index.scss'\n\nexport const PUBLIC_URL = process.env.PUBLIC_URL\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n// TODO: Remove. For debugging purposes only!\nwindow.store = store\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
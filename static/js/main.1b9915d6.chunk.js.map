{"version":3,"sources":["data/firebase.js","data/index.js","data/generator.js","data/dataUtils.js","reducers/reducersUtils.js","reducers/posts.js","reducers/auth.js","reducers/filters.js","reducers/index.js","actions/filters.js","actions/posts.js","data/propTypes.js","components/Navbar/SearchForm.js","components/Navbar/SignInForm.js","components/Navbar/Navbar.js","actions/auth.js","containers/NavbarContainer.js","components/SidePanel/AboutMe.js","components/SidePanel/Tags.js","components/SidePanel/Archives.js","components/SidePanel/SidePanel.js","containers/SidePanelContainer.js","components/MainPanel/PostCard/PostCardHorizontal.js","components/MainPanel/PostCard/PostCardVertical.js","components/MainPanel/PostCard/PostCard.js","containers/PostCardContainer.js","components/MainPanel/SearchResult.js","components/MainPanel/MainBoard.js","components/MainPanel/Post.js","components/MainPanel/PostEditor/Form.js","components/MainPanel/PostEditor/FormattingHelp.js","components/MainPanel/PostEditor/Helper.js","components/MainPanel/PostEditor/PostEditor.js","containers/PostEditorContainer.js","components/MainPanel/Settings.js","containers/SettingsContainer.js","components/App.js","containers/AppContainer.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseFirestore","firestore","Post","id","title","shortDescription","text","author","date","tags","mainImage","Object","classCallCheck","this","_id","_title","_shortDescription","_text","_author","_date","_tags","_mainImage","DataGenerator","_this","_generate","quantity","chance","Chance","examplePost","DataUtils","generateExampleMarkdownPost","i","_data","push","uuidv1","string","american","year","randomArrayItem","arrayFromArrayRandomItems","word","length","isNullEmptyOrUndefinded","Error","fetch","Promise","resolve","reject","result","array","Math","floor","random","value","undefined","Array","from","filter","randomBoolean","arrayContainsAllElementsFromAnother","array0","array1","map","a","some","b","every","e","nextArrayItem","currentIndex","getEmailPrefix","email","slice","indexOf","convertSentenceToTagsArray","words","split","convertTagsArrayToSentence","tagsArray","tag","join","randomSentence","sentence","randomParagraph","sentences","paragraph","randomImageSrc","concat","convertMarkdownToHtml","markdownString","showdown","Converter","noHeaderId","makeHtml","updateCodeSyntaxHighlighting","document","querySelectorAll","forEach","block","hljs","highlightBlock","jsPostObjToFirestoreObj","post","Timestamp","fromDate","firestorePostObjToJsOjb","firestoreObj","toDate","addPostsToFirestore","num","then","posts","collection","doc","set","catch","error","console","err","log","ReducersUtils","sortPostsByDateDesc","sort","Date","unwrapTagsFromPosts","allTags","flat","uniqueTags","Set","uniqueWithQuantity","uniqueTag","name","state","switchTagState","tagName","find","filterPostsBy","filters","dates","searchValue","filtered","switchedOnTags","toLowerCase","includes","switchedOnYears","yearState","getFullYear","switchedOnMonths","months","month","item","monthNameFromDate","unwrapDatesFromPosts","years","yearsWithMonths","postsQuantityByDate","toLocaleString","switchDateState","dateToSwitch","archiveDates","resetFilters","reseted","assign","PostsShape","data","fetchingError","authShape","displayName","isSignedIn","errorMessage","filtersShape","combineReducers","arguments","action","type","objectSpread","toConsumableArray","editedPostId","postId","filteredPosts","auth","filterPosts","unwrapTags","unwrapDates","fetchPosts","dispatch","getState","get","querySnapshot","docs","postsFetchedSuccess","PropTypes","shape","arrayOf","instanceOf","number","bool","yearStare","SearchForm","handleSearchFormInputChange","event","target","props","handleSearchInput","react_default","createElement","es_Form","className","inline","Link","to","PUBLIC_URL","FormControl","placeholder","onChange","Component","SignInForm","possibleConstructorReturn","getPrototypeOf","call","handleSignIn","signIn","formData","password","setState","authFailed","handleHideSignInModal","onSignInFormHide","handleFormInputChange","targetName","targetValue","isFieldValid","checkValidity","formValidation","defineProperty","isFormValid","values","v","isFieldValidated","isFormValidated","Modal","show","signInModalShow","onHide","size","aria-labelledby","centered","Header","closeButton","Title","Body","validated","Group","Control","required","Feedback","Row","Col","role","Button","variant","onClick","disabled","Navbar","handleLogoClick","handleSignInClick","signOut","handleMobileMenuClick","sideBarColumn","querySelector","mobileMenuVisible","mobileMenuButton","classList","remove","add","setTimeout","handleThemeChange","body","isNightMode","es_Navbar","Container","Navbar_SearchForm","Navbar_SignInForm","signedIn","fetchedUserData","mapDispatchToProps","signInWithEmailAndPassword","user","currentUser","userEmail","fetchSignedInUserData","message","NavbarContainer","connect","AboutMe","src","alt","height","href","rel","Tags","onTagClick","preventDefault","key","Badge","Archives","onDateClick","Dates","SidePanel","SidePanel_AboutMe","SidePanel_Tags","SidePanel_Archives","SidePanelContainer","PostsCardHorizontal","postURL","Card","substring","day","onEditPost","onRemovePost","PostCardVertical","PostsCard","handleEditPost","handleRemovePost","removePost","HorizontalCard","PostCardHorizontal","VerticalCard","PostCard_PostCardVertical","cardVersion","delete","removePostByIdFromFirestore","PostCardContainer","PostCard","SearchResult","PostCards","react_addons_css_transition_group_default","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","EmptyResult","MainBoard","HeadPosts","headPostsNum","routeParamId","tempPost","sm","dangerouslySetInnerHTML","__html","Form","handleFinishEdit","onFinishEditPost","PostObject","sourcePost","authDisplayName","handleInputChange","regex","imageURL","prevProps","wasCleared","maxLength","as","rows","pattern","MainPanel_Post","FormattingHelp","Table","bordered","width","Helper","handleShowFormattingHelp","current","showFormattingHelp","handlePasteExample","shouldClearPastedExample","generatedExample","onPasteExample","PostEditor_FormattingHelp","PostEditor","handleAddPost","editedPost","addPost","PostEditor_Helper","PostEditor_Form","addPostToFirestore","PostEditorContainer","Settings","handleRemoveAllPosts","handleUserDataChange","SettingsContainer","App","ErrorContainer","WaitContainer","waitMessages","findIndex","m","waitMessage","MainContainer","BrowserRouter","md","lg","Switch","Route","exact","path","component","MainPanel_MainBoard","MainPanel_SearchResult","route","match","params","AppContainer","Boolean","window","location","hostname","__webpack_require__","d","__webpack_exports__","process","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b9915d6.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport DataUtils from './dataUtils'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBU_CK4oTRzwPIOjZWQn8tpF5kOcnESnps',\r\n  authDomain: 'twistezo-blog.firebaseapp.com',\r\n  databaseURL: 'https://twistezo-blog.firebaseio.com',\r\n  projectId: 'twistezo-blog',\r\n  storageBucket: 'twistezo-blog.appspot.com',\r\n  messagingSenderId: '1065707028990'\r\n}\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport default firebase\r\nexport const firebaseFirestore = firebase.firestore()\r\n\r\nexport const fetchPostsFromFirestore = () =>\r\n  firebaseFirestore\r\n    .collection('posts')\r\n    .get()\r\n    .then(querySnapshot =>\r\n      querySnapshot.docs.map(doc =>\r\n        DataUtils.firestorePostObjToJsOjb(doc.data())\r\n      )\r\n    )\r\n    .catch(\r\n      error => new Error('Errow while fetching posts. Error message: ', error)\r\n    )\r\n\r\nexport const addPostToFirestore = post =>\r\n  firebaseFirestore\r\n    .collection('posts')\r\n    .doc(post.id)\r\n    .set(DataUtils.jsPostObjToFirestoreObj(post))\r\n    .catch(\r\n      error => new Error('Errow while adding post. Error message: ', error)\r\n    )\r\n\r\nexport const removePostByIdFromFirestore = postId =>\r\n  firebaseFirestore\r\n    .collection('posts')\r\n    .doc(postId)\r\n    .delete()\r\n    .catch(\r\n      error => new Error('Errow while removing post. Error message: ', error)\r\n    )\r\n\r\nexport const signInWithEmailAndPassword = (email, password) =>\r\n  firebase.auth().signInWithEmailAndPassword(email, password)\r\n\r\nexport const fetchSignedInUserData = () => {\r\n  const user = firebase.auth().currentUser\r\n  const userEmail = user.email\r\n  const displayName = user.displayName\r\n  const newDisplayName =\r\n    displayName === null ? DataUtils.getEmailPrefix(userEmail) : displayName\r\n  return {\r\n    name: newDisplayName,\r\n    email: userEmail\r\n  }\r\n}\r\n\r\nexport const signOutUser = () => firebase.auth().signOut()\r\n","class Post {\r\n  constructor(\r\n    id,\r\n    title,\r\n    shortDescription,\r\n    text,\r\n    author,\r\n    date,\r\n    tags,\r\n    mainImage\r\n  ) {\r\n    this._id = id\r\n    this._title = title\r\n    this._shortDescription = shortDescription\r\n    this._text = text\r\n    this._author = author\r\n    this._date = date\r\n    this._tags = tags\r\n    this._mainImage = mainImage\r\n  }\r\n\r\n  get id() {\r\n    return this._id\r\n  }\r\n\r\n  get title() {\r\n    return this._title\r\n  }\r\n\r\n  get shortDescription() {\r\n    return this._shortDescription\r\n  }\r\n\r\n  get text() {\r\n    return this._text\r\n  }\r\n\r\n  get author() {\r\n    return this._author\r\n  }\r\n\r\n  get date() {\r\n    return this._date\r\n  }\r\n\r\n  set date(date) {\r\n    this._date = date\r\n  }\r\n\r\n  get tags() {\r\n    return this._tags\r\n  }\r\n\r\n  get mainImage() {\r\n    return this._mainImage\r\n  }\r\n}\r\n\r\nexport { Post }\r\n","import Chance from 'chance'\r\nimport uuidv1 from 'uuid/v1'\r\nimport DataUtils from './dataUtils'\r\nimport { Post } from './'\r\n\r\nclass DataGenerator {\r\n  constructor() {\r\n    this._data = []\r\n    this._tags = ['#javascript', '#css', '#rust', '#webpack', '#cargo']\r\n  }\r\n\r\n  _generate = quantity => {\r\n    const chance = new Chance()\r\n    const examplePost = DataUtils.generateExampleMarkdownPost()\r\n    for (let i = 0; i < quantity; i++) {\r\n      this._data.push(\r\n        new Post(\r\n          uuidv1(),\r\n          examplePost.title,\r\n          examplePost.shortDescription,\r\n          examplePost.text,\r\n          'twistezo',\r\n          chance.date({\r\n            string: false,\r\n            american: false,\r\n            year: DataUtils.randomArrayItem([2016, 2017, 2018])\r\n          }),\r\n          DataUtils.arrayFromArrayRandomItems(this._tags),\r\n          'https://avatars.dicebear.com/v2/identicon/' +\r\n            chance.word({ length: 15 }) +\r\n            '.svg'\r\n        )\r\n      )\r\n    }\r\n\r\n    return DataUtils.isNullEmptyOrUndefinded(this._data)\r\n      ? new Error('Generate data failed.')\r\n      : this._data\r\n  }\r\n\r\n  fetch = quantity =>\r\n    new Promise((resolve, reject) => {\r\n      const result = this._generate(quantity)\r\n      if (result instanceof Error) {\r\n        reject(\r\n          new Error('Error while fetching data. The data seems to be broken.')\r\n        )\r\n      } else {\r\n        resolve(result)\r\n      }\r\n    })\r\n}\r\n\r\nexport default DataGenerator\r\n","import Chance from 'chance'\r\nimport showdown from 'showdown'\r\nimport firebase from './firebase'\r\nimport { firebaseFirestore } from '../data/firebase'\r\nimport hljs from 'highlight.js'\r\nimport '../styles/_dracula.scss'\r\nimport { Post } from '../data/index'\r\nimport DataGenerator from './generator'\r\n\r\nclass DataUtils {\r\n  static randomArrayItem = array =>\r\n    array[Math.floor(Math.random() * array.length)]\r\n\r\n  static isNullEmptyOrUndefinded = value =>\r\n    value === null || value === [] || value === undefined || value.length === 0\r\n\r\n  static arrayFromArrayRandomItems = array => {\r\n    const result = Array.from(array).filter(() => DataUtils.randomBoolean())\r\n    return result.length === 0 ? [array[0]] : result\r\n  }\r\n\r\n  static randomBoolean = () => Math.random() >= 0.5\r\n\r\n  static arrayContainsAllElementsFromAnother = (array0, array1) =>\r\n    array1\r\n      .map(a => {\r\n        return array0.some(b => {\r\n          return b === a\r\n        })\r\n      })\r\n      .every(e => e)\r\n\r\n  static nextArrayItem = (array, currentIndex) =>\r\n    array[(currentIndex + 1) % array.length]\r\n\r\n  static getEmailPrefix = email => email.slice(0, email.indexOf('@'))\r\n\r\n  /**\r\n   * Convert sentence with words to array of tags.\r\n   * Ex. `java rust scss` to `['#java', '#rust', '#scss']`\r\n   * @param {string} words Sentence of tags.\r\n   * @return {array} Array of hashtags.\r\n   */\r\n  static convertSentenceToTagsArray = words =>\r\n    words !== null && words !== undefined && words !== ''\r\n      ? words.split(' ').map(word => '#' + word)\r\n      : []\r\n\r\n  /**\r\n   * Convert array of tags to sentence with words.\r\n   * Ex. `['#java', '#rust', '#scss']` to `java rust scss`\r\n   * @param {array} tagsArray Array of hashtags.\r\n   * @return {string} Sentence of tags.\r\n   */\r\n  static convertTagsArrayToSentence = tagsArray => {\r\n    const joined = tagsArray.map(tag => tag.slice(1)).join(' ')\r\n    return joined\r\n  }\r\n\r\n  static generateExampleMarkdownPost = () => {\r\n    const chance = new Chance()\r\n    const randomSentence = words => chance.sentence({ words })\r\n    const randomParagraph = sentences =>\r\n      chance.paragraph({\r\n        sentences\r\n      })\r\n\r\n    const word = length => chance.word({ length })\r\n    const randomImageSrc = `https://avatars.dicebear.com/v2/identicon/${word(\r\n      15\r\n    )}.svg`\r\n    const title = randomSentence(6)\r\n    const shortDescription = randomParagraph(3)\r\n    const text = `### ${randomSentence(6)}\r\n    \\n ${randomParagraph(10)}\r\n    \\n![Alt Text](${randomImageSrc} =200x200)\r\n    \\nPhoto: *${randomSentence(6)}*\r\n    \\n### ${randomSentence(6)}\r\n    \\n${randomParagraph(6)}\r\n    \\n${word()} ${word()}:\r\n    \\n* ${word()}\r\n    \\n* ${word()}\r\n    \\n* ${word()}\r\n    \\n### ${randomSentence(6)}\r\n    \\nSome code:\r\n    \\n\r\n    \\`\\`\\`\r\n    function resolveAfter2Seconds() {\r\n      return new Promise(resolve => {\r\n        setTimeout(() => {\r\n          resolve('resolved');\r\n        }, 2000);\r\n      });\r\n    }\r\n    \r\n    async function asyncCall() {\r\n      console.log('calling');\r\n      var result = await resolveAfter2Seconds();\r\n      console.log(result);\r\n      // expected output: 'resolved'\r\n    }\r\n    \r\n    asyncCall();\r\n    \\`\\`\\`\r\n    \\nVisit: <http://www.example.com>\r\n    `\r\n    const tags = ['#rust', '#java', '#scss']\r\n    return {\r\n      title,\r\n      shortDescription,\r\n      text,\r\n      randomImageSrc,\r\n      tags\r\n    }\r\n  }\r\n\r\n  static convertMarkdownToHtml = markdownString =>\r\n    new showdown.Converter({ noHeaderId: true }).makeHtml(markdownString)\r\n\r\n  static updateCodeSyntaxHighlighting = () => {\r\n    document.querySelectorAll('pre code').forEach(block => {\r\n      hljs.highlightBlock(block)\r\n    })\r\n  }\r\n\r\n  static jsPostObjToFirestoreObj = post => ({\r\n    id: post.id,\r\n    title: post.title,\r\n    shortDescription: post.shortDescription,\r\n    text: post.text,\r\n    author: post.author,\r\n    date: firebase.firestore.Timestamp.fromDate(post.date),\r\n    tags: post.tags,\r\n    mainImage: post.mainImage\r\n  })\r\n\r\n  static firestorePostObjToJsOjb = firestoreObj =>\r\n    new Post(\r\n      firestoreObj.id,\r\n      firestoreObj.title,\r\n      firestoreObj.shortDescription,\r\n      firestoreObj.text,\r\n      firestoreObj.author,\r\n      firestoreObj.date.toDate(),\r\n      firestoreObj.tags,\r\n      firestoreObj.mainImage\r\n    )\r\n\r\n  /**\r\n   * Use only for first time writing to firestore random generated data.\r\n   * It creates in firestore  `posts` collection with documents `post` by `post.id`.\r\n   */\r\n  static addPostsToFirestore = num => {\r\n    new DataGenerator()\r\n      .fetch(num)\r\n      .then(posts => {\r\n        posts.forEach(post => {\r\n          firebaseFirestore\r\n            .collection('posts')\r\n            .doc(post.id)\r\n            .set(DataUtils.jsPostObjToFirestoreObj(post))\r\n            .catch(error =>\r\n              console.error('Skipping write document cause: ', error)\r\n            )\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport default DataUtils\r\n","import DataUtils from '../data/dataUtils'\r\n\r\nclass ReducersUtils {\r\n  static sortPostsByDateDesc = posts =>\r\n    posts.sort((a, b) => new Date(b.date) - new Date(a.date))\r\n\r\n  static unwrapTagsFromPosts = posts => {\r\n    const allTags = Array.from(posts.map(post => post.tags).flat())\r\n    const uniqueTags = Array.from(new Set(allTags))\r\n\r\n    let uniqueWithQuantity = []\r\n    uniqueTags.forEach(uniqueTag =>\r\n      uniqueWithQuantity.push({\r\n        name: uniqueTag,\r\n        quantity: allTags.filter(tag => tag === uniqueTag).length,\r\n        state: false\r\n      })\r\n    )\r\n\r\n    return uniqueWithQuantity\r\n  }\r\n\r\n  static switchTagState = (tagName, tags) => {\r\n    let tag = tags.find(tag => tag.name === tagName)\r\n    tag.state = !tag.state\r\n    return tags\r\n  }\r\n\r\n  static filterPostsBy = (posts, filters) => {\r\n    const tags = filters.tags\r\n    const dates = filters.dates\r\n    const searchValue = filters.searchValue\r\n\r\n    let filtered = []\r\n    const switchedOnTags = tags.filter(tag => tag.state).map(tag => tag.name)\r\n    filtered = posts.filter(\r\n      post =>\r\n        // by tags\r\n        DataUtils.arrayContainsAllElementsFromAnother(\r\n          post.tags,\r\n          switchedOnTags\r\n        ) &&\r\n        // by searchValue (title)\r\n        post.title.toLowerCase().includes(searchValue.toLowerCase())\r\n    )\r\n\r\n    // by date - years\r\n    let switchedOnYears = dates\r\n      .filter(date => date.yearState)\r\n      .map(date => date.year)\r\n    if (switchedOnYears.length !== 0) {\r\n      filtered = filtered.filter(post =>\r\n        DataUtils.arrayContainsAllElementsFromAnother(switchedOnYears, [\r\n          post.date.getFullYear()\r\n        ])\r\n      )\r\n    }\r\n\r\n    // by date - months\r\n    let switchedOnMonths = dates\r\n      .map(date =>\r\n        date.months\r\n          .map(month => ({\r\n            year: date.year,\r\n            month: month.name,\r\n            state: month.state\r\n          }))\r\n          .flat()\r\n      )\r\n      .flat()\r\n      .filter(month => month.state)\r\n    if (switchedOnMonths.length !== 0) {\r\n      filtered = filtered.filter(\r\n        post =>\r\n          switchedOnMonths.some(\r\n            item => item.year === post.date.getFullYear()\r\n          ) &&\r\n          switchedOnMonths.some(\r\n            item => item.month === ReducersUtils.monthNameFromDate(post.date)\r\n          )\r\n      )\r\n    }\r\n    return ReducersUtils.sortPostsByDateDesc(filtered)\r\n  }\r\n\r\n  static unwrapDatesFromPosts = posts => {\r\n    const years = Array.from(\r\n      new Set(posts.map(post => post.date.getFullYear()))\r\n    )\r\n\r\n    let yearsWithMonths = []\r\n    years.forEach(year =>\r\n      yearsWithMonths.push({\r\n        year: year,\r\n        yearState: false,\r\n        months: Array.from(\r\n          new Set(\r\n            posts\r\n              .filter(post => post.date.getFullYear() === year)\r\n              .map(post => ReducersUtils.monthNameFromDate(post.date))\r\n          )\r\n        ).map(month => ({\r\n          name: month,\r\n          quantity: ReducersUtils.postsQuantityByDate(posts, month, year),\r\n          state: false\r\n        }))\r\n      })\r\n    )\r\n    return yearsWithMonths\r\n  }\r\n\r\n  static postsQuantityByDate = (posts, month, year) =>\r\n    posts.filter(\r\n      post =>\r\n        post.date.getFullYear() === year &&\r\n        ReducersUtils.monthNameFromDate(post.date) === month\r\n    ).length\r\n\r\n  static monthNameFromDate = date =>\r\n    date.toLocaleString('en-us', { month: 'long' })\r\n\r\n  static switchDateState = (dateToSwitch, archiveDates) => {\r\n    if (dateToSwitch.month === undefined) {\r\n      let date = archiveDates.find(date => date.year === dateToSwitch.year)\r\n      date.yearState = !date.yearState\r\n      // reset all months state\r\n      archiveDates.forEach(date =>\r\n        date.months.forEach(month => (month.state = false))\r\n      )\r\n    } else {\r\n      let month = archiveDates\r\n        .find(date => date.year === dateToSwitch.year)\r\n        .months.find(month => month.name === dateToSwitch.month)\r\n      month.state = !month.state\r\n      // reset all years state\r\n      archiveDates.forEach(date => (date.yearState = false))\r\n    }\r\n    return archiveDates\r\n  }\r\n\r\n  static resetFilters = filters => {\r\n    let reseted = Object.assign({}, filters)\r\n    reseted.tags.forEach(tag => (tag.state = false))\r\n    reseted.dates.forEach(date => (date.yearState = false))\r\n    reseted.dates.forEach(date =>\r\n      date.months.forEach(month => (month.state = false))\r\n    )\r\n    reseted.searchValue = ''\r\n    return reseted\r\n  }\r\n}\r\n\r\nexport default ReducersUtils\r\n","import ReducersUtils from './reducersUtils'\r\n\r\nconst PostsShape = {\r\n  data: [],\r\n  fetchingError: null\r\n}\r\n\r\nexport const posts = (state = PostsShape, action) => {\r\n  switch (action.type) {\r\n    case 'POSTS_FETCHED_SUCCESS':\r\n      return {\r\n        ...state,\r\n        data: [...ReducersUtils.sortPostsByDateDesc(action.posts)],\r\n        fetchingError: null\r\n      }\r\n    case 'POSTS_FETCHED_ERROR':\r\n      return {\r\n        ...state,\r\n        data: [],\r\n        fetchingError: action.fetchingError\r\n      }\r\n    case 'EDITED_POST_ID':\r\n      return {\r\n        ...state,\r\n        editedPostId: action.postId\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const authShape = {\r\n  displayName: '',\r\n  email: '',\r\n  isSignedIn: false,\r\n  errorMessage: ''\r\n}\r\n\r\nexport const auth = (state = authShape, action) => {\r\n  switch (action.type) {\r\n    case 'SIGNED_IN':\r\n      return {\r\n        ...state,\r\n        isSignedIn: action.isSignedIn,\r\n        errorMessage: action.errorMessage\r\n      }\r\n    case 'FETCHED_USER_DATA':\r\n      return {\r\n        ...state,\r\n        displayName: action.displayName,\r\n        email: action.email\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import ReducersUtils from './reducersUtils'\r\n\r\nexport const filteredPosts = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'FILTER_POSTS':\r\n      return [...ReducersUtils.filterPostsBy(action.posts, action.filters)]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst filtersShape = {\r\n  tags: [],\r\n  dates: [],\r\n  searchValue: ''\r\n}\r\n\r\nexport const filters = (state = filtersShape, action) => {\r\n  switch (action.type) {\r\n    case 'UNWRAP_TAGS':\r\n      return {\r\n        ...state,\r\n        tags: [...ReducersUtils.unwrapTagsFromPosts(action.posts)]\r\n      }\r\n    case 'SWITCH_TAG':\r\n      return {\r\n        ...state,\r\n        tags: [...ReducersUtils.switchTagState(action.tagName, state.tags)]\r\n      }\r\n    case 'UNWRAP_DATES':\r\n      return {\r\n        ...state,\r\n        dates: [...ReducersUtils.unwrapDatesFromPosts(action.posts)]\r\n      }\r\n    case 'SWITCH_DATE_STATE':\r\n      return {\r\n        ...state,\r\n        dates: [...ReducersUtils.switchDateState(action.date, state.dates)]\r\n      }\r\n    case 'HANDLE_SEARCH_INPUT':\r\n      return {\r\n        ...state,\r\n        searchValue: action.value\r\n      }\r\n    case 'RESET_FILTERS':\r\n      return ReducersUtils.resetFilters(action.filters)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { posts } from './posts'\r\nimport { auth } from './auth'\r\nimport { filters, filteredPosts } from './filters'\r\n\r\nexport default combineReducers({\r\n  posts,\r\n  filteredPosts,\r\n  filters,\r\n  auth\r\n})\r\n","export const filterPosts = (posts, filters) => ({\r\n  type: 'FILTER_POSTS',\r\n  posts,\r\n  filters\r\n})\r\n\r\nexport const unwrapTags = posts => ({\r\n  type: 'UNWRAP_TAGS',\r\n  posts\r\n})\r\n\r\nexport const switchTagState = tagName => ({\r\n  type: 'SWITCH_TAG',\r\n  tagName\r\n})\r\n\r\nexport const unwrapDates = posts => ({\r\n  type: 'UNWRAP_DATES',\r\n  posts\r\n})\r\n\r\nexport const switchDateState = date => ({\r\n  type: 'SWITCH_DATE_STATE',\r\n  date\r\n})\r\n\r\nexport const handleSearchInput = value => ({\r\n  type: 'HANDLE_SEARCH_INPUT',\r\n  value\r\n})\r\n\r\nexport const resetFilters = filters => ({\r\n  type: 'RESET_FILTERS',\r\n  filters\r\n})\r\n","import {\r\n  fetchPostsFromFirestore,\r\n  addPostToFirestore,\r\n  removePostByIdFromFirestore\r\n} from '../data/firebase'\r\n\r\nimport { unwrapTags, unwrapDates, filterPosts } from './filters'\r\n\r\nconst postsFetchedSuccess = posts => ({\r\n  type: 'POSTS_FETCHED_SUCCESS',\r\n  posts\r\n})\r\n\r\nconst postsFetchedError = fetchingError => ({\r\n  type: 'POSTS_FETCHED_ERROR',\r\n  fetchingError\r\n})\r\n\r\nexport const fetchPosts = () => (dispatch, getState) => {\r\n  fetchPostsFromFirestore()\r\n    .then(posts => {\r\n      dispatch(postsFetchedSuccess(posts))\r\n      dispatch(unwrapTags(posts))\r\n      dispatch(unwrapDates(posts))\r\n      dispatch(filterPosts(posts, getState().filters))\r\n    })\r\n    .catch(error => dispatch(postsFetchedError(error)))\r\n}\r\n\r\nexport const addPost = post => dispatch => {\r\n  addPostToFirestore(post).then(() => dispatch(fetchPosts()))\r\n}\r\n\r\nexport const removePost = postId => dispatch => {\r\n  removePostByIdFromFirestore(postId)\r\n    .then(() => dispatch(fetchPosts()))\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const editedPostId = postId => ({\r\n  type: 'EDITED_POST_ID',\r\n  postId\r\n})\r\n","import PropTypes from 'prop-types'\r\nimport { Post } from './index'\r\n\r\nexport const PostsShape = PropTypes.shape({\r\n  data: PropTypes.arrayOf(PropTypes.instanceOf(Post)),\r\n  fetchingError: PropTypes.string\r\n})\r\n\r\nexport const PostsDataShape = PropTypes.arrayOf(PropTypes.instanceOf(Post))\r\n\r\nexport const FilteredPostsShape = PropTypes.arrayOf(PropTypes.instanceOf(Post))\r\n\r\nexport const FiltersShape = PropTypes.shape({\r\n  tags: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      quantity: PropTypes.number,\r\n      state: PropTypes.bool\r\n    })\r\n  ),\r\n  dates: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      months: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          name: PropTypes.string,\r\n          quantity: PropTypes.number,\r\n          state: PropTypes.bool\r\n        })\r\n      ),\r\n      year: PropTypes.number,\r\n      yearStare: PropTypes.bool\r\n    })\r\n  ),\r\n  searchValue: PropTypes.string\r\n})\r\n\r\nexport const AuthShape = PropTypes.shape({\r\n  displayName: PropTypes.string,\r\n  email: PropTypes.string,\r\n  isSignedIn: PropTypes.bool,\r\n  errorMessage: PropTypes.string\r\n})\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { PostsDataShape, FiltersShape } from '../../data/propTypes'\r\nimport { Form, FormControl } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { PUBLIC_URL } from '../../index'\r\n\r\nclass SearchForm extends Component {\r\n  handleSearchFormInputChange = event => {\r\n    const value = event.target.value\r\n    this.props.handleSearchInput(value)\r\n\r\n    let filters = Object.assign({}, this.props.filters)\r\n    filters.searchValue = value\r\n    this.props.filterPosts(this.props.posts, filters)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form className='order-2 flex-fill mr-3' inline>\r\n        <Link to={PUBLIC_URL + '/search'}>\r\n          <FormControl\r\n            className='nav-search-input'\r\n            name='search'\r\n            type='text'\r\n            value={this.props.filters.searchValue}\r\n            placeholder='search'\r\n            onChange={this.handleSearchFormInputChange}\r\n          />\r\n        </Link>\r\n        <i className='fas fa-search d-none d-sm-block' />\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nSearchForm.propTypes = {\r\n  posts: PostsDataShape,\r\n  filters: FiltersShape,\r\n  handleSearchInput: PropTypes.func,\r\n  filterPosts: PropTypes.func\r\n}\r\n\r\nexport default SearchForm\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Col, Row, Button, Modal } from 'react-bootstrap'\r\n\r\nclass SignInForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      formData: {\r\n        email: '',\r\n        password: ''\r\n      },\r\n      formValidation: {\r\n        email: false,\r\n        password: false\r\n      },\r\n      isFormValid: false,\r\n      isFormValidated: false,\r\n      authFailed: false\r\n    }\r\n  }\r\n\r\n  handleSignIn = () => {\r\n    this.props\r\n      .signIn(this.state.formData.email, this.state.formData.password)\r\n      .then(result => {\r\n        if (result.isSignedIn === false && result.errorMessage !== '') {\r\n          this.setState({\r\n            ...this.state,\r\n            formData: {\r\n              ...this.state.formData,\r\n              password: ''\r\n            },\r\n            authFailed: true\r\n          })\r\n        } else {\r\n          this.setState({ ...this.state, authFailed: false })\r\n          this.handleHideSignInModal()\r\n        }\r\n      })\r\n  }\r\n\r\n  handleHideSignInModal = () => {\r\n    this.props.onSignInFormHide()\r\n  }\r\n\r\n  handleFormInputChange = event => {\r\n    const targetName = event.target.name\r\n    const targetValue = event.target.value\r\n    const isFieldValid = event.target.checkValidity() === true\r\n    let formValidation = { ...this.state.formValidation }\r\n    formValidation[targetName] = isFieldValid\r\n\r\n    this.setState(() => ({\r\n      formData: {\r\n        ...this.state.formData,\r\n        [targetName]: targetValue\r\n      },\r\n      formValidation,\r\n      isFormValid: Object.values(formValidation).every(v => v === true),\r\n      isFieldValidated: true\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        show={this.props.signInModalShow}\r\n        onHide={this.props.onSignInFormHide}\r\n        size='sm'\r\n        aria-labelledby='contained-modal-title-vcenter'\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id='contained-modal-title-vcenter'>Sign in</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form className='pt-3' validated={this.state.isFieldValidated}>\r\n            <Form.Group>\r\n              <Form.Control\r\n                name='email'\r\n                value={this.state.formData.email}\r\n                type='email'\r\n                placeholder='Email'\r\n                required\r\n                onChange={this.handleFormInputChange}\r\n              />\r\n              <Form.Control.Feedback type='invalid'>\r\n                Incorrect email format.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                name='password'\r\n                value={this.state.formData.password}\r\n                type='password'\r\n                placeholder='Password'\r\n                required\r\n                onChange={this.handleFormInputChange}\r\n              />\r\n              <Form.Control.Feedback type='invalid'>\r\n                Password is required.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            {this.state.authFailed && (\r\n              <Row className='pt-2 text-center'>\r\n                <Col>\r\n                  <div className='alert alert-danger' role='alert'>\r\n                    Wrong email or password.\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n            <Row className='pt-3 pb-3 text-center'>\r\n              <Col>\r\n                <Button\r\n                  variant='outline-info'\r\n                  onClick={this.handleHideSignInModal}\r\n                >\r\n                  Back\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  variant='outline-info'\r\n                  disabled={!this.state.isFormValid}\r\n                  onClick={this.handleSignIn}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nSignInForm.propTypes = {\r\n  signIn: PropTypes.func,\r\n  onSignInFormHide: PropTypes.func,\r\n  signInModalShow: PropTypes.bool,\r\n}\r\n\r\nexport default SignInForm\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { PostsDataShape, FiltersShape, AuthShape } from '../../data/propTypes'\r\nimport { Link } from 'react-router-dom'\r\nimport { Navbar as BsNavbar, Button, Container } from 'react-bootstrap'\r\nimport SearchForm from './SearchForm'\r\nimport SignInForm from './SignInForm'\r\nimport { PUBLIC_URL } from '../../index'\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      signInModalShow: false,\r\n      mobileMenuVisible: false,\r\n      isNightMode: false\r\n    }\r\n  }\r\n\r\n  handleLogoClick = () => {\r\n    this.props.resetFilters(this.props.filters)\r\n    this.props.filterPosts(this.props.posts, {\r\n      tags: [],\r\n      dates: [],\r\n      searchValue: ''\r\n    })\r\n  }\r\n\r\n  handleSignInClick = () => {\r\n    if (this.props.auth.isSignedIn) {\r\n      this.props.signOut()\r\n    } else {\r\n      this.setState({ signInModalShow: true })\r\n    }\r\n  }\r\n\r\n  handleHideSignInModal = () => {\r\n    this.setState({ signInModalShow: false })\r\n  }\r\n\r\n  handleMobileMenuClick = () => {\r\n    let sideBarColumn = document.querySelector('.side-panel')\r\n    let mobileMenuVisible = this.state.mobileMenuVisible\r\n    let mobileMenuButton = document.querySelector('.mobile-menu-button')\r\n\r\n    if (!mobileMenuVisible) {\r\n      // hide menu on `lg` sizes\r\n      sideBarColumn.classList.remove('slide-in-left-rev')\r\n      sideBarColumn.classList.add('slide-in-left')\r\n      sideBarColumn.classList.remove('d-none')\r\n      sideBarColumn.classList.remove('d-lg-block')\r\n      // animate button\r\n      mobileMenuButton.classList.remove('rotate-90-cw-reverse')\r\n      mobileMenuButton.classList.add('rotate-90-cw')\r\n    } else {\r\n      // hide menu on `lg` sizes\r\n      sideBarColumn.classList.remove('slide-in-left')\r\n      sideBarColumn.classList.add('slide-in-left-rev')\r\n      setTimeout(() => {\r\n        sideBarColumn.classList.add('d-none')\r\n        sideBarColumn.classList.add('d-lg-block')\r\n      }, 250)\r\n      // animate button\r\n      mobileMenuButton.classList.remove('rotate-90-cw')\r\n      mobileMenuButton.classList.add('rotate-90-cw-reverse')\r\n    }\r\n\r\n    mobileMenuVisible = !mobileMenuVisible\r\n    this.setState({ ...this.state, mobileMenuVisible })\r\n  }\r\n\r\n  handleThemeChange = () => {\r\n    let body = document.querySelector('body')\r\n    let isNightMode = this.state.isNightMode\r\n    if (!isNightMode) {\r\n      body.classList.add('night-mode')\r\n    } else {\r\n      body.classList.remove('night-mode')\r\n    }\r\n    isNightMode = !isNightMode\r\n    this.setState({ ...this.state, isNightMode })\r\n  }\r\n\r\n  render() {\r\n    const isSignedIn = this.props.auth.isSignedIn\r\n    return (\r\n      <BsNavbar className='sticky-top'>\r\n        <Container className='d-flex flex-wrap align-items-center'>\r\n          <Button\r\n            className='d-lg-none order-0 mr-1'\r\n            variant='outline-info'\r\n            onClick={this.handleMobileMenuClick}\r\n          >\r\n            <i className='mobile-menu-button fas fa-bars' />\r\n          </Button>\r\n          <Link\r\n            className='navbar-brand order-1'\r\n            to={PUBLIC_URL + '/'}\r\n            onClick={this.handleLogoClick}\r\n          >\r\n            <Button variant='outline-info' className='d-sm-none d-block'>\r\n              <i className='fas fa-home' />\r\n            </Button>\r\n            <span className='d-none d-sm-block'>John's blog</span>\r\n          </Link>\r\n          <SearchForm // order-2 flex-fill\r\n            posts={this.props.posts}\r\n            filters={this.props.filters}\r\n            filterPosts={this.props.filterPosts}\r\n            handleSearchInput={this.props.handleSearchInput}\r\n          />\r\n          {isSignedIn && (\r\n            <div className='order-5 flex-fill ml-2 pl-1 pl-lg-0 ml-lg-0 mt-1 mt-lg-0'>\r\n              {'Hello, ' + this.props.auth.displayName + '!'}\r\n            </div>\r\n          )}\r\n          {isSignedIn && (\r\n            <Link className='order-6 mt-1 mt-lg-0' to={PUBLIC_URL + '/addpost'}>\r\n              <Button variant='outline-info'>\r\n                <i className='fas fa-pen-alt' />\r\n              </Button>\r\n            </Link>\r\n          )}\r\n          {isSignedIn && (\r\n            <Link\r\n              className='order-7 ml-1 mt-1 mt-lg-0'\r\n              to={PUBLIC_URL + '/settings'}\r\n            >\r\n              <Button variant='outline-info'>\r\n                <i className='fas fa-cogs' />\r\n              </Button>\r\n            </Link>\r\n          )}\r\n          <Button\r\n            className='theme-switcher order-3 order-sm-8 ml-1'\r\n            variant='outline-info'\r\n            onClick={this.handleThemeChange}\r\n          >\r\n            {this.state.isNightMode ? (\r\n              <i className='fas fa-lightbulb' />\r\n            ) : (\r\n              <i className='fas fa-lightbulb' />\r\n            )}\r\n          </Button>\r\n          <Link className='order-4 order-sm-9 pl-1' to={PUBLIC_URL}>\r\n            <Button variant='outline-info' onClick={this.handleSignInClick}>\r\n              {isSignedIn ? (\r\n                <div>\r\n                  <span className='d-none d-md-block'>\r\n                    Sign out &nbsp;\r\n                    <i className='fas fa-sign-out-alt' />\r\n                  </span>\r\n                  <span className='d-md-none d-block'>\r\n                    <i className='fas fa-sign-out-alt' />\r\n                  </span>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <span className='d-none d-md-block'>\r\n                    Sign in &nbsp;\r\n                    <i className='fas fa-sign-in-alt' />\r\n                  </span>\r\n                  <span className='d-md-none d-block'>\r\n                    <i className='fas fa-sign-in-alt' />\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </Button>\r\n          </Link>\r\n          <SignInForm\r\n            signInModalShow={this.state.signInModalShow}\r\n            onSignInFormHide={this.handleHideSignInModal}\r\n            auth={this.props.auth}\r\n            signIn={this.props.signIn}\r\n          />\r\n        </Container>\r\n      </BsNavbar>\r\n    )\r\n  }\r\n}\r\n\r\nNavbar.propTypes = {\r\n  posts: PostsDataShape,\r\n  filters: FiltersShape,\r\n  auth: AuthShape,\r\n  filterPosts: PropTypes.func,\r\n  handleSearchInput: PropTypes.func,\r\n  resetFilters: PropTypes.func,\r\n  signIn: PropTypes.func,\r\n  signOut: PropTypes.func\r\n}\r\n\r\nexport default Navbar\r\n","import {\r\n  signInWithEmailAndPassword,\r\n  fetchSignedInUserData,\r\n  signOutUser\r\n} from '../data/firebase'\r\n\r\nexport const signedIn = (isSignedIn, errorMessage) => ({\r\n  type: 'SIGNED_IN',\r\n  isSignedIn,\r\n  errorMessage\r\n})\r\n\r\nexport const fetchedUserData = (displayName, email) => ({\r\n  type: 'FETCHED_USER_DATA',\r\n  displayName,\r\n  email\r\n})\r\n\r\nexport const signIn = (email, password) => dispatch =>\r\n  signInWithEmailAndPassword(email, password)\r\n    .then(() => dispatch(signedIn(true, '')))\r\n    .then(() => fetchSignedInUserData())\r\n    .then(data => dispatch(fetchedUserData(data.name, data.email)))\r\n    .catch(error => dispatch(signedIn(false, error.message)))\r\n\r\nexport const signOut = () => dispatch =>\r\n  signOutUser()\r\n    .then(() => dispatch(signedIn(false, '')))\r\n    .then(() => dispatch(fetchedUserData('', '')))\r\n","import { connect } from 'react-redux'\r\nimport Navbar from '../components/Navbar/Navbar'\r\nimport { signIn, signOut } from '../actions/auth'\r\nimport {\r\n  filterPosts,\r\n  handleSearchInput,\r\n  resetFilters\r\n} from '../actions/filters'\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.data,\r\n  filters: state.filters,\r\n  auth: state.auth\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  filterPosts,\r\n  handleSearchInput,\r\n  resetFilters,\r\n  signIn,\r\n  signOut\r\n}\r\n\r\nexport const NavbarContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Navbar)\r\n","import React, { Component } from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\n\r\nclass AboutMe extends Component {\r\n  render() {\r\n    return (\r\n      <Container id='about-me'>\r\n        <h3 className='pb-2'>About Me</h3>\r\n        <Row className='pb-3'>\r\n          <img\r\n            src='https://picsum.photos/200/?random'\r\n            alt=''\r\n            className='rounded float-left'\r\n            height='100'\r\n          />\r\n        </Row>\r\n        <Row className='pb-1'>\r\n          <h5>John Smith</h5>\r\n        </Row>\r\n        <Row className='pb-1'>\r\n          <p>Full-stack developer</p>\r\n        </Row>\r\n        <Row className=''>\r\n          <a\r\n            href='https://twitter.com/'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n          >\r\n            <i className='fab fa-twitter' />\r\n          </a>\r\n          <a\r\n            href='https://facebook.com'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n          >\r\n            <i className='fab fa-facebook' />\r\n          </a>\r\n          <a\r\n            href='https://linkedin.com'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n          >\r\n            <i className='fab fa-linkedin' />\r\n          </a>\r\n          <a\r\n            href='https://github.com'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n          >\r\n            <i className='fab fa-github' />\r\n          </a>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AboutMe\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { PostsDataShape, FiltersShape } from '../../data/propTypes'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Badge } from 'react-bootstrap'\r\nimport { PUBLIC_URL } from '../../index'\r\n\r\nclass Tags extends Component {\r\n  onTagClick = (event, tagName) => {\r\n    this.props.switchTagState(tagName)\r\n    this.props.filterPosts(this.props.posts, this.props.filters)\r\n    event.preventDefault()\r\n  }\r\n\r\n  Tags = () => {\r\n    const tags = this.props.filters.tags\r\n    return tags.length > 0\r\n      ? tags.map(tag => (\r\n          <div\r\n            className='mr-2 alert-link'\r\n            key={tag.name}\r\n            onClick={event => this.onTagClick(event, tag.name)}\r\n          >\r\n            <Link to={PUBLIC_URL + '/search'}>\r\n              {tag.name}\r\n              {tag.state ? (\r\n                <i className='far fa-check-square ml-2' />\r\n              ) : (\r\n                <Badge variant='secondary' className='ml-2'>\r\n                  {tag.quantity}\r\n                </Badge>\r\n              )}\r\n            </Link>\r\n          </div>\r\n        ))\r\n      : ''\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div>\r\n          <h3>Tags</h3>\r\n          <span className='d-flex flex-wrap'>\r\n            <this.Tags />\r\n          </span>\r\n        </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nTags.propTypes = {\r\n  posts: PostsDataShape,\r\n  filters: FiltersShape,\r\n  filterPosts: PropTypes.func,\r\n  switchTagState: PropTypes.func\r\n}\r\n\r\nexport default Tags\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { PostsDataShape, FiltersShape } from '../../data/propTypes'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Badge } from 'react-bootstrap'\r\nimport { PUBLIC_URL } from '../../index'\r\n\r\nclass Archives extends Component {\r\n  onDateClick = (event, year, month) => {\r\n    this.props.switchDateState({ year, month })\r\n    this.props.filterPosts(this.props.posts, this.props.filters)\r\n    event.preventDefault()\r\n  }\r\n\r\n  Dates = () => {\r\n    const dates = this.props.filters.dates\r\n    return dates.length > 0\r\n      ? dates.map(date => (\r\n          <ul key={date.year} className='list-unstyled'>\r\n            <div\r\n              className='alert-link'\r\n              onClick={event => this.onDateClick(event, date.year)}\r\n            >\r\n              <Link to={PUBLIC_URL + '/search'}>\r\n                {date.year}\r\n                {date.yearState ? (\r\n                  <i className='far fa-check-square ml-2' />\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </Link>\r\n            </div>\r\n            {date.months.map(month => (\r\n              <li key={month.name}>\r\n                <div\r\n                  className='alert-link'\r\n                  onClick={event =>\r\n                    this.onDateClick(event, date.year, month.name)\r\n                  }\r\n                >\r\n                  <Link to={PUBLIC_URL + '/search'}>\r\n                    {month.name}\r\n                    {month.state ? (\r\n                      <i className='far fa-check-square ml-2' />\r\n                    ) : (\r\n                      <Badge variant='secondary' className='ml-2'>\r\n                        {month.quantity}\r\n                      </Badge>\r\n                    )}\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ))\r\n      : ''\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h3>Archive posts</h3>\r\n        <this.Dates />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nArchives.propTypes = {\r\n  posts: PostsDataShape,\r\n  filters: FiltersShape,\r\n  filterPosts: PropTypes.func,\r\n  switchDateState: PropTypes.func\r\n}\r\n\r\nexport default Archives\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { PostsDataShape, FiltersShape } from '../../data/propTypes'\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport AboutMe from './AboutMe'\r\nimport Tags from './Tags'\r\nimport Archives from './Archives'\r\n\r\nclass SidePanel extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className='pb-5'>\r\n          <AboutMe />\r\n        </Row>\r\n        <Row className='pb-5'>\r\n          <Tags\r\n            posts={this.props.posts}\r\n            filters={this.props.filters}\r\n            switchTagState={this.props.switchTagState}\r\n            filterPosts={this.props.filterPosts}\r\n          />\r\n        </Row>\r\n        <Row>\r\n          <Archives\r\n            posts={this.props.posts}\r\n            filters={this.props.filters}\r\n            switchDateState={this.props.switchDateState}\r\n            filterPosts={this.props.filterPosts}\r\n          />\r\n        </Row>\r\n        <hr className='pb-2 d-lg-none' />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nSidePanel.propTypes = {\r\n  posts: PostsDataShape,\r\n  filters: FiltersShape,\r\n  filterPosts: PropTypes.func,\r\n  switchDateState: PropTypes.func,\r\n  switchTagState: PropTypes.func\r\n}\r\n\r\nexport default SidePanel\r\n","import { connect } from 'react-redux'\r\nimport {\r\n  filterPosts,\r\n  switchDateState,\r\n  switchTagState\r\n} from '../actions/filters'\r\nimport SidePanel from '../components/SidePanel/SidePanel'\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.data,\r\n  filters: state.filters\r\n})\r\n\r\nconst mapDispatchToProps = { filterPosts, switchDateState, switchTagState }\r\n\r\nexport const SidePanelContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SidePanel)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Row, Card, Col, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { PUBLIC_URL } from '../../../index'\r\nimport { Post } from '../../../data/index'\r\n\r\nclass PostsCardHorizontal extends Component {\r\n  render() {\r\n    const post = this.props.post\r\n    const postURL = this.props.postURL\r\n    return (\r\n      <Card className='mb-3'>\r\n        <div className='row no-gutters'>\r\n          <div className='col-md-3 d-flex flex-wrap align-items-center justify-content-center pt-4 pt-md-0'>\r\n            <Link to={postURL}>\r\n              <img src={post.mainImage} className='card-img pl-3' alt='' />\r\n            </Link>\r\n          </div>\r\n          <div className='col-md-9'>\r\n            <div className='card-body'>\r\n              <Link to={postURL}>\r\n                <h5 className='card-title'>{post.title}</h5>\r\n              </Link>\r\n              <p className='card-text text-justify'>\r\n                {post.shortDescription.substring(0, 150) + '...'}\r\n              </p>\r\n              <span className='card-text'>\r\n                <Row>\r\n                  <Col className='flex-fill'>\r\n                    <p className='text-muted mb-0'>\r\n                      {post.author +\r\n                        ', ' +\r\n                        post.date.toLocaleString('pl-PL', {\r\n                          day: 'numeric',\r\n                          month: 'numeric',\r\n                          year: 'numeric'\r\n                        })}\r\n                    </p>\r\n                    <p className='text-muted mb-0'>\r\n                      {post.tags.map(tag => (\r\n                        <span key={tag} className='pr-2'>\r\n                          {tag}\r\n                        </span>\r\n                      ))}\r\n                    </p>\r\n                  </Col>\r\n                  {this.props.isSignedIn && (\r\n                    <Col className='align-self-center pt-3 pt-sm-0'>\r\n                      <div className='float-right'>\r\n                        <Link to={PUBLIC_URL + '/editpost'}>\r\n                          <Button\r\n                            className='btn-sm'\r\n                            variant='outline-primary'\r\n                            onClick={this.props.onEditPost}\r\n                          >\r\n                            Edit &nbsp;\r\n                            <i className='fas fa-edit' />\r\n                          </Button>\r\n                        </Link>\r\n                        <Button\r\n                          variant='outline-primary'\r\n                          className='btn-sm ml-3'\r\n                          onClick={this.props.onRemovePost}\r\n                        >\r\n                          Remove &nbsp;\r\n                          <i className='fas fa-trash-alt' />\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nPostsCardHorizontal.propTypes = {\r\n  post: PropTypes.instanceOf(Post),\r\n  postURL: PropTypes.string,\r\n  isSignedIn: PropTypes.bool,\r\n  onEditPost: PropTypes.func,\r\n  onRemovePost: PropTypes.func\r\n}\r\n\r\nexport default PostsCardHorizontal\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Col, Card, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { PUBLIC_URL } from '../../../index'\r\nimport { Post } from '../../../data/index'\r\n\r\nclass PostCardVertical extends Component {\r\n  render() {\r\n    const post = this.props.post\r\n    const postURL = this.props.postURL\r\n    return (\r\n      <Card id='post-card-vertical' className='mb-3'>\r\n        <Link to={postURL}>\r\n          <img src={post.mainImage} className='card-img-top pt-3' alt='' />\r\n        </Link>\r\n        <div className='card-body'>\r\n          <Link to={postURL}>\r\n            <h5 className='card-title'>{post.title}</h5>\r\n          </Link>\r\n        </div>\r\n        <div className='card-footer'>\r\n          <p className='text-muted mb-0'>\r\n            {post.author +\r\n              ', ' +\r\n              post.date.toLocaleString('pl-PL', {\r\n                day: 'numeric',\r\n                month: 'numeric',\r\n                year: 'numeric'\r\n              })}\r\n          </p>\r\n          <p className='text-muted mb-0'>\r\n            {post.tags.map(tag => (\r\n              <span key={tag} className='pr-2'>\r\n                {tag}\r\n              </span>\r\n            ))}\r\n          </p>\r\n          {this.props.isSignedIn && (\r\n            <Col className='align-self-center text-center pt-2'>\r\n              <div>\r\n                <Link to={PUBLIC_URL + '/editpost'}>\r\n                  <Button\r\n                    className='btn-sm'\r\n                    variant='outline-primary'\r\n                    onClick={this.props.onEditPost}\r\n                  >\r\n                    Edit &nbsp; <i className='fas fa-edit' />\r\n                  </Button>\r\n                </Link>\r\n                <Button\r\n                  variant='outline-primary'\r\n                  className='btn-sm ml-3'\r\n                  onClick={this.props.onRemovePost}\r\n                >\r\n                  Remove &nbsp; <i className='fas fa-trash-alt' />\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          )}\r\n        </div>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nPostCardVertical.propTypes = {\r\n  post: PropTypes.instanceOf(Post),\r\n  postURL: PropTypes.string,\r\n  isSignedIn: PropTypes.bool,\r\n  onEditPost: PropTypes.func,\r\n  onRemovePost: PropTypes.func\r\n}\r\n\r\nexport default PostCardVertical\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { PUBLIC_URL } from '../../../index'\r\nimport PostCardHorizontal from './PostCardHorizontal'\r\nimport PostCardVertical from './PostCardVertical'\r\nimport { Post } from '../../../data/index'\r\n\r\nclass PostsCard extends Component {\r\n  handleEditPost = () => {\r\n    this.props.editedPostId(this.props.post.id)\r\n  }\r\n  handleRemovePost = () => {\r\n    this.props.removePost(this.props.post.id)\r\n  }\r\n\r\n  HorizontalCard = props => (\r\n    <PostCardHorizontal\r\n      post={props.post}\r\n      postURL={props.postURL}\r\n      onEditPost={this.handleEditPost}\r\n      onRemovePost={this.handleRemovePost}\r\n      isSignedIn={props.isSignedIn}\r\n    />\r\n  )\r\n\r\n  VerticalCard = props => (\r\n    <PostCardVertical\r\n      post={props.post}\r\n      postURL={props.postURL}\r\n      onEditPost={this.handleEditPost}\r\n      onRemovePost={this.handleRemovePost}\r\n      isSignedIn={props.isSignedIn}\r\n    />\r\n  )\r\n\r\n  render() {\r\n    const post = this.props.post\r\n    const postURL = PUBLIC_URL + '/post/id-' + post.id\r\n    const isSignedIn = this.props.isSignedIn\r\n    const cardVersion = this.props.cardVersion\r\n    const card =\r\n      cardVersion === 'horizontal' ? (\r\n        <this.HorizontalCard\r\n          post={post}\r\n          postURL={postURL}\r\n          isSignedIn={isSignedIn}\r\n        />\r\n      ) : (\r\n        <this.VerticalCard\r\n          post={post}\r\n          postURL={postURL}\r\n          isSignedIn={isSignedIn}\r\n        />\r\n      )\r\n    return card\r\n  }\r\n}\r\n\r\nPostsCard.propTypes = {\r\n  editedPostId: PropTypes.func,\r\n  removePost: PropTypes.func,\r\n  cardVersion: PropTypes.string,\r\n  post: PropTypes.instanceOf(Post),\r\n  isSignedIn: PropTypes.bool\r\n}\r\n\r\nexport default PostsCard\r\n","import { connect } from 'react-redux'\r\nimport PostCard from '../components/MainPanel/PostCard/PostCard'\r\nimport { removePost, editedPostId } from '../actions/posts'\r\n\r\nconst mapStateToProps = state => ({\r\n  isSignedIn: state.auth.isSignedIn\r\n})\r\n\r\nconst mapDispatchToProps = { removePost, editedPostId }\r\n\r\nexport const PostCardContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PostCard)\r\n","import React, { Component } from 'react'\r\nimport { FilteredPostsShape } from '../../data/propTypes'\r\nimport { Container } from 'react-bootstrap'\r\nimport { PostCardContainer } from '../../containers/PostCardContainer'\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\r\n\r\nclass SearchResult extends Component {\r\n  PostCards = () => {\r\n    return this.props.filteredPosts.map(post => (\r\n      <ReactCSSTransitionGroup\r\n        transitionName='search-result'\r\n        transitionAppear={true}\r\n        transitionAppearTimeout={750}\r\n        transitionEnter={false}\r\n        transitionLeave={false}\r\n        key={post.id}\r\n      >\r\n        <PostCardContainer\r\n          key={post.id}\r\n          cardVersion={'horizontal'}\r\n          post={post}\r\n        />\r\n      </ReactCSSTransitionGroup>\r\n    ))\r\n  }\r\n\r\n  EmptyResult = () => {\r\n    return (\r\n      <div className='text-center pt-5'>\r\n        <div className='pb-2'>\r\n          <h2>Nothing here...</h2>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className='pb-5'>\r\n        {this.props.filteredPosts.length !== 0 ? (\r\n          <this.PostCards />\r\n        ) : (\r\n          <this.EmptyResult />\r\n        )}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nSearchResult.propTypes = {\r\n  filteredPosts: FilteredPostsShape\r\n}\r\n\r\nexport default SearchResult\r\n","import React, { Component } from 'react'\r\nimport { FilteredPostsShape } from '../../data/propTypes'\r\nimport { Container } from 'react-bootstrap'\r\nimport { PostCardContainer } from '../../containers/PostCardContainer'\r\n\r\nclass MainBoard extends Component {\r\n  static headPostsNum = 2\r\n\r\n  HeadPosts = () => {\r\n    return (\r\n      <div className='card-deck'>\r\n        {this.props.filteredPosts.slice(0, MainBoard.headPostsNum).map(post => (\r\n          <PostCardContainer\r\n            key={post.id}\r\n            cardVersion={'vertical'}\r\n            post={post}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  PostCards = () => {\r\n    return this.props.filteredPosts\r\n      .slice(MainBoard.headPostsNum)\r\n      .map(post => (\r\n        <PostCardContainer\r\n          key={post.id}\r\n          cardVersion={'horizontal'}\r\n          post={post}\r\n        />\r\n      ))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className='pb-5'>\r\n        <h3 className='pb-3'>Latest posts</h3>\r\n        <this.HeadPosts />\r\n        <hr className='pb-2' />\r\n        <this.PostCards />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nMainBoard.propTypes = {\r\n  filteredPosts: FilteredPostsShape\r\n}\r\n\r\nexport default MainBoard\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { PostsDataShape } from '../../data/propTypes'\r\nimport { Container, Col } from 'react-bootstrap'\r\nimport DataUtils from '../../data/dataUtils'\r\n\r\nclass Post extends Component {\r\n  componentDidMount() {\r\n    DataUtils.updateCodeSyntaxHighlighting()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    DataUtils.updateCodeSyntaxHighlighting()\r\n  }\r\n\r\n  render() {\r\n    const variant = this.props.variant\r\n    const post =\r\n      variant === 'final'\r\n        ? this.props.posts.find(post => post.id === this.props.routeParamId)\r\n        : this.props.tempPost\r\n    const text = DataUtils.convertMarkdownToHtml(post.text)\r\n\r\n    return (\r\n      <Container id='post'>\r\n        {variant === 'preview' && (\r\n          <div>\r\n            <h4>Live preview</h4>\r\n            <Col sm={3} className='pl-0'>\r\n              <hr />\r\n            </Col>\r\n          </div>\r\n        )}\r\n        <h1>{post.title}</h1>\r\n        <p>{post.shortDescription}</p>\r\n        <div className='content' dangerouslySetInnerHTML={{ __html: text }} />\r\n        <Col sm={3} className='pl-0 float-right pb-5'>\r\n          <hr className='mb-1' />\r\n          <p className='pt-2 mb-1 text-right'>\r\n            {post.author +\r\n              ', ' +\r\n              post.date.toLocaleString('pl-PL', {\r\n                day: 'numeric',\r\n                month: 'numeric',\r\n                year: 'numeric'\r\n              })}\r\n          </p>\r\n          <p className='text-right'>\r\n            {post.tags.map(tag => (\r\n              <span key={tag}>{tag + ' '}</span>\r\n            ))}\r\n          </p>\r\n        </Col>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nPost.propTypes = {\r\n  posts: PostsDataShape,\r\n  variant: PropTypes.string,\r\n  routeParamId: PropTypes.string\r\n}\r\n\r\nexport default Post\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Form as BsForm, Button } from 'react-bootstrap'\r\nimport { PUBLIC_URL } from '../../../index'\r\nimport DataUtils from '../../../data/dataUtils'\r\nimport Post from '../Post'\r\nimport { Post as PostObject } from '../../../data/index'\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      formData: {\r\n        title: '',\r\n        shortDescription: '',\r\n        text: '',\r\n        mainImage: '',\r\n        tags: ''\r\n      },\r\n      formValidation: {\r\n        title: false,\r\n        shortDescription: false,\r\n        text: false,\r\n        mainImage: false,\r\n        tags: false\r\n      },\r\n      isFormValid: false,\r\n      isFormValidated: false\r\n    }\r\n    this.regex = {\r\n      imageURL: `^(?:http(s)?:\\\\/\\\\/)?[\\\\w.-]+(?:\\\\.[\\\\w\\\\.-]+)+[\\\\w\\\\-\\\\._~:\\\\/?#[\\\\]@!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=.]+(?:png|jpg|jpeg|gif|svg)+$`,\r\n      tags: `^[a-zA-Z0-9_ ]*$`\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const sourcePost = this.props.sourcePost\r\n    // handle paste or clear example\r\n    if (sourcePost !== prevProps.sourcePost) {\r\n      const wasCleared = sourcePost.title !== ''\r\n      this.setState({\r\n        ...this.state,\r\n        formData: {\r\n          title: sourcePost.title,\r\n          shortDescription: sourcePost.shortDescription,\r\n          text: sourcePost.text,\r\n          mainImage: sourcePost.mainImage,\r\n          tags: DataUtils.convertTagsArrayToSentence(sourcePost.tags)\r\n        },\r\n        formValidation: {\r\n          title: wasCleared,\r\n          shortDescription: wasCleared,\r\n          text: wasCleared,\r\n          mainImage: wasCleared,\r\n          tags: wasCleared\r\n        },\r\n        isFormValidated: wasCleared,\r\n        isFormValid: wasCleared\r\n      })\r\n    }\r\n  }\r\n\r\n  handleFinishEdit = () => {\r\n    this.props.onFinishEditPost(\r\n      new PostObject(\r\n        this.props.sourcePost.id,\r\n        this.state.formData.title,\r\n        this.state.formData.shortDescription,\r\n        this.state.formData.text,\r\n        this.props.authDisplayName,\r\n        new Date(),\r\n        DataUtils.convertSentenceToTagsArray(this.state.formData.tags),\r\n        this.state.formData.mainImage\r\n      )\r\n    )\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    const targetName = event.target.name\r\n    const targetValue = event.target.value\r\n    const isFieldValid = event.target.checkValidity() === true\r\n    let formValidation = { ...this.state.formValidation }\r\n    formValidation[targetName] = isFieldValid\r\n\r\n    this.setState(() => ({\r\n      ...this.state,\r\n      formData: {\r\n        ...this.state.formData,\r\n        [targetName]: targetValue\r\n      },\r\n      formValidation,\r\n      isFormValid: Object.values(formValidation).every(v => v === true),\r\n      isFieldValidated: true\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div className='pb-4'>\r\n          <h5 className='pb-2'>Let's write</h5>\r\n          <BsForm validated={this.state.isFieldValidated}>\r\n            <BsForm.Group>\r\n              <BsForm.Control\r\n                name='title'\r\n                value={this.state.formData.title}\r\n                type='text'\r\n                placeholder='Post title'\r\n                required\r\n                maxLength='100'\r\n                onChange={this.handleInputChange}\r\n              />\r\n              <BsForm.Control.Feedback type='invalid'>\r\n                This field is required. Max length is 100.\r\n              </BsForm.Control.Feedback>\r\n            </BsForm.Group>\r\n            <BsForm.Group>\r\n              <BsForm.Control\r\n                name='shortDescription'\r\n                as='textarea'\r\n                value={this.state.formData.shortDescription}\r\n                placeholder='Short description'\r\n                required\r\n                rows='3'\r\n                onChange={this.handleInputChange}\r\n              />\r\n              <BsForm.Control.Feedback type='invalid'>\r\n                This field is required.\r\n              </BsForm.Control.Feedback>\r\n            </BsForm.Group>\r\n            <BsForm.Group>\r\n              <BsForm.Control\r\n                name='text'\r\n                as='textarea'\r\n                value={this.state.formData.text}\r\n                placeholder='Post body'\r\n                rows='10'\r\n                required\r\n                onChange={this.handleInputChange}\r\n              />\r\n              <BsForm.Control.Feedback type='invalid'>\r\n                This field is required.\r\n              </BsForm.Control.Feedback>\r\n            </BsForm.Group>\r\n            <BsForm.Group>\r\n              <BsForm.Control\r\n                name='mainImage'\r\n                value={this.state.formData.mainImage}\r\n                type='text'\r\n                placeholder='Main image source. Ex. https://example.com/image.svg'\r\n                pattern={this.regex.imageURL}\r\n                required\r\n                onChange={this.handleInputChange}\r\n              />\r\n              <BsForm.Control.Feedback type='invalid'>\r\n                This field is required. Ex. https://example.com/image.svg\r\n              </BsForm.Control.Feedback>\r\n            </BsForm.Group>\r\n            <BsForm.Group>\r\n              <BsForm.Control\r\n                name='tags'\r\n                value={this.state.formData.tags}\r\n                type='text'\r\n                placeholder='Tags. Ex. rust java scss'\r\n                pattern={this.regex.tags}\r\n                required\r\n                onChange={this.handleInputChange}\r\n              />\r\n              <BsForm.Control.Feedback type='invalid'>\r\n                This field is required. Tags must be separated with space. Ex.\r\n                rust java scss\r\n              </BsForm.Control.Feedback>\r\n            </BsForm.Group>\r\n            <BsForm.Group className='d-flex justify-content-end'>\r\n              <Link to={PUBLIC_URL}>\r\n                <Button\r\n                  variant='outline-primary'\r\n                  disabled={!this.state.isFormValid}\r\n                  onClick={this.handleFinishEdit}\r\n                >\r\n                  {this.props.variant === 'add' ? 'Add' : 'Edit'}\r\n                </Button>\r\n              </Link>\r\n            </BsForm.Group>\r\n          </BsForm>\r\n        </div>\r\n        <Post\r\n          variant={'preview'}\r\n          tempPost={\r\n            new PostObject(\r\n              null,\r\n              this.state.formData.title,\r\n              this.state.formData.shortDescription,\r\n              this.state.formData.text,\r\n              this.props.authDisplayName,\r\n              new Date(),\r\n              DataUtils.convertSentenceToTagsArray(this.state.formData.tags),\r\n              null\r\n            )\r\n          }\r\n        />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  onFinishEditPost: PropTypes.func,\r\n  authDisplayName: PropTypes.string,\r\n  variant: PropTypes.string\r\n}\r\n\r\nexport default Form\r\n","import React, { Component } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nclass FormattingHelp extends Component {\r\n  render() {\r\n    return (\r\n      <div className='pb-4'>\r\n        <h5 className='pb-2 '>Formatting options (only in Post body)</h5>\r\n        <Table bordered>\r\n          <thead>\r\n            <tr>\r\n              <th>Usage</th>\r\n              <th>Example</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>### header h3</td>\r\n              <td>\r\n                <h3>header h3</h3>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>#### header h4</td>\r\n              <td>\r\n                <h4>header h4</h4>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>*italics*</td>\r\n              <td>\r\n                <em>italics</em>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>**bold**</td>\r\n              <td>\r\n                <strong>bold</strong>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>`code`</td>\r\n              <td>\r\n                <code>code</code>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>```</p>\r\n                <p>randomArrayItem = array...</p>\r\n                <p>array[Math.floor...</p>\r\n                <p>```</p>\r\n              </td>\r\n              <td>\r\n                <pre>\r\n                  <code>\r\n                    <p>randomArrayItem = array =></p>\r\n                    <p>\r\n                      &nbsp;&nbsp;array[Math.floor(Math.random() *\r\n                      array.length)];\r\n                    </p>\r\n                  </code>\r\n                </pre>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>![alt text](url = 30x30)</td>\r\n              <td>\r\n                <img\r\n                  alt='Alt Text'\r\n                  src='https://avatars.dicebear.com/v2/identicon/test.svg'\r\n                  width='30'\r\n                  height='30'\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>{'<http://www.example.com>'}</td>\r\n              <td>\r\n                <a href='http://www.example.com'>http://www.example.com</a>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FormattingHelp\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container, Button, Col, Row } from 'react-bootstrap'\r\nimport FormattingHelp from './FormattingHelp'\r\nimport DataUtils from '../../../data/dataUtils'\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\r\n\r\nclass Helper extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      showFormattingHelp: false,\r\n      shouldClearPastedExample: false\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    DataUtils.updateCodeSyntaxHighlighting()\r\n  }\r\n\r\n  handleShowFormattingHelp = () => {\r\n    const current = this.state.showFormattingHelp\r\n    this.setState({\r\n      ...this.state,\r\n      showFormattingHelp: !current\r\n    })\r\n  }\r\n\r\n  handlePasteExample = () => {\r\n    const shouldClearPastedExample = !this.state.shouldClearPastedExample\r\n    const generatedExample = DataUtils.generateExampleMarkdownPost()\r\n    const title = shouldClearPastedExample ? generatedExample.title : ''\r\n    const shortDescription = shouldClearPastedExample\r\n      ? generatedExample.shortDescription\r\n      : ''\r\n    const text = shouldClearPastedExample ? generatedExample.text : ''\r\n    const mainImage = shouldClearPastedExample\r\n      ? generatedExample.randomImageSrc\r\n      : ''\r\n    const tags = shouldClearPastedExample ? generatedExample.tags : []\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      shouldClearPastedExample\r\n    })\r\n    this.props.onPasteExample({\r\n      title,\r\n      shortDescription,\r\n      text,\r\n      mainImage,\r\n      tags\r\n    })\r\n  }\r\n\r\n  Helper = () => {\r\n    return (\r\n      <div className='pb-4'>\r\n        <h5 className='pb-1'>Need a little help?</h5>\r\n        <Col className='pb-4'>\r\n          <Row className='pb-2 d-flex align-items-center'>\r\n            <Col sm={4} className='pl-0'>\r\n              <span>Formatting options:</span>\r\n            </Col>\r\n            <Col sm={2} className='d-flex justify-content-end'>\r\n              <Button\r\n                className='ml-2'\r\n                variant='outline-primary'\r\n                onClick={this.handleShowFormattingHelp}\r\n              >\r\n                {this.state.showFormattingHelp ? 'Hide' : 'Show'}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          {this.props.variant === 'add' ? (\r\n            <Row className='d-flex align-items-center'>\r\n              <Col sm={4} className='pl-0'>\r\n                <span>Example post:</span>\r\n              </Col>\r\n              <Col sm={2} className='d-flex justify-content-end'>\r\n                <Button\r\n                  className='ml-2'\r\n                  variant='outline-primary'\r\n                  onClick={this.handlePasteExample}\r\n                >\r\n                  {this.state.shouldClearPastedExample ? 'Clear' : 'Paste'}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </Col>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <this.Helper />\r\n        {this.state.showFormattingHelp && (\r\n          <ReactCSSTransitionGroup\r\n            transitionName='search-result'\r\n            transitionAppear={true}\r\n            transitionAppearTimeout={750}\r\n            transitionEnter={false}\r\n            transitionLeave={false}\r\n          >\r\n            <FormattingHelp />\r\n          </ReactCSSTransitionGroup>\r\n        )}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nHelper.propTypes = {\r\n  onPasteExample: PropTypes.func,\r\n  variant: PropTypes.string\r\n}\r\n\r\nexport default Helper\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { PostsShape, FiltersShape } from '../../../data/propTypes'\r\nimport { Container } from 'react-bootstrap'\r\nimport Form from './Form'\r\nimport Helper from './Helper'\r\nimport uuidv1 from 'uuid/v1'\r\n\r\nclass PostEditor extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      sourcePost: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const editedPostId = this.props.posts.editedPostId\r\n    const sourcePost = this.props.posts.data.find(\r\n      post => post._id === editedPostId\r\n    )\r\n    if (this.props.variant === 'edit' && sourcePost !== undefined) {\r\n      this.setState({\r\n        sourcePost\r\n      })\r\n    }\r\n  }\r\n\r\n  handleAddPost = editedPost => {\r\n    this.props.addPost(editedPost)\r\n  }\r\n\r\n  handlePasteExample = examplePost => {\r\n    examplePost.id = uuidv1()\r\n    this.setState({ sourcePost: examplePost })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h4>\r\n          {this.props.variant === 'add' ? 'Write new post!' : 'Edit your post.'}\r\n        </h4>\r\n        <hr className='pb-3' />\r\n        <Helper\r\n          variant={this.props.variant}\r\n          onPasteExample={this.handlePasteExample}\r\n        />\r\n        <Form\r\n          authDisplayName={this.props.authDisplayName}\r\n          sourcePost={this.state.sourcePost}\r\n          variant={this.props.variant}\r\n          onFinishEditPost={this.handleAddPost}\r\n        />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nPostEditor.propTypes = {\r\n  posts: PostsShape,\r\n  filters: FiltersShape,\r\n  authDisplayName: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  addPost: PropTypes.func\r\n}\r\n\r\nexport default PostEditor\r\n","import { connect } from 'react-redux'\r\nimport PostEditor from '../components/MainPanel/PostEditor/PostEditor'\r\nimport { addPost } from '../actions/posts'\r\nimport { filterPosts, unwrapTags, unwrapDates } from '../actions/filters'\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts,\r\n  filters: state.filters,\r\n  authDisplayName: state.auth.displayName\r\n})\r\n\r\nconst mapDispatchToProps = { addPost, filterPosts, unwrapTags, unwrapDates }\r\n\r\nexport const PostEditorContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PostEditor)\r\n","import React, { Component } from 'react'\r\nimport { Container, Form, Button, Col, Row } from 'react-bootstrap'\r\n\r\nclass Settings extends Component {\r\n  handleRemoveAllPosts = () => {\r\n    console.log('handleRemoveAllPosts')\r\n  }\r\n\r\n  handleUserDataChange = () => {\r\n    console.log('handleUserDataChange')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h4>Settings</h4>\r\n        <hr className='pb-3' />\r\n        <h5 className='pb-1'>For debugging purposes</h5>\r\n        <Col className='pb-5'>\r\n          <Row className='pb-2 d-flex align-items-center'>\r\n            <Col sm={4} className='pl-0'>\r\n              <span>Remove all posts:</span>\r\n            </Col>\r\n            <Col sm={2} className='d-flex justify-content-end'>\r\n              <Button\r\n                className='ml-2'\r\n                variant='outline-primary'\r\n                onClick={this.handleRemoveAllPosts}\r\n              >\r\n                Remove\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row className='d-flex align-items-center'>\r\n            <Col sm={4} className='pl-0'>\r\n              <span>Generate new random posts:</span>\r\n            </Col>\r\n            <Col sm={2} className='d-flex justify-content-end'>\r\n              <Button\r\n                className='ml-2'\r\n                variant='outline-primary'\r\n                onClick={this.handleRemoveAllPosts}\r\n              >\r\n                Generate\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <h5 className='pb-2'>User data</h5>\r\n        <Form>\r\n          <Col sm={6} className='pl-0'>\r\n            <Form.Group>\r\n              <Form.Control\r\n                name='displayName'\r\n                // value={this.state.formInput.title}\r\n                type='text'\r\n                placeholder='Name'\r\n                required\r\n                maxLength='30'\r\n                // onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                name='email'\r\n                type='email'\r\n                // value={this.state.formInput.shortDescription}\r\n                placeholder='Email'\r\n                required\r\n                // onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className='d-flex justify-content-end'>\r\n              <Button\r\n                variant='outline-primary'\r\n                onClick={this.handleUserDataChange}\r\n              >\r\n                Change\r\n              </Button>\r\n            </Form.Group>\r\n          </Col>\r\n        </Form>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Settings\r\n","import { connect } from 'react-redux'\r\nimport Settings from '../components/MainPanel/Settings'\r\n\r\nconst mapStateToProps = state => ({\r\n  state: state\r\n})\r\n\r\nexport const SettingsContainer = connect(mapStateToProps)(Settings)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { PostsShape, FilteredPostsShape } from '../data/propTypes'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport { NavbarContainer } from '../containers/NavbarContainer'\r\nimport { SidePanelContainer } from '../containers/SidePanelContainer'\r\nimport SearchResult from '../components/MainPanel/SearchResult'\r\nimport MainBoard from '../components/MainPanel/MainBoard'\r\nimport Post from '../components/MainPanel/Post'\r\nimport { PostEditorContainer } from '../containers/PostEditorContainer'\r\nimport { SettingsContainer } from '../containers/SettingsContainer'\r\nimport { PUBLIC_URL } from '../index'\r\nimport DataUtils from '../data/dataUtils'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.waitMessages = [\r\n      'Feeding artificial intelligence',\r\n      'Decorating unattractive UI',\r\n      'Refactoring dirty code',\r\n      'Writing fake news',\r\n      'Patching security vulnerabilities'\r\n    ]\r\n    this.state = {\r\n      error: null,\r\n      waitMessage: DataUtils.randomArrayItem(this.waitMessages)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchPosts()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const posts = this.props.posts\r\n    if (posts !== prevProps.posts) {\r\n      this.setState({\r\n        error: this.props.posts.fetchingError\r\n      })\r\n    }\r\n  }\r\n\r\n  ErrorContainer = () => {\r\n    return (\r\n      <div className='text-center pt-5'>\r\n        <div className='pb-2'>\r\n          <h2>Error. Please reload the page.</h2>\r\n          <h5>Error message: \"{this.state.error.message}\"</h5>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  WaitContainer = () => {\r\n    const currentIndex = this.waitMessages.findIndex(\r\n      m => m === this.state.waitMessage\r\n    )\r\n    setTimeout(() => {\r\n      this.setState({\r\n        waitMessage: DataUtils.nextArrayItem(this.waitMessages, currentIndex)\r\n      })\r\n    }, 1000)\r\n\r\n    return (\r\n      <div className='wait-container'>\r\n        <div className='container text-center h-100 d-flex flex-column justify-content-center'>\r\n          <Row className='wait-text'>\r\n            <Col>\r\n              <h2 className='mb-5'>{this.state.waitMessage + `.`}</h2>\r\n            </Col>\r\n          </Row>\r\n          <div className='box-loading' />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  MainContainer = () => {\r\n    const isSignedIn = this.props.isSignedIn\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <NavbarContainer />\r\n          <Container>\r\n            <Row className='pt-5'>\r\n              <Col md={3} className='side-panel d-none d-lg-block'>\r\n                <SidePanelContainer />\r\n              </Col>\r\n              <Col sm={12} lg={9}>\r\n                <Switch>\r\n                  <Route\r\n                    exact\r\n                    path={PUBLIC_URL + '/'}\r\n                    component={() => (\r\n                      <MainBoard filteredPosts={this.props.filteredPosts} />\r\n                    )}\r\n                  />\r\n                  <Route\r\n                    path={PUBLIC_URL + '/search'}\r\n                    component={() => (\r\n                      <SearchResult filteredPosts={this.props.filteredPosts} />\r\n                    )}\r\n                  />\r\n                  <Route\r\n                    path={PUBLIC_URL + '/post/id-:id'}\r\n                    component={route => (\r\n                      <Post\r\n                        posts={this.props.posts.data}\r\n                        variant={'final'}\r\n                        routeParamId={route.match.params.id}\r\n                      />\r\n                    )}\r\n                  />\r\n                  {isSignedIn && (\r\n                    <Route\r\n                      path={PUBLIC_URL + '/addpost'}\r\n                      component={() => <PostEditorContainer variant={'add'} />}\r\n                    />\r\n                  )}\r\n                  {isSignedIn && (\r\n                    <Route\r\n                      path={PUBLIC_URL + '/editpost'}\r\n                      component={() => <PostEditorContainer variant={'edit'} />}\r\n                    />\r\n                  )}\r\n                  {isSignedIn && (\r\n                    <Route\r\n                      path={PUBLIC_URL + '/settings'}\r\n                      component={SettingsContainer}\r\n                    />\r\n                  )}\r\n                </Switch>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if (this.props.posts.data.length !== 0 && this.state.error === null) {\r\n      return <this.MainContainer />\r\n    } else if (this.state.error !== null) {\r\n      return <this.ErrorContainer />\r\n    } else {\r\n      return <this.WaitContainer />\r\n    }\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  posts: PostsShape,\r\n  filteredPosts: FilteredPostsShape,\r\n  isSignedIn: PropTypes.bool,\r\n  fetchPosts: PropTypes.func\r\n}\r\n\r\nexport default App\r\n","import { connect } from 'react-redux'\r\nimport { fetchPosts } from '../actions/posts'\r\nimport App from '../components/App'\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts,\r\n  filteredPosts: state.filteredPosts,\r\n  isSignedIn: state.auth.isSignedIn\r\n})\r\n\r\nconst mapDispatchToProps = { fetchPosts }\r\n\r\nexport const AppContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\nimport { AppContainer } from './containers/AppContainer'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport './styles/_index.scss'\r\n\r\nexport const PUBLIC_URL = process.env.PUBLIC_URL\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <AppContainer />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}
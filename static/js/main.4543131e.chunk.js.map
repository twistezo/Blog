{"version":3,"sources":["data/firebase.js","data/index.js","data/generator.js","data/dataUtils.js","reducers/reducersUtils.js","reducers/index.js","actions/index.js","components/Navbar/SearchForm.js","containers/SearchFormContainer.js","components/Navbar/SignInForm.js","containers/SignInFormContainer.js","components/Navbar/Navbar.js","containers/NavbarContainer.js","components/SidePanel/AboutMe.js","components/SidePanel/Tags.js","containers/TagsContainer.js","components/SidePanel/Archives.js","containers/ArchivesContainer.js","components/SidePanel/SidePanel.js","components/MainPanel/PostCards/PostCardHorizontal.js","components/MainPanel/PostCards/PostCardVertical.js","components/MainPanel/PostCards/PostCard.js","containers/PostCardContainer.js","components/MainPanel/SearchResult.js","containers/SearchResultContainer.js","components/MainPanel/MainBoard.js","containers/MainBoardContainer.js","components/MainPanel/Post.js","containers/PostContainer.js","components/MainPanel/AddPost/Preview.js","components/MainPanel/AddPost/PostEditor.js","components/MainPanel/AddPost/FormattingHelp.js","components/MainPanel/AddPost/Helper.js","components/MainPanel/AddPost/AddPost.js","containers/AddPostContainer.js","components/MainPanel/Settings.js","containers/SettingsContainer.js","components/App.js","containers/AppContainer.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseFirestore","firestore","Post","id","title","shortDescription","text","author","date","tags","mainImage","Object","classCallCheck","this","_id","_title","_shortDescription","_text","_author","_date","_tags","_mainImage","DataGenerator","_this","_generate","quantity","chance","Chance","examplePost","DataUtils","generateExampleMarkdownPost","i","_data","push","uuidv1","string","american","year","randomArrayItem","arrayFromArrayRandomItems","word","length","isNullEmptyOrUndefinded","Error","fetch","Promise","resolve","reject","result","array","Math","floor","random","value","undefined","Array","from","filter","randomBoolean","arrayContainsAllElementsFromAnother","array0","array1","map","a","some","b","every","e","nextArrayItem","currentIndex","getEmailPrefix","email","slice","indexOf","randomSentence","words","sentence","randomParagraph","sentences","paragraph","randomImageSrc","concat","convertMarkdownToHtml","markdownString","showdown","Converter","noHeaderId","makeHtml","updateCodeSyntaxHighlighting","document","querySelectorAll","forEach","block","hljs","highlightBlock","jsPostObjToFirestoreObj","post","Timestamp","fromDate","firestorePostObjToJsOjb","firestoreObj","toDate","addPostsToFirestore","num","then","posts","collection","doc","set","catch","error","console","err","log","ReducersUtils","sortPostsByDateDesc","sort","Date","unwrapTagsFromPosts","allTags","flat","uniqueTags","Set","uniqueWithQuantity","uniqueTag","name","tag","state","switchTagState","tagName","find","filterPostsBy","filters","dates","searchValue","filtered","switchedOnTags","toLowerCase","includes","switchedOnYears","yearState","getFullYear","switchedOnMonths","months","month","item","monthNameFromDate","unwrapDatesFromPosts","years","yearsWithMonths","postsQuantityByDate","toLocaleString","switchDateState","dateToSwitch","archiveDates","resetFilters","reseted","assign","filtersShape","authShape","displayName","isSignedIn","errorMessage","combineReducers","arguments","action","type","objectSpread","data","toConsumableArray","fetchingError","editedPostId","postId","filteredPosts","auth","fetchPosts","dispatch","getState","get","querySnapshot","docs","postsFetchedSuccess","unwrapTags","unwrapDates","filterPosts","signedIn","fetchedUserData","SearchForm","handleSearchFormInputChange","event","target","props","handleSearchInput","react_default","createElement","Form","inline","Link","to","PUBLIC_URL","FormControl","placeholder","onChange","className","Component","mapDispatchToProps","SearchFormContainer","connect","SignInForm","possibleConstructorReturn","getPrototypeOf","call","handleSignIn","signIn","formData","password","onSignInFormHide","handleHideSignInModal","handleFormInputChange","targetName","targetValue","setState","defineProperty","Modal","show","signInModalShow","onHide","size","aria-labelledby","centered","Header","closeButton","Title","Body","Group","Control","required","Row","Col","Button","onClick","signInWithEmailAndPassword","user","currentUser","userEmail","fetchSignedInUserData","message","SignInFormContainer","Navbar","handleLogoClick","handleSignInClick","signOut","es_Navbar","bg","variant","Container","Brand","NavbarContainer","AboutMe","src","alt","height","href","rel","Tags","onTagClick","preventDefault","key","Badge","TagsContainer","Archives","onDateClick","Dates","ArchivesContainer","Archive","SidePanel","SidePanel_AboutMe","PostsCardHorizontal","postURL","Card","substring","day","ButtonGroup","onEditPost","onRemovePost","PostCardVertical","PostsCard","handleEditPost","handleRemovePost","removePost","HorizontalCard","PostCardHorizontal","VerticalCard","PostCards_PostCardVertical","cardVersion","delete","removePostByIdFromFirestore","PostCardContainer","PostCard","SearchResult","PostCards","EmptyResult","SearchResultContainer","MainBoard","HeadPosts","headPostsNum","MainBoardContainer","PostContainer","routeParamId","dangerouslySetInnerHTML","__html","Preview","sm","PostEditor","handleFinishEdit","onFinishEditPost","sourcePost","formInput","authDisplayName","handleInputChange","prevProps","maxLength","as","rows","AddPost_Preview","FormattingHelp","Table","bordered","width","Helper","handleShowFormattingHelp","current","showFormattingHelp","handlePasteExample","shouldClearPastedExample","generatedExample","onPasteExample","AddPost_FormattingHelp","AddPost","handleAddPost","editedPost","addPost","AddPost_Helper","AddPost_PostEditor","addPostToFirestore","AddPostContainer","Settings","handleRemoveAllPosts","handleUserDataChange","SettingsContainer","App","ErrorContainer","WaitContainer","waitMessages","findIndex","m","waitMessage","setTimeout","MainContainer","BrowserRouter","components_SidePanel_SidePanel","Switch","Route","exact","path","component","route","match","params","AppContainer","Boolean","window","location","hostname","__webpack_require__","d","__webpack_exports__","process","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4543131e.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport DataUtils from './dataUtils'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBU_CK4oTRzwPIOjZWQn8tpF5kOcnESnps',\r\n  authDomain: 'twistezo-blog.firebaseapp.com',\r\n  databaseURL: 'https://twistezo-blog.firebaseio.com',\r\n  projectId: 'twistezo-blog',\r\n  storageBucket: 'twistezo-blog.appspot.com',\r\n  messagingSenderId: '1065707028990'\r\n}\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport default firebase\r\nexport const firebaseFirestore = firebase.firestore()\r\n\r\nexport const fetchPostsFromFirestore = () =>\r\n  firebaseFirestore\r\n    .collection('posts')\r\n    .get()\r\n    .then(querySnapshot =>\r\n      querySnapshot.docs.map(doc =>\r\n        DataUtils.firestorePostObjToJsOjb(doc.data())\r\n      )\r\n    )\r\n    .catch(\r\n      error => new Error('Errow while fetching posts. Error message: ', error)\r\n    )\r\n\r\nexport const addPostToFirestore = post =>\r\n  firebaseFirestore\r\n    .collection('posts')\r\n    .doc(post.id)\r\n    .set(DataUtils.jsPostObjToFirestoreObj(post))\r\n    .catch(\r\n      error => new Error('Errow while adding post. Error message: ', error)\r\n    )\r\n\r\nexport const removePostByIdFromFirestore = postId =>\r\n  firebaseFirestore\r\n    .collection('posts')\r\n    .doc(postId)\r\n    .delete()\r\n    .catch(\r\n      error => new Error('Errow while removing post. Error message: ', error)\r\n    )\r\n\r\nexport const signInWithEmailAndPassword = (email, password) =>\r\n  firebase.auth().signInWithEmailAndPassword(email, password)\r\n\r\nexport const fetchSignedInUserData = () => {\r\n  const user = firebase.auth().currentUser\r\n  const userEmail = user.email\r\n  const displayName = user.displayName\r\n  const newDisplayName =\r\n    displayName === null ? DataUtils.getEmailPrefix(userEmail) : displayName\r\n  return {\r\n    name: newDisplayName,\r\n    email: userEmail\r\n  }\r\n}\r\n\r\nexport const signOutUser = () => firebase.auth().signOut()\r\n","class Post {\r\n  constructor(\r\n    id,\r\n    title,\r\n    shortDescription,\r\n    text,\r\n    author,\r\n    date,\r\n    tags,\r\n    mainImage\r\n  ) {\r\n    this._id = id\r\n    this._title = title\r\n    this._shortDescription = shortDescription\r\n    this._text = text\r\n    this._author = author\r\n    this._date = date\r\n    this._tags = tags\r\n    this._mainImage = mainImage\r\n  }\r\n\r\n  get id() {\r\n    return this._id\r\n  }\r\n\r\n  get title() {\r\n    return this._title\r\n  }\r\n\r\n  get shortDescription() {\r\n    return this._shortDescription\r\n  }\r\n\r\n  get text() {\r\n    return this._text\r\n  }\r\n\r\n  get author() {\r\n    return this._author\r\n  }\r\n\r\n  get date() {\r\n    return this._date\r\n  }\r\n\r\n  set date(date) {\r\n    this._date = date\r\n  }\r\n\r\n  get tags() {\r\n    return this._tags\r\n  }\r\n\r\n  get mainImage() {\r\n    return this._mainImage\r\n  }\r\n}\r\n\r\nexport { Post }\r\n","import Chance from 'chance'\r\nimport uuidv1 from 'uuid/v1'\r\nimport DataUtils from './dataUtils'\r\nimport { Post } from './'\r\n\r\nclass DataGenerator {\r\n  constructor() {\r\n    this._data = []\r\n    this._tags = ['#javascript', '#css', '#rust', '#webpack', '#cargo']\r\n  }\r\n\r\n  _generate = quantity => {\r\n    const chance = new Chance()\r\n    const examplePost = DataUtils.generateExampleMarkdownPost()\r\n    for (let i = 0; i < quantity; i++) {\r\n      this._data.push(\r\n        new Post(\r\n          uuidv1(),\r\n          examplePost.title,\r\n          examplePost.shortDescription,\r\n          examplePost.text,\r\n          'twistezo',\r\n          chance.date({\r\n            string: false,\r\n            american: false,\r\n            year: DataUtils.randomArrayItem([2016, 2017, 2018])\r\n          }),\r\n          DataUtils.arrayFromArrayRandomItems(this._tags),\r\n          'https://avatars.dicebear.com/v2/identicon/' +\r\n            chance.word({ length: 15 }) +\r\n            '.svg'\r\n        )\r\n      )\r\n    }\r\n\r\n    return DataUtils.isNullEmptyOrUndefinded(this._data)\r\n      ? new Error('Generate data failed.')\r\n      : this._data\r\n  }\r\n\r\n  fetch = quantity =>\r\n    new Promise((resolve, reject) => {\r\n      const result = this._generate(quantity)\r\n      if (result instanceof Error) {\r\n        reject(\r\n          new Error('Error while fetching data. The data seems to be broken.')\r\n        )\r\n      } else {\r\n        resolve(result)\r\n      }\r\n    })\r\n}\r\n\r\nexport default DataGenerator\r\n","import Chance from 'chance'\r\nimport showdown from 'showdown'\r\nimport firebase from './firebase'\r\nimport { firebaseFirestore } from '../data/firebase'\r\nimport hljs from 'highlight.js'\r\nimport '../styles/_dracula.scss'\r\nimport { Post } from '../data/index'\r\nimport DataGenerator from './generator'\r\n\r\nclass DataUtils {\r\n  static randomArrayItem = array =>\r\n    array[Math.floor(Math.random() * array.length)]\r\n\r\n  static isNullEmptyOrUndefinded = value =>\r\n    value === null || value === [] || value === undefined || value.length === 0\r\n\r\n  static arrayFromArrayRandomItems = array => {\r\n    const result = Array.from(array).filter(() => DataUtils.randomBoolean())\r\n    return result.length === 0 ? [array[0]] : result\r\n  }\r\n\r\n  static randomBoolean = () => Math.random() >= 0.5\r\n\r\n  static arrayContainsAllElementsFromAnother = (array0, array1) =>\r\n    array1\r\n      .map(a => {\r\n        return array0.some(b => {\r\n          return b === a\r\n        })\r\n      })\r\n      .every(e => e)\r\n\r\n  static nextArrayItem = (array, currentIndex) =>\r\n    array[(currentIndex + 1) % array.length]\r\n\r\n  static getEmailPrefix = email => email.slice(0, email.indexOf('@'))\r\n\r\n  static generateExampleMarkdownPost = () => {\r\n    const chance = new Chance()\r\n    const randomSentence = words => chance.sentence({ words })\r\n    const randomParagraph = sentences =>\r\n      chance.paragraph({\r\n        sentences\r\n      })\r\n\r\n    const word = length => chance.word({ length })\r\n    const randomImageSrc = `https://avatars.dicebear.com/v2/identicon/${word(\r\n      15\r\n    )}.svg`\r\n    const title = randomSentence(6)\r\n    const shortDescription = randomParagraph(3)\r\n    const text = `### ${randomSentence(6)}\r\n    \\n ${randomParagraph(10)}\r\n    \\n![Alt Text](${randomImageSrc} =200x200)\r\n    \\nPhoto: *${randomSentence(6)}*\r\n    \\nVisit: <http://www.example.com>\r\n    \\n### ${randomSentence(6)}\r\n    \\n${randomParagraph(6)}\r\n    \\n${word()} ${word()}:\r\n    \\n* ${word()}\r\n    \\n* ${word()}\r\n    \\n* ${word()}\r\n    \\n### ${randomSentence(6)}\r\n    \\nSome code:\r\n    \\n\r\n    \\`\\`\\`\r\n    function resolveAfter2Seconds() {\r\n      return new Promise(resolve => {\r\n        setTimeout(() => {\r\n          resolve('resolved');\r\n        }, 2000);\r\n      });\r\n    }\r\n    \r\n    async function asyncCall() {\r\n      console.log('calling');\r\n      var result = await resolveAfter2Seconds();\r\n      console.log(result);\r\n      // expected output: 'resolved'\r\n    }\r\n    \r\n    asyncCall();\r\n    \\`\\`\\`\r\n    `\r\n    return {\r\n      title,\r\n      shortDescription,\r\n      text,\r\n      randomImageSrc\r\n    }\r\n  }\r\n\r\n  static convertMarkdownToHtml = markdownString =>\r\n    new showdown.Converter({ noHeaderId: true }).makeHtml(markdownString)\r\n\r\n  static updateCodeSyntaxHighlighting = () => {\r\n    document.querySelectorAll('pre code').forEach(block => {\r\n      hljs.highlightBlock(block)\r\n    })\r\n  }\r\n\r\n  static jsPostObjToFirestoreObj = post => ({\r\n    id: post.id,\r\n    title: post.title,\r\n    shortDescription: post.shortDescription,\r\n    text: post.text,\r\n    author: post.author,\r\n    date: firebase.firestore.Timestamp.fromDate(post.date),\r\n    tags: post.tags,\r\n    mainImage: post.mainImage\r\n  })\r\n\r\n  static firestorePostObjToJsOjb = firestoreObj =>\r\n    new Post(\r\n      firestoreObj.id,\r\n      firestoreObj.title,\r\n      firestoreObj.shortDescription,\r\n      firestoreObj.text,\r\n      firestoreObj.author,\r\n      firestoreObj.date.toDate(),\r\n      firestoreObj.tags,\r\n      firestoreObj.mainImage\r\n    )\r\n\r\n  /**\r\n   * Use only for first time writing to firestore random generated data.\r\n   * It creates in firestore  `posts` collection with documents `post` by `post.id`.\r\n   */\r\n  static addPostsToFirestore = num => {\r\n    new DataGenerator()\r\n      .fetch(num)\r\n      .then(posts => {\r\n        posts.forEach(post => {\r\n          firebaseFirestore\r\n            .collection('posts')\r\n            .doc(post.id)\r\n            .set(DataUtils.jsPostObjToFirestoreObj(post))\r\n            .catch(error =>\r\n              console.error('Skipping write document cause: ', error)\r\n            )\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport default DataUtils\r\n","import DataUtils from '../data/dataUtils'\r\n\r\nclass ReducersUtils {\r\n  static sortPostsByDateDesc = posts =>\r\n    posts.sort((a, b) => new Date(b.date) - new Date(a.date))\r\n\r\n  static unwrapTagsFromPosts = posts => {\r\n    const allTags = Array.from(posts.map(post => post.tags).flat())\r\n    const uniqueTags = Array.from(new Set(allTags))\r\n\r\n    let uniqueWithQuantity = []\r\n    uniqueTags.forEach(uniqueTag =>\r\n      uniqueWithQuantity.push({\r\n        name: uniqueTag,\r\n        quantity: allTags.filter(tag => tag === uniqueTag).length,\r\n        state: false\r\n      })\r\n    )\r\n\r\n    return uniqueWithQuantity\r\n  }\r\n\r\n  static switchTagState = (tagName, tags) => {\r\n    let tag = tags.find(tag => tag.name === tagName)\r\n    tag.state = !tag.state\r\n    return tags\r\n  }\r\n\r\n  static filterPostsBy = (posts, filters) => {\r\n    const tags = filters.tags\r\n    const dates = filters.dates\r\n    const searchValue = filters.searchValue\r\n\r\n    let filtered = []\r\n    const switchedOnTags = tags.filter(tag => tag.state).map(tag => tag.name)\r\n    filtered = posts.filter(\r\n      post =>\r\n        // by tags\r\n        DataUtils.arrayContainsAllElementsFromAnother(\r\n          post.tags,\r\n          switchedOnTags\r\n        ) &&\r\n        // by searchValue (title)\r\n        post.title.toLowerCase().includes(searchValue.toLowerCase())\r\n    )\r\n\r\n    // by date - years\r\n    let switchedOnYears = dates\r\n      .filter(date => date.yearState)\r\n      .map(date => date.year)\r\n    if (switchedOnYears.length !== 0) {\r\n      filtered = filtered.filter(post =>\r\n        DataUtils.arrayContainsAllElementsFromAnother(switchedOnYears, [\r\n          post.date.getFullYear()\r\n        ])\r\n      )\r\n    }\r\n\r\n    // by date - months\r\n    let switchedOnMonths = dates\r\n      .map(date =>\r\n        date.months\r\n          .map(month => ({\r\n            year: date.year,\r\n            month: month.name,\r\n            state: month.state\r\n          }))\r\n          .flat()\r\n      )\r\n      .flat()\r\n      .filter(month => month.state)\r\n    if (switchedOnMonths.length !== 0) {\r\n      filtered = filtered.filter(\r\n        post =>\r\n          switchedOnMonths.some(\r\n            item => item.year === post.date.getFullYear()\r\n          ) &&\r\n          switchedOnMonths.some(\r\n            item => item.month === ReducersUtils.monthNameFromDate(post.date)\r\n          )\r\n      )\r\n    }\r\n    return ReducersUtils.sortPostsByDateDesc(filtered)\r\n  }\r\n\r\n  static unwrapDatesFromPosts = posts => {\r\n    const years = Array.from(\r\n      new Set(posts.map(post => post.date.getFullYear()))\r\n    )\r\n\r\n    let yearsWithMonths = []\r\n    years.forEach(year =>\r\n      yearsWithMonths.push({\r\n        year: year,\r\n        yearState: false,\r\n        months: Array.from(\r\n          new Set(\r\n            posts\r\n              .filter(post => post.date.getFullYear() === year)\r\n              .map(post => ReducersUtils.monthNameFromDate(post.date))\r\n          )\r\n        ).map(month => ({\r\n          name: month,\r\n          quantity: ReducersUtils.postsQuantityByDate(posts, month, year),\r\n          state: false\r\n        }))\r\n      })\r\n    )\r\n    return yearsWithMonths\r\n  }\r\n\r\n  static postsQuantityByDate = (posts, month, year) =>\r\n    posts.filter(\r\n      post =>\r\n        post.date.getFullYear() === year &&\r\n        ReducersUtils.monthNameFromDate(post.date) === month\r\n    ).length\r\n\r\n  static monthNameFromDate = date =>\r\n    date.toLocaleString('en-us', { month: 'long' })\r\n\r\n  static switchDateState = (dateToSwitch, archiveDates) => {\r\n    if (dateToSwitch.month === undefined) {\r\n      let date = archiveDates.find(date => date.year === dateToSwitch.year)\r\n      date.yearState = !date.yearState\r\n      // reset all months state\r\n      archiveDates.forEach(date =>\r\n        date.months.forEach(month => (month.state = false))\r\n      )\r\n    } else {\r\n      let month = archiveDates\r\n        .find(date => date.year === dateToSwitch.year)\r\n        .months.find(month => month.name === dateToSwitch.month)\r\n      month.state = !month.state\r\n      // reset all years state\r\n      archiveDates.forEach(date => (date.yearState = false))\r\n    }\r\n    return archiveDates\r\n  }\r\n\r\n  static resetFilters = filters => {\r\n    let reseted = Object.assign({}, filters)\r\n    reseted.tags.forEach(tag => (tag.state = false))\r\n    reseted.dates.forEach(date => (date.yearState = false))\r\n    reseted.dates.forEach(date =>\r\n      date.months.forEach(month => (month.state = false))\r\n    )\r\n    reseted.searchValue = ''\r\n    return reseted\r\n  }\r\n}\r\n\r\nexport default ReducersUtils\r\n","import { combineReducers } from 'redux'\r\nimport ReducersUtils from './reducersUtils'\r\n\r\nconst posts = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'POSTS_FETCHED_SUCCESS':\r\n      return {\r\n        ...state,\r\n        data: [...ReducersUtils.sortPostsByDateDesc(action.posts)],\r\n        fetchingError: null\r\n      }\r\n    case 'POSTS_FETCHED_ERROR':\r\n      return {\r\n        ...state,\r\n        data: [],\r\n        fetchingError: action.fetchingError\r\n      }\r\n    case 'EDITED_POST_ID':\r\n      return {\r\n        ...state,\r\n        editedPostId: action.postId\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const filteredPosts = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'FILTER_POSTS':\r\n      return [...ReducersUtils.filterPostsBy(action.posts, action.filters)]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst filtersShape = {\r\n  tags: [],\r\n  dates: [],\r\n  searchValue: ''\r\n}\r\n\r\nconst filters = (state = filtersShape, action) => {\r\n  switch (action.type) {\r\n    case 'UNWRAP_TAGS':\r\n      return {\r\n        ...state,\r\n        tags: [...ReducersUtils.unwrapTagsFromPosts(action.posts)]\r\n      }\r\n    case 'SWITCH_TAG':\r\n      return {\r\n        ...state,\r\n        tags: [...ReducersUtils.switchTagState(action.tagName, state.tags)]\r\n      }\r\n    case 'UNWRAP_DATES':\r\n      return {\r\n        ...state,\r\n        dates: [...ReducersUtils.unwrapDatesFromPosts(action.posts)]\r\n      }\r\n    case 'SWITCH_DATE_STATE':\r\n      return {\r\n        ...state,\r\n        dates: [...ReducersUtils.switchDateState(action.date, state.dates)]\r\n      }\r\n    case 'HANDLE_SEARCH_INPUT':\r\n      return {\r\n        ...state,\r\n        searchValue: action.value\r\n      }\r\n    case 'RESET_FILTERS':\r\n      return ReducersUtils.resetFilters(action.filters)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst authShape = {\r\n  displayName: '',\r\n  email: '',\r\n  isSignedIn: false,\r\n  errorMessage: ''\r\n}\r\n\r\nconst auth = (state = authShape, action) => {\r\n  switch (action.type) {\r\n    case 'SIGNED_IN':\r\n      return {\r\n        ...state,\r\n        isSignedIn: action.isSignedIn,\r\n        errorMessage: action.errorMessage\r\n      }\r\n    case 'FETCHED_USER_DATA':\r\n      return {\r\n        ...state,\r\n        displayName: action.displayName,\r\n        email: action.email\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  posts,\r\n  filteredPosts,\r\n  filters,\r\n  auth\r\n})\r\n","import {\r\n  fetchPostsFromFirestore,\r\n  addPostToFirestore,\r\n  removePostByIdFromFirestore,\r\n  signInWithEmailAndPassword,\r\n  fetchSignedInUserData,\r\n  signOutUser\r\n} from '../data/firebase'\r\n\r\nconst postsFetchedSuccess = posts => ({\r\n  type: 'POSTS_FETCHED_SUCCESS',\r\n  posts\r\n})\r\n\r\nconst postsFetchedError = fetchingError => ({\r\n  type: 'POSTS_FETCHED_ERROR',\r\n  fetchingError\r\n})\r\n\r\nexport const fetchPosts = () => (dispatch, getState) => {\r\n  fetchPostsFromFirestore()\r\n    .then(posts => {\r\n      dispatch(postsFetchedSuccess(posts))\r\n      dispatch(unwrapTags(posts))\r\n      dispatch(unwrapDates(posts))\r\n      dispatch(filterPosts(posts, getState().filters))\r\n    })\r\n    .catch(error => dispatch(postsFetchedError(error)))\r\n}\r\n\r\nexport const addPost = post => dispatch => {\r\n  addPostToFirestore(post).then(() => dispatch(fetchPosts()))\r\n}\r\n\r\nexport const removePost = postId => dispatch => {\r\n  removePostByIdFromFirestore(postId)\r\n    .then(() => dispatch(fetchPosts()))\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const editedPostId = postId => ({\r\n  type: 'EDITED_POST_ID',\r\n  postId\r\n})\r\n\r\nexport const filterPosts = (posts, filters) => ({\r\n  type: 'FILTER_POSTS',\r\n  posts,\r\n  filters\r\n})\r\n\r\nexport const unwrapTags = posts => ({\r\n  type: 'UNWRAP_TAGS',\r\n  posts\r\n})\r\n\r\nexport const switchTagState = tagName => ({\r\n  type: 'SWITCH_TAG',\r\n  tagName\r\n})\r\n\r\nexport const unwrapDates = posts => ({\r\n  type: 'UNWRAP_DATES',\r\n  posts\r\n})\r\n\r\nexport const switchDateState = date => ({\r\n  type: 'SWITCH_DATE_STATE',\r\n  date\r\n})\r\n\r\nexport const handleSearchInput = value => ({\r\n  type: 'HANDLE_SEARCH_INPUT',\r\n  value\r\n})\r\n\r\nexport const resetFilters = filters => ({\r\n  type: 'RESET_FILTERS',\r\n  filters\r\n})\r\n\r\nexport const signedIn = (isSignedIn, errorMessage) => ({\r\n  type: 'SIGNED_IN',\r\n  isSignedIn,\r\n  errorMessage\r\n})\r\n\r\nexport const fetchedUserData = (displayName, email) => ({\r\n  type: 'FETCHED_USER_DATA',\r\n  displayName,\r\n  email\r\n})\r\n\r\nexport const signIn = (email, password) => dispatch =>\r\n  signInWithEmailAndPassword(email, password)\r\n    .then(() => dispatch(signedIn(true, '')))\r\n    .then(() => fetchSignedInUserData())\r\n    .then(data => dispatch(fetchedUserData(data.name, data.email)))\r\n    .catch(error => dispatch(signedIn(false, error.message)))\r\n\r\nexport const signOut = () => dispatch =>\r\n  signOutUser()\r\n    .then(() => dispatch(signedIn(false, '')))\r\n    .then(() => dispatch(fetchedUserData('', '')))\r\n","import React, { Component } from 'react'\r\nimport { Form, FormControl } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { PUBLIC_URL } from '../../index'\r\n\r\nclass SearchForm extends Component {\r\n  handleSearchFormInputChange = event => {\r\n    const value = event.target.value\r\n    this.props.handleSearchInput(value)\r\n\r\n    let filters = Object.assign({}, this.props.filters)\r\n    filters.searchValue = value\r\n    this.props.filterPosts(this.props.posts, filters)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form inline>\r\n        <Link to={PUBLIC_URL + '/search'}>\r\n          <FormControl\r\n            name='search'\r\n            type='text'\r\n            value={this.props.filters.searchValue}\r\n            placeholder='search'\r\n            onChange={this.handleSearchFormInputChange}\r\n          />\r\n        </Link>\r\n        <i className='fas fa-search' />\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchForm\r\n","import { connect } from 'react-redux'\r\nimport { filterPosts, handleSearchInput } from '../actions'\r\nimport SearchForm from '../components/Navbar/SearchForm'\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.data,\r\n  filters: state.filters\r\n})\r\n\r\nconst mapDispatchToProps = { filterPosts, handleSearchInput }\r\n\r\nexport const SearchFormContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SearchForm)\r\n","import React, { Component } from 'react'\r\nimport { Form, Col, Row, Button, Modal } from 'react-bootstrap'\r\n\r\nclass SignInForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      formData: {\r\n        email: '',\r\n        password: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSignIn = () => {\r\n    this.props.signIn(this.state.formData.email, this.state.formData.password)\r\n    this.props.onSignInFormHide()\r\n  }\r\n\r\n  handleHideSignInModal = () => {\r\n    this.props.onSignInFormHide()\r\n  }\r\n\r\n  handleFormInputChange = e => {\r\n    const targetName = e.target.name\r\n    const targetValue = e.target.value\r\n    this.setState(() => ({\r\n      formData: {\r\n        ...this.state.formData,\r\n        [targetName]: targetValue\r\n      }\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        show={this.props.signInModalShow}\r\n        onHide={this.props.onSignInFormHide}\r\n        size='sm'\r\n        aria-labelledby='contained-modal-title-vcenter'\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id='contained-modal-title-vcenter'>Sign in</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form className='pt-3'>\r\n            <Form.Group>\r\n              <Form.Control\r\n                name='email'\r\n                // value={this.state.formData.name}\r\n                type='text'\r\n                placeholder='Email'\r\n                required\r\n                onChange={this.handleFormInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                name='password'\r\n                // value={this.state.formData.review}\r\n                type='password'\r\n                placeholder='Password'\r\n                required\r\n                onChange={this.handleFormInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Row className='pt-3 text-center'>\r\n              <Col>\r\n                <Button onClick={this.handleHideSignInModal}>Back</Button>\r\n              </Col>\r\n              <Col>\r\n                <Button onClick={this.handleSignIn}>Ok</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignInForm\r\n","import { connect } from 'react-redux'\r\nimport SignInForm from '../components/Navbar/SignInForm'\r\nimport { signIn } from '../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  state: state\r\n})\r\n\r\nconst mapDispatchToProps = { signIn }\r\n\r\nexport const SignInFormContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignInForm)\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Navbar as BsNavbar, Button, Container } from 'react-bootstrap'\r\nimport { SearchFormContainer } from '../../containers/SearchFormContainer'\r\nimport { SignInFormContainer } from '../../containers/SignInFormContainer'\r\nimport { PUBLIC_URL } from '../../index'\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { signInModalShow: false }\r\n  }\r\n\r\n  handleLogoClick = () => {\r\n    this.props.resetFilters(this.props.filters)\r\n    this.props.filterPosts(this.props.posts, {\r\n      tags: [],\r\n      dates: [],\r\n      searchValue: ''\r\n    })\r\n  }\r\n\r\n  handleSignInClick = () => {\r\n    if (this.props.isSignedIn) {\r\n      this.props.signOut()\r\n    } else {\r\n      this.setState({ signInModalShow: true })\r\n    }\r\n  }\r\n\r\n  handleHideSignInModal = () => {\r\n    this.setState({ signInModalShow: false })\r\n  }\r\n\r\n  render() {\r\n    const isSignedIn = this.props.isSignedIn\r\n    return (\r\n      <BsNavbar bg='dark' variant='light' className='sticky-top text-center'>\r\n        <Container>\r\n          <div className='d-flex justify-content-between flex-fill align-items-center'>\r\n            <Link to={PUBLIC_URL + '/'} onClick={this.handleLogoClick}>\r\n              <BsNavbar.Brand className='ml-4'>\r\n                John Smith's cave\r\n              </BsNavbar.Brand>\r\n            </Link>\r\n            <div className='d-flex'>\r\n              <SearchFormContainer />\r\n              {isSignedIn && (\r\n                <div className='d-flex'>\r\n                  <div className='hello-user d-flex align-self-center ml-2'>\r\n                    {'Hello, ' + this.props.displayName + '!'}\r\n                  </div>\r\n                  <Link className='ml-4' to={PUBLIC_URL + '/settings'}>\r\n                    <Button variant='outline-info'>\r\n                      <i className='fas fa-cogs' />\r\n                    </Button>\r\n                  </Link>\r\n                  <Link className='ml-2' to={PUBLIC_URL + '/addpost'}>\r\n                    <Button variant='outline-info'>\r\n                      Add Post&nbsp; <i className='fas fa-pen-alt' />\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n              <Button\r\n                className='ml-2 mr-4'\r\n                variant='outline-info'\r\n                onClick={this.handleSignInClick}\r\n              >\r\n                {isSignedIn ? (\r\n                  <div>\r\n                    Sign out &nbsp; <i className='fas fa-sign-out-alt' />\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    Sign in &nbsp; <i className='fas fa-sign-in-alt' />\r\n                  </div>\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <SignInFormContainer\r\n            signInModalShow={this.state.signInModalShow}\r\n            onSignInFormHide={this.handleHideSignInModal}\r\n          />\r\n        </Container>\r\n      </BsNavbar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navbar\r\n","import { connect } from 'react-redux'\r\nimport Navbar from '../components/Navbar/Navbar'\r\nimport { resetFilters, filterPosts, signOut } from '../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.data,\r\n  filters: state.filters,\r\n  displayName: state.auth.displayName,\r\n  isSignedIn: state.auth.isSignedIn\r\n})\r\n\r\nconst mapDispatchToProps = { resetFilters, signOut, filterPosts }\r\n\r\nexport const NavbarContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Navbar)\r\n","import React, { Component } from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\n\r\nclass AboutMe extends Component {\r\n  render() {\r\n    return (\r\n      <Container id='about-me'>\r\n        <h3 className='pb-2'>About Me</h3>\r\n        <Row className='pb-3'>\r\n          <img\r\n            src='https://picsum.photos/200/?random'\r\n            alt=''\r\n            className='rounded float-left'\r\n            height='100'\r\n          />\r\n        </Row>\r\n        <Row className='pb-2'>\r\n          <h5>John Smith</h5>\r\n          <span>Full-stack developer</span>\r\n        </Row>\r\n        <Row className=''>\r\n          <a\r\n            href='https://twitter.com/'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n          >\r\n            <i className='fab fa-twitter' />\r\n          </a>\r\n          <a\r\n            href='https://facebook.com'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n          >\r\n            <i className='fab fa-facebook' />\r\n          </a>\r\n          <a\r\n            href='https://linkedin.com'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n          >\r\n            <i className='fab fa-linkedin' />\r\n          </a>\r\n          <a\r\n            href='https://github.com'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n          >\r\n            <i className='fab fa-github' />\r\n          </a>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AboutMe\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Badge } from 'react-bootstrap'\r\nimport { PUBLIC_URL } from '../../index'\r\n\r\nclass Tags extends Component {\r\n  onTagClick = (event, tagName) => {\r\n    this.props.switchTagState(tagName)\r\n    this.props.filterPosts(this.props.posts, this.props.filters)\r\n    event.preventDefault()\r\n  }\r\n\r\n  Tags = () => {\r\n    const tags = this.props.filters.tags\r\n    return tags.length > 0\r\n      ? tags.map(tag => (\r\n          <div\r\n            className='mr-2 alert-link'\r\n            key={tag.name}\r\n            onClick={event => this.onTagClick(event, tag.name)}\r\n          >\r\n            <Link to={PUBLIC_URL + '/search'}>\r\n              {tag.name}\r\n              {tag.state ? (\r\n                <i className='far fa-check-square ml-2' />\r\n              ) : (\r\n                <Badge variant='secondary' className='ml-2'>\r\n                  {tag.quantity}\r\n                </Badge>\r\n              )}\r\n            </Link>\r\n          </div>\r\n        ))\r\n      : ''\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div>\r\n          <h3>Tags</h3>\r\n          <span className='d-flex flex-wrap'>\r\n            <this.Tags />\r\n          </span>\r\n        </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tags\r\n","import { connect } from 'react-redux'\r\nimport { switchTagState, filterPosts } from '../actions'\r\nimport Tags from '../components/SidePanel/Tags'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    posts: state.posts.data,\r\n    filters: state.filters\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { switchTagState, filterPosts }\r\n\r\nexport const TagsContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Tags)\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Badge } from 'react-bootstrap'\r\nimport { PUBLIC_URL } from '../../index'\r\n\r\nclass Archives extends Component {\r\n  onDateClick = (event, year, month) => {\r\n    this.props.switchDateState({ year, month })\r\n    this.props.filterPosts(this.props.posts, this.props.filters)\r\n    event.preventDefault()\r\n  }\r\n\r\n  Dates = () => {\r\n    const dates = this.props.filters.dates\r\n    return dates.length > 0\r\n      ? dates.map(date => (\r\n          <ul key={date.year} className='list-unstyled'>\r\n            <div\r\n              className='alert-link'\r\n              onClick={event => this.onDateClick(event, date.year)}\r\n            >\r\n              <Link to={PUBLIC_URL + '/search'}>\r\n                {date.year}\r\n                {date.yearState ? (\r\n                  <i className='far fa-check-square ml-2' />\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </Link>\r\n            </div>\r\n            {date.months.map(month => (\r\n              <li key={month.name}>\r\n                <div\r\n                  className='alert-link'\r\n                  onClick={event =>\r\n                    this.onDateClick(event, date.year, month.name)\r\n                  }\r\n                >\r\n                  <Link to={PUBLIC_URL + '/search'}>\r\n                    {month.name}\r\n                    {month.state ? (\r\n                      <i className='far fa-check-square ml-2' />\r\n                    ) : (\r\n                      <Badge variant='secondary' className='ml-2'>\r\n                        {month.quantity}\r\n                      </Badge>\r\n                    )}\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ))\r\n      : ''\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h3>Archive posts</h3>\r\n        <this.Dates />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Archives\r\n","import { connect } from 'react-redux'\r\nimport { filterPosts, switchDateState } from '../actions'\r\nimport Archive from '../components/SidePanel/Archives'\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.data,\r\n  filters: state.filters\r\n})\r\n\r\nconst mapDispatchToProps = { filterPosts, switchDateState }\r\n\r\nexport const ArchivesContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Archive)\r\n","import React, { Component } from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport AboutMe from './AboutMe'\r\nimport { TagsContainer } from '../../containers/TagsContainer'\r\nimport { ArchivesContainer } from '../../containers/ArchivesContainer'\r\n\r\nclass SidePanel extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className='pb-5'>\r\n          <AboutMe />\r\n        </Row>\r\n        <Row className='pb-5'>\r\n          <TagsContainer />\r\n        </Row>\r\n        <Row className='pb-5'>\r\n          <ArchivesContainer />\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SidePanel\r\n","import React, { Component } from 'react'\r\nimport { Row, Card, Col, Button, ButtonGroup } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { PUBLIC_URL } from '../../../index'\r\n\r\nclass PostsCardHorizontal extends Component {\r\n  render() {\r\n    const post = this.props.post\r\n    const postURL = this.props.postURL\r\n    return (\r\n      <Card className='mb-3'>\r\n        <div className='row no-gutters'>\r\n          <div className='col-md-3 d-flex flex-wrap align-items-center'>\r\n            <Link to={postURL}>\r\n              <img src={post.mainImage} className='card-img pl-3' alt='' />\r\n            </Link>\r\n          </div>\r\n          <div className='col-md-9'>\r\n            <div className='card-body'>\r\n              <Link to={postURL}>\r\n                <h5 className='card-title'>{post.title}</h5>\r\n              </Link>\r\n              <p className='card-text'>\r\n                {post.shortDescription.substring(0, 150) + '...'}\r\n              </p>\r\n              <span className='card-text'>\r\n                <Row>\r\n                  <Col>\r\n                    <p className='text-muted mb-0'>\r\n                      {post.author +\r\n                        ', ' +\r\n                        post.date.toLocaleString('pl-PL', {\r\n                          day: 'numeric',\r\n                          month: 'numeric',\r\n                          year: 'numeric'\r\n                        })}\r\n                    </p>\r\n                    <p className='text-muted mb-0'>\r\n                      {post.tags.map(tag => (\r\n                        <span key={tag} className='pr-2'>\r\n                          {tag}\r\n                        </span>\r\n                      ))}\r\n                    </p>\r\n                  </Col>\r\n                  {this.props.isSignedIn && (\r\n                    <Col className='align-self-center'>\r\n                      <ButtonGroup className='float-right btn-group-sm'>\r\n                        <Link to={PUBLIC_URL + '/editpost'}>\r\n                          <Button\r\n                            variant='outline-primary'\r\n                            onClick={this.props.onEditPost}\r\n                          >\r\n                            Edit &nbsp; <i className='fas fa-edit' />\r\n                          </Button>\r\n                        </Link>\r\n                        <Button\r\n                          variant='outline-primary'\r\n                          className='ml-3'\r\n                          onClick={this.props.onRemovePost}\r\n                        >\r\n                          Remove &nbsp; <i className='fas fa-trash-alt' />\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PostsCardHorizontal\r\n","import React, { Component } from 'react'\r\nimport { Col, Card, Button, ButtonGroup } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { PUBLIC_URL } from '../../../index'\r\n\r\nclass PostCardVertical extends Component {\r\n  render() {\r\n    const post = this.props.post\r\n    const postURL = this.props.postURL\r\n    return (\r\n      <Card id='post-card-vertical' className='mb-3'>\r\n        <Link to={postURL}>\r\n          <img src={post.mainImage} className='card-img-top pt-3' alt='' />\r\n        </Link>\r\n        <div className='card-body'>\r\n          <Link to={postURL}>\r\n            <h5 className='card-title'>{post.title}</h5>\r\n          </Link>\r\n        </div>\r\n        <div className='card-footer'>\r\n          <p className='text-muted mb-0'>\r\n            {post.author +\r\n              ', ' +\r\n              post.date.toLocaleString('pl-PL', {\r\n                day: 'numeric',\r\n                month: 'numeric',\r\n                year: 'numeric'\r\n              })}\r\n          </p>\r\n          <p className='text-muted mb-0'>\r\n            {post.tags.map(tag => (\r\n              <span key={tag} className='pr-2'>\r\n                {tag}\r\n              </span>\r\n            ))}\r\n          </p>\r\n          {this.props.isSignedIn && (\r\n            <Col className='align-self-center text-center pt-2'>\r\n              <ButtonGroup className='btn-group-sm'>\r\n                <Link to={PUBLIC_URL + '/editpost'}>\r\n                  <Button\r\n                    variant='outline-primary'\r\n                    onClick={this.props.onEditPost}\r\n                  >\r\n                    Edit &nbsp; <i className='fas fa-edit' />\r\n                  </Button>\r\n                </Link>\r\n                <Button\r\n                  variant='outline-primary'\r\n                  className='ml-3'\r\n                  onClick={this.props.onRemovePost}\r\n                >\r\n                  Remove &nbsp; <i className='fas fa-trash-alt' />\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Col>\r\n          )}\r\n        </div>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PostCardVertical\r\n","import React, { Component } from 'react'\r\nimport { PUBLIC_URL } from '../../../index'\r\nimport PostCardHorizontal from './PostCardHorizontal'\r\nimport PostCardVertical from './PostCardVertical'\r\n\r\nclass PostsCard extends Component {\r\n  handleEditPost = () => {\r\n    this.props.editedPostId(this.props.post.id)\r\n  }\r\n  handleRemovePost = () => {\r\n    this.props.removePost(this.props.post.id)\r\n  }\r\n\r\n  HorizontalCard = props => (\r\n    <PostCardHorizontal\r\n      post={props.post}\r\n      postURL={props.postURL}\r\n      onEditPost={this.handleEditPost}\r\n      onRemovePost={this.handleRemovePost}\r\n      isSignedIn={props.isSignedIn}\r\n    />\r\n  )\r\n\r\n  VerticalCard = props => (\r\n    <PostCardVertical\r\n      post={props.post}\r\n      postURL={props.postURL}\r\n      onEditPost={this.handleEditPost}\r\n      onRemovePost={this.handleRemovePost}\r\n      isSignedIn={props.isSignedIn}\r\n    />\r\n  )\r\n\r\n  render() {\r\n    const post = this.props.post\r\n    const postURL = PUBLIC_URL + '/post/id-' + post.id\r\n    const isSignedIn = this.props.isSignedIn\r\n    const cardVersion = this.props.cardVersion\r\n    const card =\r\n      cardVersion === 'horizontal' ? (\r\n        <this.HorizontalCard\r\n          post={post}\r\n          postURL={postURL}\r\n          isSignedIn={isSignedIn}\r\n        />\r\n      ) : (\r\n        <this.VerticalCard\r\n          post={post}\r\n          postURL={postURL}\r\n          isSignedIn={isSignedIn}\r\n        />\r\n      )\r\n    return card\r\n  }\r\n}\r\n\r\nexport default PostsCard\r\n","import { connect } from 'react-redux'\r\nimport PostCard from '../components/MainPanel/PostCards/PostCard'\r\nimport { removePost, editedPostId } from '../actions/'\r\n\r\nconst mapStateToProps = state => ({\r\n  isSignedIn: state.auth.isSignedIn\r\n})\r\n\r\nconst mapDispatchToProps = { removePost, editedPostId }\r\n\r\nexport const PostCardContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PostCard)\r\n","import React, { Component } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport { PostCardContainer } from '../../containers/PostCardContainer'\r\n\r\nclass SearchResult extends Component {\r\n  PostCards = () => {\r\n    return this.props.filteredPosts.map(post => (\r\n      <PostCardContainer key={post.id} cardVersion={'horizontal'} post={post} />\r\n    ))\r\n  }\r\n\r\n  EmptyResult = () => {\r\n    return (\r\n      <div className='text-center pt-5'>\r\n        <div className='pb-2'>\r\n          <h2>Nothing here...</h2>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.props.filteredPosts.length !== 0 ? (\r\n          <this.PostCards />\r\n        ) : (\r\n          <this.EmptyResult />\r\n        )}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchResult\r\n","import { connect } from 'react-redux'\r\nimport SearchResult from '../components/MainPanel/SearchResult'\r\n\r\nconst mapStateToProps = state => ({\r\n  filteredPosts: state.filteredPosts\r\n})\r\n\r\nexport const SearchResultContainer = connect(mapStateToProps)(SearchResult)\r\n","import React, { Component } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport { PostCardContainer } from '../../containers/PostCardContainer'\r\n\r\nclass MainBoard extends Component {\r\n  static headPostsNum = 2\r\n\r\n  HeadPosts = () => {\r\n    return (\r\n      <div className='card-deck'>\r\n        {this.props.filteredPosts.slice(0, MainBoard.headPostsNum).map(post => (\r\n          <PostCardContainer\r\n            key={post.id}\r\n            cardVersion={'vertical'}\r\n            post={post}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  PostCards = () => {\r\n    return this.props.filteredPosts\r\n      .slice(MainBoard.headPostsNum)\r\n      .map(post => (\r\n        <PostCardContainer\r\n          key={post.id}\r\n          cardVersion={'horizontal'}\r\n          post={post}\r\n        />\r\n      ))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h3 className='pb-3'>Latest posts</h3>\r\n        <this.HeadPosts />\r\n        <hr className='pb-2' />\r\n        <this.PostCards />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainBoard\r\n","import { connect } from 'react-redux'\r\nimport MainBoard from '../components/MainPanel/MainBoard'\r\n\r\nconst mapStateToProps = state => ({\r\n  filteredPosts: state.filteredPosts\r\n})\r\n\r\nexport const MainBoardContainer = connect(mapStateToProps)(MainBoard)\r\n","import React, { Component } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport DataUtils from '../../data/dataUtils'\r\n\r\nclass Post extends Component {\r\n  componentDidMount() {\r\n    DataUtils.updateCodeSyntaxHighlighting()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    DataUtils.updateCodeSyntaxHighlighting()\r\n  }\r\n\r\n  PostContainer = () => {\r\n    const post = this.props.posts.find(\r\n      post => post.id === this.props.routeParamId\r\n    )\r\n    const text = DataUtils.convertMarkdownToHtml(post.text)\r\n    return (\r\n      <div>\r\n        <h1>{post.title}</h1>\r\n        <p>{post.shortDescription}</p>\r\n        <div\r\n          className='content pt-3'\r\n          dangerouslySetInnerHTML={{ __html: text }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <this.PostContainer />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Post\r\n","import { connect } from 'react-redux'\r\nimport Post from '../components/MainPanel/Post'\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.data\r\n})\r\n\r\nexport const PostContainer = connect(mapStateToProps)(Post)\r\n","import React, { Component } from 'react'\r\nimport DataUtils from '../../../data/dataUtils'\r\nimport { Col } from 'react-bootstrap'\r\n\r\nclass Preview extends Component {\r\n  componentDidMount() {\r\n    DataUtils.updateCodeSyntaxHighlighting()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    DataUtils.updateCodeSyntaxHighlighting()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='pb-4'>\r\n        <h4>Live preview</h4>\r\n        <Col sm={3} className='pl-0'>\r\n          <hr />\r\n        </Col>\r\n        <h1>{this.props.title}</h1>\r\n        <p>{this.props.shortDescription}</p>\r\n        <div\r\n          className='content pt-3'\r\n          dangerouslySetInnerHTML={{\r\n            __html: DataUtils.convertMarkdownToHtml(this.props.text)\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Preview\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\nimport uuidv1 from 'uuid/v1'\r\nimport { Post } from '../../../data/index'\r\nimport Preview from './Preview'\r\nimport { PUBLIC_URL } from '../../../index'\r\n\r\nclass PostEditor extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      formInput: {\r\n        title: '',\r\n        shortDescription: '',\r\n        text: '',\r\n        mainImage: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const sourcePost = this.props.sourcePost\r\n    if (sourcePost !== prevProps.sourcePost) {\r\n      this.setState({\r\n        formInput: {\r\n          title: sourcePost.title,\r\n          shortDescription: sourcePost.shortDescription,\r\n          text: sourcePost.text,\r\n          mainImage: sourcePost.mainImage\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  handleFinishEdit = () => {\r\n    this.props.onFinishEditPost(\r\n      new Post(\r\n        this.props.variant === 'add' ? uuidv1() : this.props.sourcePost.id,\r\n        this.state.formInput.title,\r\n        this.state.formInput.shortDescription,\r\n        this.state.formInput.text,\r\n        this.props.authDisplayName,\r\n        new Date(),\r\n        ['#rust', '#javascript', '#linux'],\r\n        this.state.formInput.mainImage\r\n      )\r\n    )\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    let text = event.target.value\r\n    this.setState({\r\n      ...this.state,\r\n      formInput: {\r\n        ...this.state.formInput,\r\n        [event.target.name]: text\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div className='pb-4'>\r\n          <h5 className='pb-2'>Let's write</h5>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Control\r\n                name='title'\r\n                value={this.state.formInput.title}\r\n                type='text'\r\n                placeholder='Post title'\r\n                required\r\n                maxLength='50'\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                name='shortDescription'\r\n                as='textarea'\r\n                value={this.state.formInput.shortDescription}\r\n                placeholder='Short description'\r\n                required\r\n                rows='3'\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                name='text'\r\n                as='textarea'\r\n                value={this.state.formInput.text}\r\n                placeholder='Post body'\r\n                rows='10'\r\n                required\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className='d-flex justify-content-end'>\r\n              <Link className='ml-2' to={PUBLIC_URL}>\r\n                <Button\r\n                  variant='outline-primary'\r\n                  onClick={this.handleFinishEdit}\r\n                >\r\n                  {this.props.variant === 'add' ? 'Add' : 'Edit'}\r\n                </Button>\r\n              </Link>\r\n            </Form.Group>\r\n          </Form>\r\n        </div>\r\n        <Preview\r\n          title={this.state.formInput.title}\r\n          shortDescription={this.state.formInput.shortDescription}\r\n          text={this.state.formInput.text}\r\n        />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PostEditor\r\n","import React, { Component } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nclass FormattingHelp extends Component {\r\n  render() {\r\n    return (\r\n      <div className='pb-4'>\r\n        <h5 className='pb-2 '>Formatting options (only in Post body)</h5>\r\n        <Table bordered>\r\n          <thead>\r\n            <tr>\r\n              <th>Usage</th>\r\n              <th>Example</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>### header h3</td>\r\n              <td>\r\n                <h3>header h3</h3>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>#### header h4</td>\r\n              <td>\r\n                <h4>header h4</h4>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>*italics*</td>\r\n              <td>\r\n                <em>italics</em>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>**bold**</td>\r\n              <td>\r\n                <strong>bold</strong>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>`code`</td>\r\n              <td>\r\n                <code>code</code>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>```</p>\r\n                <p>randomArrayItem = array...</p>\r\n                <p>array[Math.floor...</p>\r\n                <p>```</p>\r\n              </td>\r\n              <td>\r\n                <pre>\r\n                  <code>\r\n                    <p>randomArrayItem = array =></p>\r\n                    <p>\r\n                      &nbsp;&nbsp;array[Math.floor(Math.random() *\r\n                      array.length)];\r\n                    </p>\r\n                  </code>\r\n                </pre>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>![alt text](url = 30x30)</td>\r\n              <td>\r\n                <img\r\n                  alt='Alt Text'\r\n                  src='https://avatars.dicebear.com/v2/identicon/test.svg'\r\n                  width='30'\r\n                  height='30'\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>{'<http://www.example.com>'}</td>\r\n              <td>\r\n                <a href='http://www.example.com'>http://www.example.com</a>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FormattingHelp\r\n","import React, { Component } from 'react'\r\nimport { Container, Button, Col, Row } from 'react-bootstrap'\r\nimport FormattingHelp from './FormattingHelp'\r\nimport DataUtils from '../../../data/dataUtils'\r\n\r\nclass Helper extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      showFormattingHelp: false,\r\n      shouldClearPastedExample: false\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    DataUtils.updateCodeSyntaxHighlighting()\r\n  }\r\n\r\n  handleShowFormattingHelp = () => {\r\n    const current = this.state.showFormattingHelp\r\n    this.setState({\r\n      ...this.state,\r\n      showFormattingHelp: !current\r\n    })\r\n  }\r\n\r\n  handlePasteExample = () => {\r\n    const shouldClearPastedExample = !this.state.shouldClearPastedExample\r\n    const generatedExample = DataUtils.generateExampleMarkdownPost()\r\n    const title = shouldClearPastedExample ? generatedExample.title : ''\r\n    const shortDescription = shouldClearPastedExample\r\n      ? generatedExample.shortDescription\r\n      : ''\r\n    const text = shouldClearPastedExample ? generatedExample.text : ''\r\n    const mainImage = generatedExample.randomImageSrc\r\n\r\n    this.props.onPasteExample({\r\n      title,\r\n      shortDescription,\r\n      text,\r\n      mainImage\r\n    })\r\n    this.setState({\r\n      ...this.state,\r\n      shouldClearPastedExample\r\n    })\r\n  }\r\n\r\n  Helper = () => {\r\n    return (\r\n      <div className='pb-4'>\r\n        <h5 className='pb-1'>Need a little help?</h5>\r\n        <Col className='pb-4'>\r\n          <Row className='pb-2 d-flex align-items-center'>\r\n            <Col sm={4} className='pl-0'>\r\n              <span>Formatting options:</span>\r\n            </Col>\r\n            <Col sm={2} className='d-flex justify-content-end'>\r\n              <Button\r\n                className='ml-2'\r\n                variant='outline-primary'\r\n                onClick={this.handleShowFormattingHelp}\r\n              >\r\n                {this.state.showFormattingHelp ? 'Hide' : 'Show'}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row className='d-flex align-items-center'>\r\n            <Col sm={4} className='pl-0'>\r\n              <span>Example post:</span>\r\n            </Col>\r\n            <Col sm={2} className='d-flex justify-content-end'>\r\n              <Button\r\n                className='ml-2'\r\n                variant='outline-primary'\r\n                onClick={this.handlePasteExample}\r\n              >\r\n                {this.state.shouldClearPastedExample ? 'Clear' : 'Paste'}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <this.Helper />\r\n        {this.state.showFormattingHelp && <FormattingHelp />}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Helper\r\n","import React, { Component } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport PostEditor from './PostEditor'\r\nimport Helper from './Helper'\r\n\r\nclass AddPost extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      sourcePost: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const editedPostId = this.props.posts.editedPostId\r\n    const sourcePost = this.props.posts.data.find(\r\n      post => post._id === editedPostId\r\n    )\r\n    if (sourcePost !== null && sourcePost !== undefined)\r\n      this.setState({\r\n        sourcePost\r\n      })\r\n  }\r\n\r\n  handleAddPost = editedPost => {\r\n    this.props.addPost(editedPost)\r\n  }\r\n\r\n  handlePasteExample = examplePost => {\r\n    this.setState({ sourcePost: examplePost })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h4>\r\n          {this.props.variant === 'add' ? 'Write new post!' : 'Edit your post.'}\r\n        </h4>\r\n        <hr className='pb-3' />\r\n        <Helper onPasteExample={this.handlePasteExample} />\r\n        <PostEditor\r\n          authDisplayName={this.props.authDisplayName}\r\n          sourcePost={this.state.sourcePost}\r\n          variant={this.props.variant}\r\n          onFinishEditPost={this.handleAddPost}\r\n        />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddPost\r\n","import { connect } from 'react-redux'\r\nimport AddPost from '../components/MainPanel/AddPost/AddPost'\r\nimport { addPost, filterPosts, unwrapTags, unwrapDates } from '../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts,\r\n  filters: state.filters,\r\n  authDisplayName: state.auth.displayName\r\n})\r\n\r\nconst mapDispatchToProps = { addPost, filterPosts, unwrapTags, unwrapDates }\r\n\r\nexport const AddPostContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddPost)\r\n","import React, { Component } from 'react'\r\nimport { Container, Form, Button, Col, Row } from 'react-bootstrap'\r\n\r\nclass Settings extends Component {\r\n  handleRemoveAllPosts = () => {\r\n    console.log('handleRemoveAllPosts')\r\n  }\r\n\r\n  handleUserDataChange = () => {\r\n    console.log('handleUserDataChange')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h4>Settings</h4>\r\n        <hr className='pb-3' />\r\n        <h5 className='pb-1'>For debugging purposes</h5>\r\n        <Col className='pb-5'>\r\n          <Row className='pb-2 d-flex align-items-center'>\r\n            <Col sm={4} className='pl-0'>\r\n              <span>Remove all posts:</span>\r\n            </Col>\r\n            <Col sm={2} className='d-flex justify-content-end'>\r\n              <Button\r\n                className='ml-2'\r\n                variant='outline-primary'\r\n                onClick={this.handleRemoveAllPosts}\r\n              >\r\n                Remove\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row className='d-flex align-items-center'>\r\n            <Col sm={4} className='pl-0'>\r\n              <span>Generate new random posts:</span>\r\n            </Col>\r\n            <Col sm={2} className='d-flex justify-content-end'>\r\n              <Button\r\n                className='ml-2'\r\n                variant='outline-primary'\r\n                onClick={this.handleRemoveAllPosts}\r\n              >\r\n                Generate\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <h5 className='pb-2'>User data</h5>\r\n        <Form>\r\n          <Col sm={6} className='pl-0'>\r\n            <Form.Group>\r\n              <Form.Control\r\n                name='displayName'\r\n                // value={this.state.formInput.title}\r\n                type='text'\r\n                placeholder='Name'\r\n                required\r\n                maxLength='30'\r\n                // onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                name='email'\r\n                type='email'\r\n                // value={this.state.formInput.shortDescription}\r\n                placeholder='Email'\r\n                required\r\n                // onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className='d-flex justify-content-end'>\r\n              <Button\r\n                variant='outline-primary'\r\n                onClick={this.handleUserDataChange}\r\n              >\r\n                Change\r\n              </Button>\r\n            </Form.Group>\r\n          </Col>\r\n        </Form>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Settings\r\n","import { connect } from 'react-redux'\r\nimport Settings from '../components/MainPanel/Settings'\r\n\r\nconst mapStateToProps = state => ({\r\n  state: state\r\n})\r\n\r\nexport const SettingsContainer = connect(mapStateToProps)(Settings)\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport { NavbarContainer } from '../containers/NavbarContainer'\r\nimport SidePanel from './SidePanel/SidePanel'\r\nimport { SearchResultContainer } from '../containers/SearchResultContainer'\r\nimport { MainBoardContainer } from '../containers/MainBoardContainer'\r\nimport { PostContainer } from '../containers/PostContainer'\r\nimport { AddPostContainer } from '../containers/AddPostContainer'\r\nimport { SettingsContainer } from '../containers/SettingsContainer'\r\nimport { PUBLIC_URL } from '../index'\r\nimport DataUtils from '../data/dataUtils'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.waitMessages = [\r\n      'Feeding artificial intelligence',\r\n      'Decorating unattractive UI',\r\n      'Refactoring dirty code',\r\n      'Writing fake news',\r\n      'Patching security vulnerabilities'\r\n    ]\r\n    this.state = {\r\n      error: null,\r\n      waitMessage: DataUtils.randomArrayItem(this.waitMessages)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchPosts()\r\n    // DataUtils.addPostsToFirestore(20);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // console.log(window.store.getState())\r\n    const posts = this.props.posts\r\n    if (posts !== prevProps.posts) {\r\n      this.setState({\r\n        error: this.props.posts.fetchingError\r\n      })\r\n    }\r\n  }\r\n\r\n  ErrorContainer = () => {\r\n    return (\r\n      <div className='text-center pt-5'>\r\n        <div className='pb-2'>\r\n          <h2>Error. Please reload the page.</h2>\r\n          <h5>Error message: \"{this.state.error.message}\"</h5>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  WaitContainer = () => {\r\n    const currentIndex = this.waitMessages.findIndex(\r\n      m => m === this.state.waitMessage\r\n    )\r\n    setTimeout(() => {\r\n      this.setState({\r\n        waitMessage: DataUtils.nextArrayItem(this.waitMessages, currentIndex)\r\n      })\r\n    }, 1000)\r\n\r\n    return (\r\n      <div className='wait-container'>\r\n        <div className='container text-center h-100 d-flex flex-column justify-content-center'>\r\n          <Row className='wait-text'>\r\n            <Col>\r\n              <h2>{this.state.waitMessage + `.`}</h2>\r\n            </Col>\r\n          </Row>\r\n          <div className='box-loading' />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  MainContainer = () => {\r\n    const isSignedIn = this.props.isSignedIn\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <NavbarContainer />\r\n          <Container>\r\n            <Row className='pt-5'>\r\n              <Col sm={3}>\r\n                <SidePanel />\r\n              </Col>\r\n              <Col sm={9}>\r\n                <Switch>\r\n                  <Route\r\n                    exact\r\n                    path={PUBLIC_URL + '/'}\r\n                    component={MainBoardContainer}\r\n                  />\r\n                  <Route\r\n                    path={PUBLIC_URL + '/search'}\r\n                    component={SearchResultContainer}\r\n                  />\r\n                  <Route\r\n                    path={PUBLIC_URL + '/post/id-:id'}\r\n                    component={route => (\r\n                      <PostContainer routeParamId={route.match.params.id} />\r\n                    )}\r\n                  />\r\n                  {isSignedIn && (\r\n                    <Route\r\n                      path={PUBLIC_URL + '/addpost'}\r\n                      component={() => <AddPostContainer variant={'add'} />}\r\n                    />\r\n                  )}\r\n                  {isSignedIn && (\r\n                    <Route\r\n                      path={PUBLIC_URL + '/editpost'}\r\n                      component={() => <AddPostContainer variant={'edit'} />}\r\n                    />\r\n                  )}\r\n                  {isSignedIn && (\r\n                    <Route\r\n                      path={PUBLIC_URL + '/settings'}\r\n                      component={SettingsContainer}\r\n                    />\r\n                  )}\r\n                </Switch>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if (this.props.posts.length !== 0 && this.state.error === null) {\r\n      return <this.MainContainer />\r\n    } else if (this.state.error !== null) {\r\n      return <this.ErrorContainer />\r\n    } else {\r\n      return <this.WaitContainer />\r\n    }\r\n  }\r\n}\r\n\r\nexport default App\r\n","import { connect } from 'react-redux'\r\nimport { fetchPosts, filterPosts, unwrapTags, unwrapDates } from '../actions'\r\nimport App from '../components/App'\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts,\r\n  filters: state.filters,\r\n  isSignedIn: state.auth.isSignedIn\r\n})\r\n\r\nconst mapDispatchToProps = { fetchPosts, filterPosts, unwrapTags, unwrapDates }\r\n\r\nexport const AppContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\nimport { AppContainer } from './containers/AppContainer'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport './styles/_index.scss'\r\n\r\nexport const PUBLIC_URL = process.env.PUBLIC_URL\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n// TODO: Remove. For debugging purposes only!\r\nwindow.store = store\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <AppContainer />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}
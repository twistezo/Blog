{"version":3,"sources":["data/firebase.js","data/index.js","data/generator.js","data/dataUtils.js","reducers/reducersUtils.js","reducers/index.js","actions/index.js","components/Navbar/SearchForm.js","containers/SearchFormContainer.js","components/Navbar/SignInForm.js","containers/SignInFormContainer.js","components/Navbar/Navbar.js","containers/NavbarContainer.js","components/SidePanel/AboutMe.js","components/SidePanel/Tags.js","containers/TagsContainer.js","components/SidePanel/Archives.js","containers/ArchivesContainer.js","components/SidePanel/SidePanel.js","components/MainPanel/PostCards/PostCardHorizontal.js","components/MainPanel/SearchResult.js","containers/SearchResultContainer.js","components/MainPanel/PostCards/PostCardVertical.js","components/MainPanel/MainBoard.js","containers/MainBoardContainer.js","components/MainPanel/Post.js","containers/PostContainer.js","components/MainPanel/AddPost/Preview.js","components/MainPanel/AddPost/FormattingHelp.js","components/MainPanel/AddPost/AddPost.js","containers/AddPostContainer.js","components/App.js","containers/AppContainer.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseFirestore","firestore","Post","id","title","shortDescription","text","author","date","tags","mainImage","Object","classCallCheck","this","_id","_title","_shortDescription","_text","_author","_date","_tags","_mainImage","DataGenerator","_this","_generate","quantity","chance","Chance","i","_data","push","uuidv1","sentence","words","paragraph","sentences","DataUtils","generateExampleMarkdownText","string","american","year","randomArrayItem","arrayFromArrayRandomItems","word","length","isNullEmptyOrUndefinded","Error","fetch","Promise","resolve","reject","result","array","Math","floor","random","value","undefined","Array","from","filter","randomBoolean","arrayContainsAllElementsFromAnother","array0","array1","map","a","some","b","every","e","nextArrayItem","currentIndex","getEmailPrefix","email","slice","indexOf","randomSentence","randomParagraph","concat","convertMarkdownToHtml","markdownString","showdown","Converter","noHeaderId","makeHtml","updateCodeSyntaxHighlighting","document","querySelectorAll","forEach","block","hljs","highlightBlock","jsPostObjToFirestoreObj","post","Timestamp","fromDate","firestorePostObjToJsOjb","firestoreObj","toDate","addPostsToFirestore","num","then","posts","collection","doc","set","catch","error","console","err","log","ReducersUtils","sortPostsByDateDesc","sort","Date","unwrapTagsFromPosts","allTags","flat","uniqueTags","Set","uniqueWithQuantity","uniqueTag","name","tag","state","switchTagState","tagName","find","filterPostsBy","filters","dates","searchValue","filtered","switchedOnTags","toLowerCase","includes","switchedOnYears","yearState","getFullYear","switchedOnMonths","months","month","item","monthNameFromDate","unwrapDatesFromPosts","years","yearsWithMonths","postsQuantityByDate","toLocaleString","switchDateState","dateToSwitch","archiveDates","resetFilters","reseted","assign","filtersShape","combineReducers","arguments","action","type","data","toConsumableArray","fetchingError","filteredPosts","objectSpread","auth","isSignedIn","errorMessage","displayName","fetchPosts","dispatch","getState","get","querySnapshot","docs","postsFetched","unwrapTags","unwrapDates","filterPosts","signedIn","fetchedUserData","SearchForm","handleSearchFormInputChange","event","target","props","handleSearchInput","react_default","createElement","Form","inline","Link","to","PUBLIC_URL","FormControl","className","placeholder","onChange","Component","mapDispatchToProps","SearchFormContainer","connect","SignInForm","possibleConstructorReturn","getPrototypeOf","call","handleSignIn","signIn","formData","password","handleHideSignInModal","onSignInFormHide","handleFormInputChange","targetName","targetValue","setState","defineProperty","Modal","show","signInModalShow","onHide","size","aria-labelledby","centered","Header","closeButton","Title","Body","Group","Control","required","Row","Col","Button","onClick","signInWithEmailAndPassword","user","currentUser","userEmail","fetchSignedInUserData","message","SignInFormContainer","Navbar","handleLogoClick","handleSignInClick","signOut","es_Navbar","bg","variant","Container","Brand","NavbarContainer","AboutMe","Tags","onTagClick","preventDefault","key","Badge","TagsContainer","Archives","onDateClick","Dates","ArchivesContainer","Archive","SidePanel","SidePanel_AboutMe","PostsCard","postURL","src","alt","substring","day","SearchResult","PostCards","PostCardHorizontal","EmptyResult","SearchResultContainer","PostsCardVertical","MainBoard","HeadPosts","headCards","headPostsNum","PostCardVertical","MainBoardContainer","PostContainer","routeParamId","dangerouslySetInnerHTML","__html","Preview","parsedText","FormattingHelp","Table","bordered","width","height","href","AddPost","handleShowFormattingHelp","current","controllers","showFormattingHelp","handlePasteExample","shouldClearPastedExample","formInput","handleInputChange","handleAddPost","addPost","maxLength","as","rows","Helper","AddPost_FormattingHelp","AddPost_Preview","add","addPostToFirestore","AddPostContainer","App","ErrorContainer","WaitContainer","waitMessages","findIndex","m","waitMessage","setTimeout","MainContainer","BrowserRouter","sm","components_SidePanel_SidePanel","Switch","Route","exact","path","component","route","match","params","prevProps","AppContainer","Boolean","window","location","hostname","__webpack_require__","d","__webpack_exports__","process","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0UAaAA,IAASC,cARc,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,kBAINP,QAAf,EACaQ,EAAoBR,IAASS,8CChBpCC,aACJ,SAAAA,EACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACCC,OAAAC,EAAA,EAAAD,CAAAE,KAAAX,GACDW,KAAKC,IAAMX,EACXU,KAAKE,OAASX,EACdS,KAAKG,kBAAoBX,EACzBQ,KAAKI,MAAQX,EACbO,KAAKK,QAAUX,EACfM,KAAKM,MAAQX,EACbK,KAAKO,MAAQX,EACbI,KAAKQ,WAAaX,iDAIlB,OAAOG,KAAKC,kCAIZ,OAAOD,KAAKE,gDAIZ,OAAOF,KAAKG,+CAIZ,OAAOH,KAAKI,qCAIZ,OAAOJ,KAAKK,qCAIZ,OAAOL,KAAKM,oBAGLX,GACPK,KAAKM,MAAQX,+BAIb,OAAOK,KAAKO,wCAIZ,OAAOP,KAAKQ,qCCFDC,EA9Cb,SAAAA,IAAc,IAAAC,EAAAV,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAAS,GAAAT,KAKdW,UAAY,SAAAC,GAEV,IADA,IAAMC,EAAS,IAAIC,IACVC,EAAI,EAAGA,EAAIH,EAAUG,IAC5BL,EAAKM,MAAMC,KACT,IAAI5B,EACF6B,MACAL,EAAOM,SAAS,CAAEC,MAAO,IACzBP,EAAOQ,UAAU,CAAEC,UAAW,IAC9BC,EAAUC,8BACV,WACAX,EAAOlB,KAAK,CACV8B,QAAQ,EACRC,UAAU,EACVC,KAAMJ,EAAUK,gBAAgB,CAAC,KAAM,KAAM,SAE/CL,EAAUM,0BAA0BnB,EAAKH,OACzC,6CACEM,EAAOiB,KAAK,CAAEC,OAAQ,KACtB,SAKR,OAAOR,EAAUS,wBAAwBtB,EAAKM,OAC1C,IAAIiB,MAAM,yBACVvB,EAAKM,OA9BGhB,KAiCdkC,MAAQ,SAAAtB,GAAQ,OACd,IAAIuB,QAAQ,SAACC,EAASC,GACpB,IAAMC,EAAS5B,EAAKC,UAAUC,GAC1B0B,aAAkBL,MACpBI,EACE,IAAIJ,MAAM,4DAGZG,EAAQE,MAxCZtC,KAAKgB,MAAQ,GACbhB,KAAKO,MAAQ,CAAC,cAAe,OAAQ,QAAS,WAAY,WCCxDgB,sCACGK,gBAAkB,SAAAW,GAAK,OAC5BA,EAAMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMR,UAFrCR,EAIGS,wBAA0B,SAAAW,GAAK,OAC1B,OAAVA,GAAkBA,IAAU,SAAgBC,IAAVD,GAAwC,IAAjBA,EAAMZ,QAL7DR,EAOGM,0BAA4B,SAAAU,GACjC,IAAMD,EAASO,MAAMC,KAAKP,GAAOQ,OAAO,kBAAMxB,EAAUyB,kBACxD,OAAyB,IAAlBV,EAAOP,OAAe,CAACQ,EAAM,IAAMD,GATxCf,EAYGyB,cAAgB,kBAAMR,KAAKE,UAAY,IAZ1CnB,EAcG0B,oCAAsC,SAACC,EAAQC,GAAT,OAC3CA,EACGC,IAAI,SAAAC,GACH,OAAOH,EAAOI,KAAK,SAAAC,GACjB,OAAOA,IAAMF,MAGhBG,MAAM,SAAAC,GAAC,OAAIA,KArBZlC,EAuBGmC,cAAgB,SAACnB,EAAOoB,GAAR,OACrBpB,GAAOoB,EAAe,GAAKpB,EAAMR,SAxB/BR,EA0BGqC,eAAiB,SAAAC,GAAK,OAAIA,EAAMC,MAAM,EAAGD,EAAME,QAAQ,OA1B1DxC,EA4BGC,4BAA8B,WACnC,IAAMX,EAAS,IAAIC,IACbkD,EAAiB,SAAA5C,GAAK,OAAIP,EAAOM,SAAS,CAAEC,WAC5C6C,EAAkB,SAAA3C,GAAS,OAC/BT,EAAOQ,UAAU,CACfC,eAEEQ,EAAO,SAAAC,GAAM,OAAIlB,EAAOiB,KAAK,CAAEC,YAErC,aAAAmC,OAAcF,EAAe,GAA7B,iBAAAE,OACSD,EAAgB,IADzB,sEAAAC,OAE8DpC,EACxD,IAHN,sCAAAoC,OAKgBF,EAAe,GAL/B,gEAAAE,OAOYF,EAAe,GAP3B,gBAAAE,OAQQD,EAAgB,GARxB,gBAAAC,OASQpC,IATR,KAAAoC,OASkBpC,IATlB,mBAAAoC,OAUUpC,IAVV,kBAAAoC,OAWUpC,IAXV,kBAAAoC,OAYUpC,IAZV,oBAAAoC,OAaYF,EAAe,GAb3B,ohBArCEzC,EA0EG4C,sBAAwB,SAAAC,GAAc,OAC3C,IAAIC,IAASC,UAAU,CAAEC,YAAY,IAAQC,SAASJ,IA3EpD7C,EA6EGkD,6BAA+B,WACpCC,SAASC,iBAAiB,YAAYC,QAAQ,SAAAC,GAC5CC,IAAKC,eAAeF,MA/EpBtD,EAmFGyD,wBAA0B,SAAAC,GAAI,MAAK,CACxC3F,GAAI2F,EAAK3F,GACTC,MAAO0F,EAAK1F,MACZC,iBAAkByF,EAAKzF,iBACvBC,KAAMwF,EAAKxF,KACXC,OAAQuF,EAAKvF,OACbC,KAAMhB,EAASS,UAAU8F,UAAUC,SAASF,EAAKtF,MACjDC,KAAMqF,EAAKrF,KACXC,UAAWoF,EAAKpF,YA3Fd0B,EA8FG6D,wBAA0B,SAAAC,GAAY,OAC3C,IAAIhG,EACFgG,EAAa/F,GACb+F,EAAa9F,MACb8F,EAAa7F,iBACb6F,EAAa5F,KACb4F,EAAa3F,OACb2F,EAAa1F,KAAK2F,SAClBD,EAAazF,KACbyF,EAAaxF,YAvGb0B,EA8GGgE,oBAAsB,SAAAC,IAC3B,IAAI/E,GACDyB,MAAMsD,GACNC,KAAK,SAAAC,GACJA,EAAMd,QAAQ,SAAAK,GACZ9F,EACGwG,WAAW,SACXC,IAAIX,EAAK3F,IACTuG,IAAItE,EAAUyD,wBAAwBC,IACtCa,MAAM,SAAAC,GAAK,OACVC,QAAQD,MAAM,kCAAmCA,SAIxDD,MAAM,SAAAG,GAAG,OAAID,QAAQE,IAAID,MAIjB1E,QCvIT4E,sCACGC,oBAAsB,SAAAV,GAAK,OAChCA,EAAMW,KAAK,SAAChD,EAAGE,GAAJ,OAAU,IAAI+C,KAAK/C,EAAE5D,MAAQ,IAAI2G,KAAKjD,EAAE1D,SAFjDwG,EAIGI,oBAAsB,SAAAb,GAC3B,IAAMc,EAAU3D,MAAMC,KAAK4C,EAAMtC,IAAI,SAAA6B,GAAI,OAAIA,EAAKrF,OAAM6G,QAClDC,EAAa7D,MAAMC,KAAK,IAAI6D,IAAIH,IAElCI,EAAqB,GASzB,OARAF,EAAW9B,QAAQ,SAAAiC,GAAS,OAC1BD,EAAmB3F,KAAK,CACtB6F,KAAMD,EACNjG,SAAU4F,EAAQzD,OAAO,SAAAgE,GAAG,OAAIA,IAAQF,IAAW9E,OACnDiF,OAAO,MAIJJ,GAjBLT,EAoBGc,eAAiB,SAACC,EAAStH,GAChC,IAAImH,EAAMnH,EAAKuH,KAAK,SAAAJ,GAAG,OAAIA,EAAID,OAASI,IAExC,OADAH,EAAIC,OAASD,EAAIC,MACVpH,GAvBLuG,EA0BGiB,cAAgB,SAAC1B,EAAO2B,GAC7B,IAAMzH,EAAOyH,EAAQzH,KACf0H,EAAQD,EAAQC,MAChBC,EAAcF,EAAQE,YAExBC,EAAW,GACTC,EAAiB7H,EAAKmD,OAAO,SAAAgE,GAAG,OAAIA,EAAIC,QAAO5D,IAAI,SAAA2D,GAAG,OAAIA,EAAID,OACpEU,EAAW9B,EAAM3C,OACf,SAAAkC,GAAI,OAEF1D,EAAU0B,oCACRgC,EAAKrF,KACL6H,IAGFxC,EAAK1F,MAAMmI,cAAcC,SAASJ,EAAYG,iBAIlD,IAAIE,EAAkBN,EACnBvE,OAAO,SAAApD,GAAI,OAAIA,EAAKkI,YACpBzE,IAAI,SAAAzD,GAAI,OAAIA,EAAKgC,OACW,IAA3BiG,EAAgB7F,SAClByF,EAAWA,EAASzE,OAAO,SAAAkC,GAAI,OAC7B1D,EAAU0B,oCAAoC2E,EAAiB,CAC7D3C,EAAKtF,KAAKmI,mBAMhB,IAAIC,EAAmBT,EACpBlE,IAAI,SAAAzD,GAAI,OACPA,EAAKqI,OACF5E,IAAI,SAAA6E,GAAK,MAAK,CACbtG,KAAMhC,EAAKgC,KACXsG,MAAOA,EAAMnB,KACbE,MAAOiB,EAAMjB,SAEdP,SAEJA,OACA1D,OAAO,SAAAkF,GAAK,OAAIA,EAAMjB,QAYzB,OAXgC,IAA5Be,EAAiBhG,SACnByF,EAAWA,EAASzE,OAClB,SAAAkC,GAAI,OACF8C,EAAiBzE,KACf,SAAA4E,GAAI,OAAIA,EAAKvG,OAASsD,EAAKtF,KAAKmI,iBAElCC,EAAiBzE,KACf,SAAA4E,GAAI,OAAIA,EAAKD,QAAU9B,EAAcgC,kBAAkBlD,EAAKtF,WAI7DwG,EAAcC,oBAAoBoB,IAhFvCrB,EAmFGiC,qBAAuB,SAAA1C,GAC5B,IAAM2C,EAAQxF,MAAMC,KAClB,IAAI6D,IAAIjB,EAAMtC,IAAI,SAAA6B,GAAI,OAAIA,EAAKtF,KAAKmI,kBAGlCQ,EAAkB,GAkBtB,OAjBAD,EAAMzD,QAAQ,SAAAjD,GAAI,OAChB2G,EAAgBrH,KAAK,CACnBU,KAAMA,EACNkG,WAAW,EACXG,OAAQnF,MAAMC,KACZ,IAAI6D,IACFjB,EACG3C,OAAO,SAAAkC,GAAI,OAAIA,EAAKtF,KAAKmI,gBAAkBnG,IAC3CyB,IAAI,SAAA6B,GAAI,OAAIkB,EAAcgC,kBAAkBlD,EAAKtF,UAEtDyD,IAAI,SAAA6E,GAAK,MAAK,CACdnB,KAAMmB,EACNrH,SAAUuF,EAAcoC,oBAAoB7C,EAAOuC,EAAOtG,GAC1DqF,OAAO,SAINsB,GA1GLnC,EA6GGoC,oBAAsB,SAAC7C,EAAOuC,EAAOtG,GAAf,OAC3B+D,EAAM3C,OACJ,SAAAkC,GAAI,OACFA,EAAKtF,KAAKmI,gBAAkBnG,GAC5BwE,EAAcgC,kBAAkBlD,EAAKtF,QAAUsI,IACjDlG,QAlHAoE,EAoHGgC,kBAAoB,SAAAxI,GAAI,OAC7BA,EAAK6I,eAAe,QAAS,CAAEP,MAAO,UArHpC9B,EAuHGsC,gBAAkB,SAACC,EAAcC,GACtC,QAA2B/F,IAAvB8F,EAAaT,MAAqB,CACpC,IAAItI,EAAOgJ,EAAaxB,KAAK,SAAAxH,GAAI,OAAIA,EAAKgC,OAAS+G,EAAa/G,OAChEhC,EAAKkI,WAAalI,EAAKkI,UAEvBc,EAAa/D,QAAQ,SAAAjF,GAAI,OACvBA,EAAKqI,OAAOpD,QAAQ,SAAAqD,GAAK,OAAKA,EAAMjB,OAAQ,UAEzC,CACL,IAAIiB,EAAQU,EACTxB,KAAK,SAAAxH,GAAI,OAAIA,EAAKgC,OAAS+G,EAAa/G,OACxCqG,OAAOb,KAAK,SAAAc,GAAK,OAAIA,EAAMnB,OAAS4B,EAAaT,QACpDA,EAAMjB,OAASiB,EAAMjB,MAErB2B,EAAa/D,QAAQ,SAAAjF,GAAI,OAAKA,EAAKkI,WAAY,IAEjD,OAAOc,GAvILxC,EA0IGyC,aAAe,SAAAvB,GACpB,IAAIwB,EAAU/I,OAAOgJ,OAAO,GAAIzB,GAOhC,OANAwB,EAAQjJ,KAAKgF,QAAQ,SAAAmC,GAAG,OAAKA,EAAIC,OAAQ,IACzC6B,EAAQvB,MAAM1C,QAAQ,SAAAjF,GAAI,OAAKA,EAAKkI,WAAY,IAChDgB,EAAQvB,MAAM1C,QAAQ,SAAAjF,GAAI,OACxBA,EAAKqI,OAAOpD,QAAQ,SAAAqD,GAAK,OAAKA,EAAMjB,OAAQ,MAE9C6B,EAAQtB,YAAc,GACfsB,GAII1C,QCnHT4C,EAAe,CACnBnJ,KAAM,GACN0H,MAAO,GACPC,YAAa,IAwDAyB,cAAgB,CAC7BtD,MAtFY,WAAwB,IAAvBsB,EAAuBiC,UAAAlH,OAAA,QAAAa,IAAAqG,UAAA,GAAAA,UAAA,GAAf,GAAIC,EAAWD,UAAAlH,OAAA,EAAAkH,UAAA,QAAArG,EACpC,OAAQsG,EAAOC,MACb,IAAK,wBACH,MAAO,CACLC,KAAKtJ,OAAAuJ,EAAA,EAAAvJ,CAAKqG,EAAcC,oBAAoB8C,EAAOxD,QACnD4D,cAAe,MAEnB,IAAK,sBACH,MAAO,CACLF,KAAM,GACNE,cAAeJ,EAAOI,eAE1B,QACE,OAAOtC,IA0EXuC,cAtE2B,WAAwB,IAAvBvC,EAAuBiC,UAAAlH,OAAA,QAAAa,IAAAqG,UAAA,GAAAA,UAAA,GAAf,GAAIC,EAAWD,UAAAlH,OAAA,EAAAkH,UAAA,QAAArG,EACnD,OAAQsG,EAAOC,MACb,IAAK,eACH,OAAOrJ,OAAAuJ,EAAA,EAAAvJ,CAAIqG,EAAciB,cAAc8B,EAAOxD,MAAOwD,EAAO7B,UAC9D,QACE,OAAOL,IAkEXK,QAxDc,WAAkC,IAAjCL,EAAiCiC,UAAAlH,OAAA,QAAAa,IAAAqG,UAAA,GAAAA,UAAA,GAAzBF,EAAcG,EAAWD,UAAAlH,OAAA,EAAAkH,UAAA,QAAArG,EAChD,OAAQsG,EAAOC,MACb,IAAK,cACH,OAAOrJ,OAAA0J,EAAA,EAAA1J,CAAA,GACFkH,EADL,CAEEpH,KAAKE,OAAAuJ,EAAA,EAAAvJ,CAAKqG,EAAcI,oBAAoB2C,EAAOxD,UAEvD,IAAK,aACH,OAAO5F,OAAA0J,EAAA,EAAA1J,CAAA,GACFkH,EADL,CAEEpH,KAAKE,OAAAuJ,EAAA,EAAAvJ,CAAKqG,EAAcc,eAAeiC,EAAOhC,QAASF,EAAMpH,SAEjE,IAAK,eACH,OAAOE,OAAA0J,EAAA,EAAA1J,CAAA,GACFkH,EADL,CAEEM,MAAMxH,OAAAuJ,EAAA,EAAAvJ,CAAKqG,EAAciC,qBAAqBc,EAAOxD,UAEzD,IAAK,oBACH,OAAO5F,OAAA0J,EAAA,EAAA1J,CAAA,GACFkH,EADL,CAEEM,MAAMxH,OAAAuJ,EAAA,EAAAvJ,CAAKqG,EAAcsC,gBAAgBS,EAAOvJ,KAAMqH,EAAMM,UAEhE,IAAK,sBACH,OAAOxH,OAAA0J,EAAA,EAAA1J,CAAA,GACFkH,EADL,CAEEO,YAAa2B,EAAOvG,QAExB,IAAK,gBACH,OAAOwD,EAAcyC,aAAaM,EAAO7B,SAC3C,QACE,OAAOL,IA2BXyC,KAvBW,WAAwB,IAAvBzC,EAAuBiC,UAAAlH,OAAA,QAAAa,IAAAqG,UAAA,GAAAA,UAAA,GAAf,GAAIC,EAAWD,UAAAlH,OAAA,EAAAkH,UAAA,QAAArG,EACnC,OAAQsG,EAAOC,MACb,IAAK,YACH,OAAOrJ,OAAA0J,EAAA,EAAA1J,CAAA,GACFkH,EADL,CAEE0C,WAAYR,EAAOQ,WACnBC,aAAcT,EAAOS,eAEzB,IAAK,oBACH,OAAO7J,OAAA0J,EAAA,EAAA1J,CAAA,GACFkH,EADL,CAEE4C,YAAaV,EAAOU,YACpB/F,MAAOqF,EAAOrF,QAElB,QACE,OAAOmD,MCnEA6C,EAAa,kBAAM,SAACC,EAAUC,GNNzC5K,EACGwG,WAAW,SACXqE,MACAvE,KAAK,SAAAwE,GAAa,OACjBA,EAAcC,KAAK9G,IAAI,SAAAwC,GAAG,OACxBrE,EAAU6D,wBAAwBQ,EAAIwD,YAGzCtD,MACC,SAAAC,GAAK,OAAI,IAAI9D,MAAM,8CAA+C8D,KMDnEN,KAAK,SAAAC,GACJoE,EAbe,SAAApE,GAAK,MAAK,CAC7ByD,KAAM,wBACNzD,SAWayE,CAAazE,IACtBoE,EAASM,EAAW1E,IACpBoE,EAASO,EAAY3E,IACrBoE,EAASQ,EAAY5E,EAAOqE,IAAW1C,YAExCvB,MAAM,SAAAC,GAAK,OAAI+D,EAbwB,CAC1CX,KAAM,sBACNG,cAW6CvD,QAOlCuE,EAAc,SAAC5E,EAAO2B,GAAR,MAAqB,CAC9C8B,KAAM,eACNzD,QACA2B,YAGW+C,EAAa,SAAA1E,GAAK,MAAK,CAClCyD,KAAM,cACNzD,UAQW2E,EAAc,SAAA3E,GAAK,MAAK,CACnCyD,KAAM,eACNzD,UAkBW6E,EAAW,SAACb,EAAYC,GAAb,MAA+B,CACrDR,KAAM,YACNO,aACAC,iBAGWa,EAAkB,SAACZ,EAAa/F,GAAd,MAAyB,CACtDsF,KAAM,oBACNS,cACA/F,qICnDa4G,8MA5BbC,4BAA8B,SAAAC,GAC5B,IAAMhI,EAAQgI,EAAMC,OAAOjI,MAC3BjC,EAAKmK,MAAMC,kBAAkBnI,GAE7B,IAAI0E,EAAUvH,OAAOgJ,OAAO,GAAIpI,EAAKmK,MAAMxD,SAC3CA,EAAQE,YAAc5E,EACtBjC,EAAKmK,MAAMP,YAAY5J,EAAKmK,MAAMnF,MAAO2B,4EAIzC,OACE0D,EAAA1H,EAAA2H,cAACC,EAAA,EAAD,CAAMC,QAAM,GACVH,EAAA1H,EAAA2H,cAACG,EAAA,EAAD,CAAMC,GAAIC,GAAa,WACrBN,EAAA1H,EAAA2H,cAACM,EAAA,EAAD,CACEC,UAAU,UACVzE,KAAK,SACLqC,KAAK,OACLxG,MAAO3C,KAAK6K,MAAMxD,QAAQE,YAC1BiE,YAAY,SACZC,SAAUzL,KAAK0K,+BAGnBK,EAAA1H,EAAA2H,cAAA,KAAGO,UAAU,0BAvBIG,aCInBC,GAAqB,CAAErB,cAAaQ,kBFyDT,SAAAnI,GAAK,MAAK,CACzCwG,KAAM,sBACNxG,WEzDWiJ,GAAsBC,YAPX,SAAA7E,GAAK,MAAK,CAChCtB,MAAOsB,EAAMtB,MAAM0D,KACnB/B,QAASL,EAAMK,UAOfsE,GAFiCE,CAGjCpB,uBCwEaqB,eAlFb,SAAAA,EAAYjB,GAAO,IAAAnK,EAAA,OAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAA8L,IACjBpL,EAAAZ,OAAAiM,EAAA,EAAAjM,CAAAE,KAAAF,OAAAkM,EAAA,EAAAlM,CAAAgM,GAAAG,KAAAjM,KAAM6K,KAaRqB,aAAe,WACbxL,EAAKmK,MAAMsB,OAAOzL,EAAKsG,MAAMoF,SAASvI,MAAOnD,EAAKsG,MAAMoF,SAASC,WAfhD3L,EAkBnB4L,sBAAwB,WACtB5L,EAAKmK,MAAM0B,oBAnBM7L,EAsBnB8L,sBAAwB,SAAA/I,GACtB,IAAMgJ,EAAahJ,EAAEmH,OAAO9D,KACtB4F,EAAcjJ,EAAEmH,OAAOjI,MAC7BjC,EAAKiM,SAAS,iBAAO,CACnBP,SAAStM,OAAA0J,EAAA,EAAA1J,CAAA,GACJY,EAAKsG,MAAMoF,SADRtM,OAAA8M,GAAA,EAAA9M,CAAA,GAEL2M,EAAaC,QA1BlBhM,EAAKsG,MAAQ,CACXoF,SAAU,CACRvI,MAAO,GACPwI,SAAU,KALG3L,sHAkCjB,OACEqK,EAAA1H,EAAA2H,cAAC6B,GAAA,EAAD,CACEC,KAAM9M,KAAK6K,MAAMkC,gBACjBC,OAAQhN,KAAK6K,MAAM0B,iBACnBU,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,GAERpC,EAAA1H,EAAA2H,cAAC6B,GAAA,EAAMO,OAAP,CAAcC,aAAW,GACvBtC,EAAA1H,EAAA2H,cAAC6B,GAAA,EAAMS,MAAP,CAAahO,GAAG,iCAAhB,YAEFyL,EAAA1H,EAAA2H,cAAC6B,GAAA,EAAMU,KAAP,KACExC,EAAA1H,EAAA2H,cAACC,EAAA,EAAD,CAAMM,UAAU,QACdR,EAAA1H,EAAA2H,cAACC,EAAA,EAAKuC,MAAN,KACEzC,EAAA1H,EAAA2H,cAACC,EAAA,EAAKwC,QAAN,CACE3G,KAAK,QAELqC,KAAK,OACLqC,YAAY,QACZkC,UAAQ,EACRjC,SAAUzL,KAAKwM,yBAGnBzB,EAAA1H,EAAA2H,cAACC,EAAA,EAAKuC,MAAN,KACEzC,EAAA1H,EAAA2H,cAACC,EAAA,EAAKwC,QAAN,CACE3G,KAAK,WAELqC,KAAK,WACLqC,YAAY,WACZkC,UAAQ,EACRjC,SAAUzL,KAAKwM,yBAGnBzB,EAAA1H,EAAA2H,cAAC2C,EAAA,EAAD,CAAKpC,UAAU,oBACbR,EAAA1H,EAAA2H,cAAC4C,EAAA,EAAD,KACE7C,EAAA1H,EAAA2H,cAAC6C,EAAA,EAAD,CAAQC,QAAS9N,KAAKsM,uBAAtB,SAEFvB,EAAA1H,EAAA2H,cAAC4C,EAAA,EAAD,KACE7C,EAAA1H,EAAA2H,cAAC6C,EAAA,EAAD,CAAQC,QAAS9N,KAAKkM,cAAtB,kBAzESR,aCKnBC,GAAqB,CAAEQ,OJgFP,SAACtI,EAAOwI,GAAR,OAAqB,SAAAvC,GAAQ,ONjDT,SAACjG,EAAOwI,GAAR,OACxC1N,IAAS8K,OAAOsE,2BAA2BlK,EAAOwI,GMiDlD0B,CAA2BlK,EAAOwI,GAC/B5G,KAAK,kBAAMqE,EAASS,GAAS,EAAM,OACnC9E,KAAK,kBNjD2B,WACnC,IAAMuI,EAAOrP,IAAS8K,OAAOwE,YACvBC,EAAYF,EAAKnK,MACjB+F,EAAcoE,EAAKpE,YAGzB,MAAO,CACL9C,KAFgB,OAAhB8C,EAAuBrI,EAAUqC,eAAesK,GAAatE,EAG7D/F,MAAOqK,GMyCKC,KACX1I,KAAK,SAAA2D,GAAI,OAAIU,EAASU,EAAgBpB,EAAKtC,KAAMsC,EAAKvF,UACtDiC,MAAM,SAAAC,GAAK,OAAI+D,EAASS,GAAS,EAAOxE,EAAMqI,eInFtCC,GAAsBxC,YANX,SAAA7E,GAAK,MAAK,CAChCA,MAAOA,IAOP2E,GAFiCE,CAGjCC,ICuDawC,eA5Db,SAAAA,EAAYzD,GAAO,IAAAnK,EAAA,OAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAAsO,IACjB5N,EAAAZ,OAAAiM,EAAA,EAAAjM,CAAAE,KAAAF,OAAAkM,EAAA,EAAAlM,CAAAwO,GAAArC,KAAAjM,KAAM6K,KAIR0D,gBAAkB,WAChB7N,EAAKmK,MAAMjC,aAAalI,EAAKmK,MAAMxD,SACnC3G,EAAKmK,MAAMP,YAAY5J,EAAKmK,MAAMnF,MAAO,CACvC9F,KAAM,GACN0H,MAAO,GACPC,YAAa,MAVE7G,EAcnB8N,kBAAoB,WACd9N,EAAKmK,MAAMpB,KAAKC,WAClBhJ,EAAKmK,MAAM4D,UAEX/N,EAAKiM,SAAS,CAAEI,iBAAiB,KAlBlBrM,EAsBnB4L,sBAAwB,WACtB5L,EAAKiM,SAAS,CAAEI,iBAAiB,KArBjCrM,EAAKsG,MAAQ,CAAE+F,iBAAiB,GAFfrM,wEA2BjB,OACEqK,EAAA1H,EAAA2H,cAAC0D,EAAA,EAAD,CAAUC,GAAG,OAAOC,QAAQ,OAAOrD,UAAU,0BAC3CR,EAAA1H,EAAA2H,cAAC6D,EAAA,EAAD,KACE9D,EAAA1H,EAAA2H,cAACG,EAAA,EAAD,CAAMC,GAAIC,GAAa,IAAKyC,QAAS9N,KAAKuO,iBACxCxD,EAAA1H,EAAA2H,cAAC0D,EAAA,EAASI,MAAV,CAAgBvD,UAAU,QAA1B,SAEFR,EAAA1H,EAAA2H,cAACY,GAAD,MACC5L,KAAK6K,MAAMpB,KAAKC,YACfqB,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,cACZ,UAAYvL,KAAK6K,MAAMpB,KAAKG,aAGjCmB,EAAA1H,EAAA2H,cAACC,EAAA,EAAD,CAAMC,QAAM,GACVH,EAAA1H,EAAA2H,cAACG,EAAA,EAAD,CAAMC,GAAIC,GAAa,YACrBN,EAAA1H,EAAA2H,cAAC6C,EAAA,EAAD,CAAQe,QAAQ,qBAAhB,aAEF7D,EAAA1H,EAAA2H,cAAC6C,EAAA,EAAD,CACEe,QAAQ,oBACRd,QAAS9N,KAAKwO,mBAEbxO,KAAK6K,MAAMpB,KAAKC,WAAa,WAAa,YAG/CqB,EAAA1H,EAAA2H,cAACqD,GAAD,CACEtB,gBAAiB/M,KAAKgH,MAAM+F,gBAC5BR,iBAAkBvM,KAAKsM,iCArDdZ,aCGfC,GAAqB,CAAE/C,aN6DD,SAAAvB,GAAO,MAAK,CACtC8B,KAAM,gBACN9B,YM/DyCoH,QNqFpB,kBAAM,SAAA3E,GAAQ,ONzCJnL,IAAS8K,OAAOgF,UM2C5ChJ,KAAK,kBAAMqE,EAASS,GAAS,EAAO,OACpC9E,KAAK,kBAAMqE,EAASU,EAAgB,GAAI,SMxFOF,eAEvCyE,GAAkBlD,YARP,SAAA7E,GAAK,MAAK,CAChCtB,MAAOsB,EAAMtB,MAAM0D,KACnB/B,QAASL,EAAMK,QACfoC,KAAMzC,EAAMyC,OAOZkC,GAF6BE,CAG7ByC,ICFaU,oLARX,OACEjE,EAAA1H,EAAA2H,cAAC6D,EAAA,EAAD,KACE9D,EAAA1H,EAAA2H,cAAA,8BAJcU,uBC+CPuD,8MA5CbC,WAAa,SAACvE,EAAOzD,GACnBxG,EAAKmK,MAAM5D,eAAeC,GAC1BxG,EAAKmK,MAAMP,YAAY5J,EAAKmK,MAAMnF,MAAOhF,EAAKmK,MAAMxD,SACpDsD,EAAMwE,oBAGRF,KAAO,WACL,IAAMrP,EAAOc,EAAKmK,MAAMxD,QAAQzH,KAChC,OAAOA,EAAKmC,OAAS,EACjBnC,EAAKwD,IAAI,SAAA2D,GAAG,OACVgE,EAAA1H,EAAA2H,cAAA,OACEO,UAAU,kBACV6D,IAAKrI,EAAID,KACTgH,QAAS,SAAAnD,GAAK,OAAIjK,EAAKwO,WAAWvE,EAAO5D,EAAID,QAE7CiE,EAAA1H,EAAA2H,cAACG,EAAA,EAAD,CAAMC,GAAIC,GAAa,WACpBtE,EAAID,KACJC,EAAIC,MACH+D,EAAA1H,EAAA2H,cAAA,KAAGO,UAAU,6BAEbR,EAAA1H,EAAA2H,cAACqE,GAAA,EAAD,CAAOT,QAAQ,YAAYrD,UAAU,QAClCxE,EAAInG,cAMf,4EAIJ,OACEmK,EAAA1H,EAAA2H,cAAC6D,EAAA,EAAD,KACE9D,EAAA1H,EAAA2H,cAAA,WACED,EAAA1H,EAAA2H,cAAA,kBACAD,EAAA1H,EAAA2H,cAAA,QAAMO,UAAU,oBACdR,EAAA1H,EAAA2H,cAAAhL,KAAMiP,KAAN,gBArCOvD,aCMbC,GAAqB,CAAE1E,eTwCC,SAAAC,GAAO,MAAK,CACxCiC,KAAM,aACNjC,YS1C2CoD,eAEhCgF,GAAgBzD,YATL,SAAA7E,GACtB,MAAO,CACLtB,MAAOsB,EAAMtB,MAAM0D,KACnB/B,QAASL,EAAMK,UAQjBsE,GAF2BE,CAG3BoD,ICkDaM,8MA5DbC,YAAc,SAAC7E,EAAOhJ,EAAMsG,GAC1BvH,EAAKmK,MAAMpC,gBAAgB,CAAE9G,OAAMsG,UACnCvH,EAAKmK,MAAMP,YAAY5J,EAAKmK,MAAMnF,MAAOhF,EAAKmK,MAAMxD,SACpDsD,EAAMwE,oBAGRM,MAAQ,WACN,IAAMnI,EAAQ5G,EAAKmK,MAAMxD,QAAQC,MACjC,OAAOA,EAAMvF,OAAS,EAClBuF,EAAMlE,IAAI,SAAAzD,GAAI,OACZoL,EAAA1H,EAAA2H,cAAA,MAAIoE,IAAKzP,EAAKgC,KAAM4J,UAAU,iBAC5BR,EAAA1H,EAAA2H,cAAA,OACEO,UAAU,aACVuC,QAAS,SAAAnD,GAAK,OAAIjK,EAAK8O,YAAY7E,EAAOhL,EAAKgC,QAE/CoJ,EAAA1H,EAAA2H,cAACG,EAAA,EAAD,CAAMC,GAAIC,GAAa,WACpB1L,EAAKgC,KACLhC,EAAKkI,UACJkD,EAAA1H,EAAA2H,cAAA,KAAGO,UAAU,6BAEb,KAIL5L,EAAKqI,OAAO5E,IAAI,SAAA6E,GAAK,OACpB8C,EAAA1H,EAAA2H,cAAA,MAAIoE,IAAKnH,EAAMnB,MACbiE,EAAA1H,EAAA2H,cAAA,OACEO,UAAU,aACVuC,QAAS,SAAAnD,GAAK,OACZjK,EAAK8O,YAAY7E,EAAOhL,EAAKgC,KAAMsG,EAAMnB,QAG3CiE,EAAA1H,EAAA2H,cAACG,EAAA,EAAD,CAAMC,GAAIC,GAAa,WACpBpD,EAAMnB,KACNmB,EAAMjB,MACL+D,EAAA1H,EAAA2H,cAAA,KAAGO,UAAU,6BAEbR,EAAA1H,EAAA2H,cAACqE,GAAA,EAAD,CAAOT,QAAQ,YAAYrD,UAAU,QAClCtD,EAAMrH,kBASvB,4EAIJ,OACEmK,EAAA1H,EAAA2H,cAAC6D,EAAA,EAAD,KACE9D,EAAA1H,EAAA2H,cAAA,2BACAD,EAAA1H,EAAA2H,cAAAhL,KAAMyP,MAAN,cAvDe/D,aCIjBC,GAAqB,CAAErB,cAAa7B,gBXoDX,SAAA9I,GAAI,MAAK,CACtCwJ,KAAM,oBACNxJ,UWpDW+P,GAAoB7D,YAPT,SAAA7E,GAAK,MAAK,CAChCtB,MAAOsB,EAAMtB,MAAM0D,KACnB/B,QAASL,EAAMK,UAOfsE,GAF+BE,CAG/B8D,ICUaC,oLAhBX,OACE7E,EAAA1H,EAAA2H,cAAC6D,EAAA,EAAD,KACE9D,EAAA1H,EAAA2H,cAAC2C,EAAA,EAAD,CAAKpC,UAAU,QACbR,EAAA1H,EAAA2H,cAAC6E,GAAD,OAEF9E,EAAA1H,EAAA2H,cAAC2C,EAAA,EAAD,CAAKpC,UAAU,QACbR,EAAA1H,EAAA2H,cAACsE,GAAD,OAEFvE,EAAA1H,EAAA2H,cAAC2C,EAAA,EAAD,CAAKpC,UAAU,QACbR,EAAA1H,EAAA2H,cAAC0E,GAAD,eAXchE,aC+CToE,oLA9CX,IAAM7K,EAAOjF,KAAK6K,MAAM5F,KAClB8K,EAAU1E,GAAa,YAAcpG,EAAK3F,GAChD,OACEyL,EAAA1H,EAAA2H,cAAC6D,EAAA,EAAD,CAAWtD,UAAU,QACnBR,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,aACbR,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,kBACbR,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,gDACbR,EAAA1H,EAAA2H,cAACG,EAAA,EAAD,CAAMC,GAAI2E,GACRhF,EAAA1H,EAAA2H,cAAA,OAAKgF,IAAK/K,EAAKpF,UAAW0L,UAAU,gBAAgB0E,IAAI,OAG5DlF,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,YACbR,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,aACbR,EAAA1H,EAAA2H,cAACG,EAAA,EAAD,CAAMC,GAAI2E,GACRhF,EAAA1H,EAAA2H,cAAA,MAAIO,UAAU,cAActG,EAAK1F,QAEnCwL,EAAA1H,EAAA2H,cAAA,KAAGO,UAAU,aACVtG,EAAKzF,iBAAiB0Q,UAAU,EAAG,KAAO,OAE7CnF,EAAA1H,EAAA2H,cAAA,QAAMO,UAAU,aACdR,EAAA1H,EAAA2H,cAAA,KAAGO,UAAU,mBACVtG,EAAKvF,OACJ,KACAuF,EAAKtF,KAAK6I,eAAe,QAAS,CAChC2H,IAAK,UACLlI,MAAO,UACPtG,KAAM,aAGZoJ,EAAA1H,EAAA2H,cAAA,KAAGO,UAAU,mBACVtG,EAAKrF,KAAKwD,IAAI,SAAA2D,GAAG,OAChBgE,EAAA1H,EAAA2H,cAAA,QAAMoE,IAAKrI,EAAKwE,UAAU,QACvBxE,mBAlCD2E,aC6BT0E,8MA7BbC,UAAY,WACV,OAAO3P,EAAKmK,MAAMtB,cAAcnG,IAAI,SAAA6B,GAAI,OACtC8F,EAAA1H,EAAA2H,cAACsF,GAAD,CAAoBlB,IAAKnK,EAAK3F,GAAI2F,KAAMA,SAI5CsL,YAAc,WACZ,OACExF,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,oBACbR,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,QACbR,EAAA1H,EAAA2H,cAAA,wGAON,OACED,EAAA1H,EAAA2H,cAAC6D,EAAA,EAAD,KACuC,IAApC7O,KAAK6K,MAAMtB,cAAcxH,OACxBgJ,EAAA1H,EAAA2H,cAAAhL,KAAMqQ,UAAN,MAEAtF,EAAA1H,EAAA2H,cAAAhL,KAAMuQ,YAAN,cAvBiB7E,aCGd8E,GAAwB3E,YAJb,SAAA7E,GAAK,MAAK,CAChCuC,cAAevC,EAAMuC,gBAGcsC,CAAyBuE,ICkC/CK,oLAnCX,IAAMxL,EAAOjF,KAAK6K,MAAM5F,KAClB8K,EAAU1E,GAAa,YAAcpG,EAAK3F,GAChD,OACEyL,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,QACbR,EAAA1H,EAAA2H,cAACG,EAAA,EAAD,CAAMC,GAAI2E,GACRhF,EAAA1H,EAAA2H,cAAA,OAAKgF,IAAK/K,EAAKpF,UAAW0L,UAAU,oBAAoB0E,IAAI,MAE9DlF,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,aACbR,EAAA1H,EAAA2H,cAACG,EAAA,EAAD,CAAMC,GAAI2E,GACRhF,EAAA1H,EAAA2H,cAAA,MAAIO,UAAU,cAActG,EAAK1F,SAGrCwL,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,eACbR,EAAA1H,EAAA2H,cAAA,KAAGO,UAAU,mBACVtG,EAAKvF,OACJ,KACAuF,EAAKtF,KAAK6I,eAAe,QAAS,CAChC2H,IAAK,UACLlI,MAAO,UACPtG,KAAM,aAGZoJ,EAAA1H,EAAA2H,cAAA,KAAGO,UAAU,mBACVtG,EAAKrF,KAAKwD,IAAI,SAAA2D,GAAG,OAChBgE,EAAA1H,EAAA2H,cAAA,QAAMoE,IAAKrI,EAAKwE,UAAU,QACvBxE,eA3Be2E,aCC1BgF,8MAGJC,UAAY,WACV,IAAMC,EAAYlQ,EAAKmK,MAAMtB,cAC1BzF,MAAM,EAAG4M,EAAUG,cACnBzN,IAAI,SAAA6B,GAAI,OAAI8F,EAAA1H,EAAA2H,cAAC8F,GAAD,CAAkB1B,IAAKnK,EAAK3F,GAAI2F,KAAMA,MACrD,OAAO8F,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,aAAaqF,MAGrCP,UAAY,WACV,OAAO3P,EAAKmK,MAAMtB,cACfzF,MAAM4M,EAAUG,cAChBzN,IAAI,SAAA6B,GAAI,OAAI8F,EAAA1H,EAAA2H,cAACsF,GAAD,CAAoBlB,IAAKnK,EAAK3F,GAAI2F,KAAMA,+EAIvD,OACE8F,EAAA1H,EAAA2H,cAAC6D,EAAA,EAAD,KACE9D,EAAA1H,EAAA2H,cAAA,0BACAD,EAAA1H,EAAA2H,cAAAhL,KAAM2Q,UAAN,MACA5F,EAAA1H,EAAA2H,cAAA,WACAD,EAAA1H,EAAA2H,cAAAhL,KAAMqQ,UAAN,cAtBgB3E,aAAlBgF,GACGG,aAAe,EA2BTH,UC1BFK,GAAqBlF,YAJV,SAAA7E,GAAK,MAAK,CAChCuC,cAAevC,EAAMuC,gBAGWsC,CAAyB6E,ICgC5CrR,8MA1Bb2R,cAAgB,WACd,IAAM/L,EAAOvE,EAAKmK,MAAMnF,MAAMyB,KAC5B,SAAAlC,GAAI,OAAIA,EAAK3F,KAAOoB,EAAKmK,MAAMoG,eAE3BxR,EAAO8B,EAAU4C,sBAAsBc,EAAKxF,MAClD,OACEsL,EAAA1H,EAAA2H,cAAA,WACED,EAAA1H,EAAA2H,cAAA,UAAK/F,EAAK1F,OACVwL,EAAA1H,EAAA2H,cAAA,SAAI/F,EAAKzF,kBACTuL,EAAA1H,EAAA2H,cAAA,OACEO,UAAU,eACV2F,wBAAyB,CAAEC,OAAQ1R,0FAlBzC8B,EAAUkD,4EAIVlD,EAAUkD,gEAqBV,OACEsG,EAAA1H,EAAA2H,cAAC6D,EAAA,EAAD,KACE9D,EAAA1H,EAAA2H,cAAAhL,KAAMgR,cAAN,cA7BWtF,aCGNsF,GAAgBnF,YAJL,SAAA7E,GAAK,MAAK,CAChCtB,MAAOsB,EAAMtB,MAAM0D,OAGQyC,CAAyBxM,ICuBvC+R,+LAzBX7P,EAAUkD,4EAIVlD,EAAUkD,gEAIV,OACEsG,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,QACbR,EAAA1H,EAAA2H,cAAA,0BACAD,EAAA1H,EAAA2H,cAAA,WACAD,EAAA1H,EAAA2H,cAAA,UAAKhL,KAAK6K,MAAMtL,OAChBwL,EAAA1H,EAAA2H,cAAA,SAAIhL,KAAK6K,MAAMrL,kBACfuL,EAAA1H,EAAA2H,cAAA,OACEO,UAAU,eACV2F,wBAAyB,CACvBC,OAAQ5P,EAAU4C,sBAAsBnE,KAAK6K,MAAMwG,uBAnBzC3F,uBCsFP4F,oLApFX,OACEvG,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,QACbR,EAAA1H,EAAA2H,cAAA,oDACAD,EAAA1H,EAAA2H,cAACuG,GAAA,EAAD,CAAOC,UAAQ,GACbzG,EAAA1H,EAAA2H,cAAA,aACED,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,mBACAD,EAAA1H,EAAA2H,cAAA,uBAGJD,EAAA1H,EAAA2H,cAAA,aACED,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,2BACAD,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,yBAGJD,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,4BACAD,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,yBAGJD,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,uBACAD,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,uBAGJD,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,sBACAD,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,wBAGJD,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,oBACAD,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,sBAGJD,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,gBACAD,EAAA1H,EAAA2H,cAAA,uCACAD,EAAA1H,EAAA2H,cAAA,gCACAD,EAAA1H,EAAA2H,cAAA,iBAEFD,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,WACED,EAAA1H,EAAA2H,cAAA,YACED,EAAA1H,EAAA2H,cAAA,uCACAD,EAAA1H,EAAA2H,cAAA,yEAQRD,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,sCACAD,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,OACEiF,IAAI,WACJD,IAAI,qDACJyB,MAAM,KACNC,OAAO,SAIb3G,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,UAAK,4BACLD,EAAA1H,EAAA2H,cAAA,UACED,EAAA1H,EAAA2H,cAAA,KAAG2G,KAAK,0BAAR,sCA5EajG,aC8KdkG,eAvKb,SAAAA,EAAY/G,GAAO,IAAAnK,EAAA,OAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAA4R,IACjBlR,EAAAZ,OAAAiM,EAAA,EAAAjM,CAAAE,KAAAF,OAAAkM,EAAA,EAAAlM,CAAA8R,GAAA3F,KAAAjM,KAAM6K,KAeRgH,yBAA2B,WACzB,IAAMC,EAAUpR,EAAKsG,MAAM+K,YAAYC,mBACvCtR,EAAKiM,SAAL7M,OAAA0J,EAAA,EAAA1J,CAAA,GACKY,EAAKsG,MADV,CAEE+K,YAAa,CAAEC,oBAAqBF,OApBrBpR,EAwBnBuR,mBAAqB,WACnB,IAAMC,GAA4BxR,EAAKsG,MAAM+K,YAC1CG,yBACG3S,EAAQ2S,EAA2B,gBAAkB,GACrD1S,EAAmB0S,EACrB,4BACA,GACEzS,EAAOyS,EACT3Q,EAAUC,8BACV,GAEJd,EAAKiM,SAAL7M,OAAA0J,EAAA,EAAA1J,CAAA,GACKY,EAAKsG,MADV,CAEEmL,UAAW,CACT5S,QACAC,mBACAC,QAEF4R,WAAY5R,EACZsS,YAAYjS,OAAA0J,EAAA,EAAA1J,CAAA,GACPY,EAAKsG,MAAM+K,YADL,CAETG,iCA7CaxR,EAkDnB0R,kBAAoB,SAAAzH,GAClB,IAAIlL,EAAOkL,EAAMC,OAAOjI,MAClB0O,EACkB,SAAtB1G,EAAMC,OAAO9D,KAAkBrH,EAAOiB,EAAKsG,MAAMqK,WACnD3Q,EAAKiM,SAAL7M,OAAA0J,EAAA,EAAA1J,CAAA,GACKY,EAAKsG,MADV,CAEEmL,UAAUrS,OAAA0J,EAAA,EAAA1J,CAAA,GACLY,EAAKsG,MAAMmL,UADPrS,OAAA8M,GAAA,EAAA9M,CAAA,GAEN6K,EAAMC,OAAO9D,KAAOrH,IAEvB4R,iBA5De3Q,EAgEnB2R,cAAgB,WACd3R,EAAKmK,MAAMyH,QACT,IAAIjT,EACF6B,MACAR,EAAKsG,MAAMmL,UAAU5S,MACrBmB,EAAKsG,MAAMmL,UAAU3S,iBACrBkB,EAAKsG,MAAMqK,WACX,WACA,IAAI/K,KACJ,CAAC,QAAS,cAAe,UACzB,wDA1Ea5F,EA+EnBuK,KAAO,WACL,OACEF,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,QACbR,EAAA1H,EAAA2H,cAAA,+BACAD,EAAA1H,EAAA2H,cAAA,WACAD,EAAA1H,EAAA2H,cAACC,EAAA,EAAD,CAAMM,UAAU,QACdR,EAAA1H,EAAA2H,cAACC,EAAA,EAAKuC,MAAN,KACEzC,EAAA1H,EAAA2H,cAACC,EAAA,EAAKwC,QAAN,CACE3G,KAAK,QACLnE,MAAOjC,EAAKsG,MAAMmL,UAAU5S,MAC5B4J,KAAK,OACLqC,YAAY,aACZkC,UAAQ,EACR6E,UAAU,KACV9G,SAAU/K,EAAK0R,qBAGnBrH,EAAA1H,EAAA2H,cAACC,EAAA,EAAKuC,MAAN,KACEzC,EAAA1H,EAAA2H,cAACC,EAAA,EAAKwC,QAAN,CACE3G,KAAK,mBACL0L,GAAG,WACH7P,MAAOjC,EAAKsG,MAAMmL,UAAU3S,iBAC5BgM,YAAY,oBACZkC,UAAQ,EACR+E,KAAK,IACLhH,SAAU/K,EAAK0R,qBAGnBrH,EAAA1H,EAAA2H,cAACC,EAAA,EAAKuC,MAAN,KACEzC,EAAA1H,EAAA2H,cAACC,EAAA,EAAKwC,QAAN,CACE3G,KAAK,OACL0L,GAAG,WACH7P,MAAOjC,EAAKsG,MAAMmL,UAAU1S,KAC5B+L,YAAY,YACZiH,KAAK,KACL/E,UAAQ,EACRjC,SAAU/K,EAAK0R,qBAGnBrH,EAAA1H,EAAA2H,cAACC,EAAA,EAAKuC,MAAN,KACEzC,EAAA1H,EAAA2H,cAAC6C,EAAA,EAAD,CAAQC,QAASpN,EAAK2R,eAAtB,WAvHS3R,EA8HnBgS,OAAS,WACP,OACE3H,EAAA1H,EAAA2H,cAAA,WACED,EAAA1H,EAAA2H,cAAA,iCACAD,EAAA1H,EAAA2H,cAAA,WACAD,EAAA1H,EAAA2H,cAAC4C,EAAA,EAAD,KACE7C,EAAA1H,EAAA2H,cAAC2C,EAAA,EAAD,CAAKpC,UAAU,QACbR,EAAA1H,EAAA2H,cAAA,mCACAD,EAAA1H,EAAA2H,cAAC6C,EAAA,EAAD,CAAQtC,UAAU,OAAOuC,QAASpN,EAAKmR,0BACpCnR,EAAKsG,MAAM+K,YAAYC,mBAAqB,OAAS,SAG1DjH,EAAA1H,EAAA2H,cAAC2C,EAAA,EAAD,CAAKpC,UAAU,QACbR,EAAA1H,EAAA2H,cAAA,6BACAD,EAAA1H,EAAA2H,cAAC6C,EAAA,EAAD,CAAQtC,UAAU,OAAOuC,QAASpN,EAAKuR,oBACpCvR,EAAKsG,MAAM+K,YAAYG,yBACpB,QACA,aA7IdxR,EAAKsG,MAAQ,CACXmL,UAAW,CACT5S,MAAO,GACPC,iBAAkB,GAClBC,KAAM,IAER4R,WAAY,GACZU,YAAa,CACXC,oBAAoB,EACpBE,0BAA0B,IAXbxR,wEAwJjB,OACEqK,EAAA1H,EAAA2H,cAAC6D,EAAA,EAAD,KACE9D,EAAA1H,EAAA2H,cAAAhL,KAAM0S,OAAN,MACC1S,KAAKgH,MAAM+K,YAAYC,oBAAsBjH,EAAA1H,EAAA2H,cAAC2H,GAAD,MAC9C5H,EAAA1H,EAAA2H,cAAAhL,KAAMiL,KAAN,MACAF,EAAA1H,EAAA2H,cAAC4H,GAAD,CACErT,MAAOS,KAAKgH,MAAMmL,UAAU5S,MAC5BC,iBAAkBQ,KAAKgH,MAAMmL,UAAU3S,iBACvC6R,WAAYrR,KAAKgH,MAAMqK,qBAjKX3F,aCAhBC,GAAqB,CAAE2G,QxB2BN,SAAArN,GAAI,OAAI,SAAA6E,INLG,SAAA7E,GAAI,OACpC9F,EACGwG,WAAW,SACXkN,IAAItR,EAAUyD,wBAAwBC,IACtCa,MACC,SAAAC,GAAK,OAAI,IAAI9D,MAAM,2CAA4C8D,MMCnE+M,CAAmB7N,GAAMQ,KAAK,kBAAMqE,EAASD,SwB5BTS,cAAaF,aAAYC,eAElD0I,GAAmBlH,YAPR,SAAA7E,GAAK,MAAK,CAChCtB,MAAOsB,EAAMtB,MACb2B,QAASL,EAAMK,UAOfsE,GAF8BE,CAG9B+F,ICoHaoB,eArHb,SAAAA,EAAYnI,GAAO,IAAAnK,EAAA,OAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAAgT,IACjBtS,EAAAZ,OAAAiM,EAAA,EAAAjM,CAAAE,KAAAF,OAAAkM,EAAA,EAAAlM,CAAAkT,GAAA/G,KAAAjM,KAAM6K,KA6BRoI,eAAiB,WACf,OACElI,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,oBACbR,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,QACbR,EAAA1H,EAAA2H,cAAA,4CACAD,EAAA1H,EAAA2H,cAAA,6BAAqBtK,EAAKsG,MAAMjB,MAAMqI,QAAtC,QAnCW1N,EAyCnBwS,cAAgB,WACd,IAAMvP,EAAejD,EAAKyS,aAAaC,UACrC,SAAAC,GAAC,OAAIA,IAAM3S,EAAKsG,MAAMsM,cASxB,OAPAC,WAAW,WACTvN,QAAQE,IAAI,QACZxF,EAAKiM,SAAS,CACZ2G,YAAa/R,EAAUmC,cAAchD,EAAKyS,aAAcxP,MAEzD,KAGDoH,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,kBACbR,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,yEACbR,EAAA1H,EAAA2H,cAAC2C,EAAA,EAAD,CAAKpC,UAAU,aACbR,EAAA1H,EAAA2H,cAAC4C,EAAA,EAAD,KACE7C,EAAA1H,EAAA2H,cAAA,UAAKtK,EAAKsG,MAAMsM,YAAX,OAGTvI,EAAA1H,EAAA2H,cAAA,OAAKO,UAAU,mBA5DJ7K,EAkEnB8S,cAAgB,WACd,OACEzI,EAAA1H,EAAA2H,cAACyI,EAAA,EAAD,KACE1I,EAAA1H,EAAA2H,cAAA,WACED,EAAA1H,EAAA2H,cAAC+D,GAAD,MACAhE,EAAA1H,EAAA2H,cAAC6D,EAAA,EAAD,KACE9D,EAAA1H,EAAA2H,cAAC2C,EAAA,EAAD,CAAKpC,UAAU,QACbR,EAAA1H,EAAA2H,cAAC4C,EAAA,EAAD,CAAK8F,GAAI,GACP3I,EAAA1H,EAAA2H,cAAC2I,GAAD,OAEF5I,EAAA1H,EAAA2H,cAAC4C,EAAA,EAAD,CAAK8F,GAAI,GACP3I,EAAA1H,EAAA2H,cAAC4I,EAAA,EAAD,KACE7I,EAAA1H,EAAA2H,cAAC6I,EAAA,EAAD,CACEC,OAAK,EACLC,KAAM1I,GAAa,IACnB2I,UAAWjD,KAEbhG,EAAA1H,EAAA2H,cAAC6I,EAAA,EAAD,CACEE,KAAM1I,GAAa,UACnB2I,UAAWxD,KAEbzF,EAAA1H,EAAA2H,cAAC6I,EAAA,EAAD,CACEE,KAAM1I,GAAa,eACnB2I,UAAW,SAAAC,GAAK,OACdlJ,EAAA1H,EAAA2H,cAACgG,GAAD,CAAeC,aAAcgD,EAAMC,MAAMC,OAAO7U,QAGpDyL,EAAA1H,EAAA2H,cAAC6I,EAAA,EAAD,CACEE,KAAM1I,GAAa,WACnB2I,UAAWjB,YA7F3BrS,EAAKyS,aAAe,CAClB,kCACA,6BACA,yBACA,oBACA,qCAEFzS,EAAKsG,MAAQ,CACXjB,MAAO,KACPuN,YAAa/R,EAAUK,gBAAgBlB,EAAKyS,eAX7BzS,mFAgBjBV,KAAK6K,MAAMhB,wDAIMuK,GAEHpU,KAAK6K,MAAMnF,QACX0O,EAAU1O,OACtB1F,KAAK2M,SAAS,CACZ5G,MAAO/F,KAAK6K,MAAMnF,MAAM4D,iDAkF5B,OAAgC,IAA5BtJ,KAAK6K,MAAMnF,MAAM3D,QAAqC,OAArB/B,KAAKgH,MAAMjB,MACvCgF,EAAA1H,EAAA2H,cAAAhL,KAAMwT,cAAN,MACuB,OAArBxT,KAAKgH,MAAMjB,MACbgF,EAAA1H,EAAA2H,cAAAhL,KAAMiT,eAAN,MAEAlI,EAAA1H,EAAA2H,cAAAhL,KAAMkT,cAAN,aAjHKxH,aCHZC,GAAqB,CAAE9B,aAAYS,cAAaF,aAAYC,eAErDgK,GAAexI,YAPJ,SAAA7E,GAAK,MAAK,CAChCtB,MAAOsB,EAAMtB,MACb2B,QAASL,EAAMK,UAOfsE,GAF0BE,CAG1BmH,ICFkBsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASP,MACvB,kEClBNQ,EAAAC,EAAAC,EAAA,+BAAAvJ,KAUO,IAAMA,GAAawJ,oBAEpBC,GAAQC,YAAYC,EAAaC,YAAgBC,MAEvDX,OAAOO,MAAQA,GAEfK,IAASC,OACPrK,EAAA1H,EAAA2H,cAACqK,EAAA,EAAD,CAAUP,MAAOA,IACf/J,EAAA1H,EAAA2H,cAACqJ,GAAD,OAEF3P,SAAS4Q,eAAe,SD6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhQ,KAAK,SAAAiQ,GACjCA,EAAaC","file":"static/js/main.7985ea44.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport DataUtils from \"./dataUtils\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBU_CK4oTRzwPIOjZWQn8tpF5kOcnESnps\",\r\n  authDomain: \"twistezo-blog.firebaseapp.com\",\r\n  databaseURL: \"https://twistezo-blog.firebaseio.com\",\r\n  projectId: \"twistezo-blog\",\r\n  storageBucket: \"twistezo-blog.appspot.com\",\r\n  messagingSenderId: \"1065707028990\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\nexport const firebaseFirestore = firebase.firestore();\r\n\r\nexport const fetchPostsFromFirestore = () =>\r\n  firebaseFirestore\r\n    .collection(\"posts\")\r\n    .get()\r\n    .then(querySnapshot =>\r\n      querySnapshot.docs.map(doc =>\r\n        DataUtils.firestorePostObjToJsOjb(doc.data())\r\n      )\r\n    )\r\n    .catch(\r\n      error => new Error(\"Errow while fetching posts. Error message: \", error)\r\n    );\r\n\r\nexport const addPostToFirestore = post =>\r\n  firebaseFirestore\r\n    .collection(\"posts\")\r\n    .add(DataUtils.jsPostObjToFirestoreObj(post))\r\n    .catch(\r\n      error => new Error(\"Errow while adding post. Error message: \", error)\r\n    );\r\n\r\nexport const signInWithEmailAndPassword = (email, password) =>\r\n  firebase.auth().signInWithEmailAndPassword(email, password);\r\n\r\nexport const fetchSignedInUserData = () => {\r\n  const user = firebase.auth().currentUser;\r\n  const userEmail = user.email;\r\n  const displayName = user.displayName;\r\n  const newDisplayName =\r\n    displayName === null ? DataUtils.getEmailPrefix(userEmail) : displayName;\r\n  return {\r\n    name: newDisplayName,\r\n    email: userEmail\r\n  };\r\n};\r\n\r\nexport const signOutUser = () => firebase.auth().signOut();\r\n","class Post {\r\n  constructor(\r\n    id,\r\n    title,\r\n    shortDescription,\r\n    text,\r\n    author,\r\n    date,\r\n    tags,\r\n    mainImage\r\n  ) {\r\n    this._id = id;\r\n    this._title = title;\r\n    this._shortDescription = shortDescription;\r\n    this._text = text;\r\n    this._author = author;\r\n    this._date = date;\r\n    this._tags = tags;\r\n    this._mainImage = mainImage;\r\n  }\r\n\r\n  get id() {\r\n    return this._id;\r\n  }\r\n\r\n  get title() {\r\n    return this._title;\r\n  }\r\n\r\n  get shortDescription() {\r\n    return this._shortDescription;\r\n  }\r\n\r\n  get text() {\r\n    return this._text;\r\n  }\r\n\r\n  get author() {\r\n    return this._author;\r\n  }\r\n\r\n  get date() {\r\n    return this._date;\r\n  }\r\n\r\n  set date(date) {\r\n    this._date = date;\r\n  }\r\n\r\n  get tags() {\r\n    return this._tags;\r\n  }\r\n\r\n  get mainImage() {\r\n    return this._mainImage;\r\n  }\r\n}\r\n\r\nexport { Post };\r\n","import Chance from \"chance\";\r\nimport uuidv1 from \"uuid/v1\";\r\nimport DataUtils from \"./dataUtils\";\r\nimport { Post } from \"./\";\r\n\r\nclass DataGenerator {\r\n  constructor() {\r\n    this._data = [];\r\n    this._tags = [\"#javascript\", \"#css\", \"#rust\", \"#webpack\", \"#cargo\"];\r\n  }\r\n\r\n  _generate = quantity => {\r\n    const chance = new Chance();\r\n    for (let i = 0; i < quantity; i++) {\r\n      this._data.push(\r\n        new Post(\r\n          uuidv1(),\r\n          chance.sentence({ words: 6 }),\r\n          chance.paragraph({ sentences: 3 }),\r\n          DataUtils.generateExampleMarkdownText(),\r\n          \"twistezo\",\r\n          chance.date({\r\n            string: false,\r\n            american: false,\r\n            year: DataUtils.randomArrayItem([2016, 2017, 2018])\r\n          }),\r\n          DataUtils.arrayFromArrayRandomItems(this._tags),\r\n          \"https://avatars.dicebear.com/v2/identicon/\" +\r\n            chance.word({ length: 15 }) +\r\n            \".svg\"\r\n        )\r\n      );\r\n    }\r\n\r\n    return DataUtils.isNullEmptyOrUndefinded(this._data)\r\n      ? new Error(\"Generate data failed.\")\r\n      : this._data;\r\n  };\r\n\r\n  fetch = quantity =>\r\n    new Promise((resolve, reject) => {\r\n      const result = this._generate(quantity);\r\n      if (result instanceof Error) {\r\n        reject(\r\n          new Error(\"Error while fetching data. The data seems to be broken.\")\r\n        );\r\n      } else {\r\n        resolve(result);\r\n      }\r\n    });\r\n}\r\n\r\nexport default DataGenerator;\r\n","import Chance from \"chance\";\r\nimport showdown from \"showdown\";\r\nimport firebase from \"./firebase\";\r\nimport { firebaseFirestore } from \"../data/firebase\";\r\nimport hljs from \"highlight.js\";\r\nimport \"../styles/_dracula.scss\";\r\nimport { Post } from \"../data/index\";\r\nimport DataGenerator from \"./generator\";\r\n\r\nclass DataUtils {\r\n  static randomArrayItem = array =>\r\n    array[Math.floor(Math.random() * array.length)];\r\n\r\n  static isNullEmptyOrUndefinded = value =>\r\n    value === null || value === [] || value === undefined || value.length === 0;\r\n\r\n  static arrayFromArrayRandomItems = array => {\r\n    const result = Array.from(array).filter(() => DataUtils.randomBoolean());\r\n    return result.length === 0 ? [array[0]] : result;\r\n  };\r\n\r\n  static randomBoolean = () => Math.random() >= 0.5;\r\n\r\n  static arrayContainsAllElementsFromAnother = (array0, array1) =>\r\n    array1\r\n      .map(a => {\r\n        return array0.some(b => {\r\n          return b === a;\r\n        });\r\n      })\r\n      .every(e => e);\r\n\r\n  static nextArrayItem = (array, currentIndex) =>\r\n    array[(currentIndex + 1) % array.length];\r\n\r\n  static getEmailPrefix = email => email.slice(0, email.indexOf(\"@\"));\r\n\r\n  static generateExampleMarkdownText = () => {\r\n    const chance = new Chance();\r\n    const randomSentence = words => chance.sentence({ words });\r\n    const randomParagraph = sentences =>\r\n      chance.paragraph({\r\n        sentences\r\n      });\r\n    const word = length => chance.word({ length });\r\n\r\n    return `### ${randomSentence(6)}\r\n        \\n ${randomParagraph(10)}\r\n        \\n![Alt Text](https://avatars.dicebear.com/v2/identicon/${word(\r\n          15\r\n        )}.svg =200x200)\r\n        \\nPhoto: *${randomSentence(6)}*\r\n        \\nVisit: <http://www.example.com>\r\n        \\n### ${randomSentence(6)}\r\n        \\n${randomParagraph(6)}\r\n        \\n${word()} ${word()}:\r\n        \\n* ${word()}\r\n        \\n* ${word()}\r\n        \\n* ${word()}\r\n        \\n### ${randomSentence(6)}\r\n        \\nSome code:\r\n        \\n\r\n        \\`\\`\\`\r\n        function resolveAfter2Seconds() {\r\n          return new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve('resolved');\r\n            }, 2000);\r\n          });\r\n        }\r\n        \r\n        async function asyncCall() {\r\n          console.log('calling');\r\n          var result = await resolveAfter2Seconds();\r\n          console.log(result);\r\n          // expected output: 'resolved'\r\n        }\r\n        \r\n        asyncCall();\r\n        \\`\\`\\`\r\n        `;\r\n  };\r\n\r\n  static convertMarkdownToHtml = markdownString =>\r\n    new showdown.Converter({ noHeaderId: true }).makeHtml(markdownString);\r\n\r\n  static updateCodeSyntaxHighlighting = () => {\r\n    document.querySelectorAll(\"pre code\").forEach(block => {\r\n      hljs.highlightBlock(block);\r\n    });\r\n  };\r\n\r\n  static jsPostObjToFirestoreObj = post => ({\r\n    id: post.id,\r\n    title: post.title,\r\n    shortDescription: post.shortDescription,\r\n    text: post.text,\r\n    author: post.author,\r\n    date: firebase.firestore.Timestamp.fromDate(post.date),\r\n    tags: post.tags,\r\n    mainImage: post.mainImage\r\n  });\r\n\r\n  static firestorePostObjToJsOjb = firestoreObj =>\r\n    new Post(\r\n      firestoreObj.id,\r\n      firestoreObj.title,\r\n      firestoreObj.shortDescription,\r\n      firestoreObj.text,\r\n      firestoreObj.author,\r\n      firestoreObj.date.toDate(),\r\n      firestoreObj.tags,\r\n      firestoreObj.mainImage\r\n    );\r\n\r\n  /**\r\n   * Use only for first time writing to firestore random generated data.\r\n   * It creates in firestore  `posts` collection with documents `post` by `post.id`.\r\n   */\r\n  static addPostsToFirestore = num => {\r\n    new DataGenerator()\r\n      .fetch(num)\r\n      .then(posts => {\r\n        posts.forEach(post => {\r\n          firebaseFirestore\r\n            .collection(\"posts\")\r\n            .doc(post.id)\r\n            .set(DataUtils.jsPostObjToFirestoreObj(post))\r\n            .catch(error =>\r\n              console.error(\"Skipping write document cause: \", error)\r\n            );\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\n\r\nexport default DataUtils;\r\n","import DataUtils from \"../data/dataUtils\";\r\n\r\nclass ReducersUtils {\r\n  static sortPostsByDateDesc = posts =>\r\n    posts.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n\r\n  static unwrapTagsFromPosts = posts => {\r\n    const allTags = Array.from(posts.map(post => post.tags).flat());\r\n    const uniqueTags = Array.from(new Set(allTags));\r\n\r\n    let uniqueWithQuantity = [];\r\n    uniqueTags.forEach(uniqueTag =>\r\n      uniqueWithQuantity.push({\r\n        name: uniqueTag,\r\n        quantity: allTags.filter(tag => tag === uniqueTag).length,\r\n        state: false\r\n      })\r\n    );\r\n\r\n    return uniqueWithQuantity;\r\n  };\r\n\r\n  static switchTagState = (tagName, tags) => {\r\n    let tag = tags.find(tag => tag.name === tagName);\r\n    tag.state = !tag.state;\r\n    return tags;\r\n  };\r\n\r\n  static filterPostsBy = (posts, filters) => {\r\n    const tags = filters.tags;\r\n    const dates = filters.dates;\r\n    const searchValue = filters.searchValue;\r\n\r\n    let filtered = [];\r\n    const switchedOnTags = tags.filter(tag => tag.state).map(tag => tag.name);\r\n    filtered = posts.filter(\r\n      post =>\r\n        // by tags\r\n        DataUtils.arrayContainsAllElementsFromAnother(\r\n          post.tags,\r\n          switchedOnTags\r\n        ) &&\r\n        // by searchValue (title)\r\n        post.title.toLowerCase().includes(searchValue.toLowerCase())\r\n    );\r\n\r\n    // by date - years\r\n    let switchedOnYears = dates\r\n      .filter(date => date.yearState)\r\n      .map(date => date.year);\r\n    if (switchedOnYears.length !== 0) {\r\n      filtered = filtered.filter(post =>\r\n        DataUtils.arrayContainsAllElementsFromAnother(switchedOnYears, [\r\n          post.date.getFullYear()\r\n        ])\r\n      );\r\n    }\r\n\r\n    // by date - months\r\n    let switchedOnMonths = dates\r\n      .map(date =>\r\n        date.months\r\n          .map(month => ({\r\n            year: date.year,\r\n            month: month.name,\r\n            state: month.state\r\n          }))\r\n          .flat()\r\n      )\r\n      .flat()\r\n      .filter(month => month.state);\r\n    if (switchedOnMonths.length !== 0) {\r\n      filtered = filtered.filter(\r\n        post =>\r\n          switchedOnMonths.some(\r\n            item => item.year === post.date.getFullYear()\r\n          ) &&\r\n          switchedOnMonths.some(\r\n            item => item.month === ReducersUtils.monthNameFromDate(post.date)\r\n          )\r\n      );\r\n    }\r\n    return ReducersUtils.sortPostsByDateDesc(filtered);\r\n  };\r\n\r\n  static unwrapDatesFromPosts = posts => {\r\n    const years = Array.from(\r\n      new Set(posts.map(post => post.date.getFullYear()))\r\n    );\r\n\r\n    let yearsWithMonths = [];\r\n    years.forEach(year =>\r\n      yearsWithMonths.push({\r\n        year: year,\r\n        yearState: false,\r\n        months: Array.from(\r\n          new Set(\r\n            posts\r\n              .filter(post => post.date.getFullYear() === year)\r\n              .map(post => ReducersUtils.monthNameFromDate(post.date))\r\n          )\r\n        ).map(month => ({\r\n          name: month,\r\n          quantity: ReducersUtils.postsQuantityByDate(posts, month, year),\r\n          state: false\r\n        }))\r\n      })\r\n    );\r\n    return yearsWithMonths;\r\n  };\r\n\r\n  static postsQuantityByDate = (posts, month, year) =>\r\n    posts.filter(\r\n      post =>\r\n        post.date.getFullYear() === year &&\r\n        ReducersUtils.monthNameFromDate(post.date) === month\r\n    ).length;\r\n\r\n  static monthNameFromDate = date =>\r\n    date.toLocaleString(\"en-us\", { month: \"long\" });\r\n\r\n  static switchDateState = (dateToSwitch, archiveDates) => {\r\n    if (dateToSwitch.month === undefined) {\r\n      let date = archiveDates.find(date => date.year === dateToSwitch.year);\r\n      date.yearState = !date.yearState;\r\n      // reset all months state\r\n      archiveDates.forEach(date =>\r\n        date.months.forEach(month => (month.state = false))\r\n      );\r\n    } else {\r\n      let month = archiveDates\r\n        .find(date => date.year === dateToSwitch.year)\r\n        .months.find(month => month.name === dateToSwitch.month);\r\n      month.state = !month.state;\r\n      // reset all years state\r\n      archiveDates.forEach(date => (date.yearState = false));\r\n    }\r\n    return archiveDates;\r\n  };\r\n\r\n  static resetFilters = filters => {\r\n    let reseted = Object.assign({}, filters);\r\n    reseted.tags.forEach(tag => (tag.state = false));\r\n    reseted.dates.forEach(date => (date.yearState = false));\r\n    reseted.dates.forEach(date =>\r\n      date.months.forEach(month => (month.state = false))\r\n    );\r\n    reseted.searchValue = \"\";\r\n    return reseted;\r\n  };\r\n}\r\n\r\nexport default ReducersUtils;\r\n","/**\r\n * Reducers\r\n *\r\n * Reducers specify how the application's state changes in response to actions\r\n * sent to the store. Remember that actions only describe what happened but\r\n * don't describe how the application's state changes.\r\n */\r\n\r\nimport { combineReducers } from \"redux\";\r\nimport ReducersUtils from \"./reducersUtils\";\r\n\r\nconst posts = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"POSTS_FETCHED_SUCCESS\":\r\n      return {\r\n        data: [...ReducersUtils.sortPostsByDateDesc(action.posts)],\r\n        fetchingError: null\r\n      };\r\n    case \"POSTS_FETCHED_ERROR\":\r\n      return {\r\n        data: [],\r\n        fetchingError: action.fetchingError\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const filteredPosts = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FILTER_POSTS\":\r\n      return [...ReducersUtils.filterPostsBy(action.posts, action.filters)];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filtersShape = {\r\n  tags: [],\r\n  dates: [],\r\n  searchValue: \"\"\r\n};\r\n\r\nconst filters = (state = filtersShape, action) => {\r\n  switch (action.type) {\r\n    case \"UNWRAP_TAGS\":\r\n      return {\r\n        ...state,\r\n        tags: [...ReducersUtils.unwrapTagsFromPosts(action.posts)]\r\n      };\r\n    case \"SWITCH_TAG\":\r\n      return {\r\n        ...state,\r\n        tags: [...ReducersUtils.switchTagState(action.tagName, state.tags)]\r\n      };\r\n    case \"UNWRAP_DATES\":\r\n      return {\r\n        ...state,\r\n        dates: [...ReducersUtils.unwrapDatesFromPosts(action.posts)]\r\n      };\r\n    case \"SWITCH_DATE_STATE\":\r\n      return {\r\n        ...state,\r\n        dates: [...ReducersUtils.switchDateState(action.date, state.dates)]\r\n      };\r\n    case \"HANDLE_SEARCH_INPUT\":\r\n      return {\r\n        ...state,\r\n        searchValue: action.value\r\n      };\r\n    case \"RESET_FILTERS\":\r\n      return ReducersUtils.resetFilters(action.filters);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst auth = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"SIGNED_IN\":\r\n      return {\r\n        ...state,\r\n        isSignedIn: action.isSignedIn,\r\n        errorMessage: action.errorMessage\r\n      };\r\n    case \"FETCHED_USER_DATA\":\r\n      return {\r\n        ...state,\r\n        displayName: action.displayName,\r\n        email: action.email\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  posts,\r\n  filteredPosts,\r\n  filters,\r\n  auth\r\n});\r\n","/**\r\n * Action creators\r\n *\r\n * Actions are payloads of information that send data from your application to your store.\r\n * They are the only source of information for the store.\r\n */\r\n\r\nimport {\r\n  fetchPostsFromFirestore,\r\n  addPostToFirestore,\r\n  signInWithEmailAndPassword,\r\n  fetchSignedInUserData,\r\n  signOutUser\r\n} from \"../data/firebase\";\r\n\r\nconst postsFetched = posts => ({\r\n  type: \"POSTS_FETCHED_SUCCESS\",\r\n  posts\r\n});\r\n\r\nconst postsFetchedError = fetchingError => ({\r\n  type: \"POSTS_FETCHED_ERROR\",\r\n  fetchingError\r\n});\r\n\r\nexport const fetchPosts = () => (dispatch, getState) => {\r\n  fetchPostsFromFirestore()\r\n    .then(posts => {\r\n      dispatch(postsFetched(posts));\r\n      dispatch(unwrapTags(posts));\r\n      dispatch(unwrapDates(posts));\r\n      dispatch(filterPosts(posts, getState().filters));\r\n    })\r\n    .catch(error => dispatch(postsFetchedError(error)));\r\n};\r\n\r\nexport const addPost = post => dispatch => {\r\n  addPostToFirestore(post).then(() => dispatch(fetchPosts()));\r\n};\r\n\r\nexport const filterPosts = (posts, filters) => ({\r\n  type: \"FILTER_POSTS\",\r\n  posts,\r\n  filters\r\n});\r\n\r\nexport const unwrapTags = posts => ({\r\n  type: \"UNWRAP_TAGS\",\r\n  posts\r\n});\r\n\r\nexport const switchTagState = tagName => ({\r\n  type: \"SWITCH_TAG\",\r\n  tagName\r\n});\r\n\r\nexport const unwrapDates = posts => ({\r\n  type: \"UNWRAP_DATES\",\r\n  posts\r\n});\r\n\r\nexport const switchDateState = date => ({\r\n  type: \"SWITCH_DATE_STATE\",\r\n  date\r\n});\r\n\r\nexport const handleSearchInput = value => ({\r\n  type: \"HANDLE_SEARCH_INPUT\",\r\n  value\r\n});\r\n\r\nexport const resetFilters = filters => ({\r\n  type: \"RESET_FILTERS\",\r\n  filters\r\n});\r\n\r\nexport const signedIn = (isSignedIn, errorMessage) => ({\r\n  type: \"SIGNED_IN\",\r\n  isSignedIn,\r\n  errorMessage\r\n});\r\n\r\nexport const fetchedUserData = (displayName, email) => ({\r\n  type: \"FETCHED_USER_DATA\",\r\n  displayName,\r\n  email\r\n});\r\n\r\nexport const signIn = (email, password) => dispatch =>\r\n  signInWithEmailAndPassword(email, password)\r\n    .then(() => dispatch(signedIn(true, \"\")))\r\n    .then(() => fetchSignedInUserData())\r\n    .then(data => dispatch(fetchedUserData(data.name, data.email)))\r\n    .catch(error => dispatch(signedIn(false, error.message)));\r\n\r\nexport const signOut = () => dispatch =>\r\n  signOutUser()\r\n    .then(() => dispatch(signedIn(false, \"\")))\r\n    .then(() => dispatch(fetchedUserData(\"\", \"\")));\r\n","import React, { Component } from \"react\";\r\nimport { Form, FormControl } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PUBLIC_URL } from \"../../index\";\r\n\r\nclass SearchForm extends Component {\r\n  handleSearchFormInputChange = event => {\r\n    const value = event.target.value;\r\n    this.props.handleSearchInput(value);\r\n\r\n    let filters = Object.assign({}, this.props.filters);\r\n    filters.searchValue = value;\r\n    this.props.filterPosts(this.props.posts, filters);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form inline>\r\n        <Link to={PUBLIC_URL + \"/search\"}>\r\n          <FormControl\r\n            className=\"mr-sm-2\"\r\n            name=\"search\"\r\n            type=\"text\"\r\n            value={this.props.filters.searchValue}\r\n            placeholder=\"search\"\r\n            onChange={this.handleSearchFormInputChange}\r\n          />\r\n        </Link>\r\n        <i className=\"fas fa-search\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForm;\r\n","import { connect } from \"react-redux\";\r\nimport { filterPosts, handleSearchInput } from \"../actions\";\r\nimport SearchForm from \"../components/Navbar/SearchForm\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.data,\r\n  filters: state.filters\r\n});\r\n\r\nconst mapDispatchToProps = { filterPosts, handleSearchInput };\r\n\r\nexport const SearchFormContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SearchForm);\r\n","import React, { Component } from \"react\";\r\nimport { Form, Col, Row, Button, Modal } from \"react-bootstrap\";\r\n\r\nclass SignInForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formData: {\r\n        email: \"\",\r\n        password: \"\"\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // console.log(this.state);\r\n  }\r\n\r\n  handleSignIn = () => {\r\n    this.props.signIn(this.state.formData.email, this.state.formData.password);\r\n  };\r\n\r\n  handleHideSignInModal = () => {\r\n    this.props.onSignInFormHide();\r\n  };\r\n\r\n  handleFormInputChange = e => {\r\n    const targetName = e.target.name;\r\n    const targetValue = e.target.value;\r\n    this.setState(() => ({\r\n      formData: {\r\n        ...this.state.formData,\r\n        [targetName]: targetValue\r\n      }\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        show={this.props.signInModalShow}\r\n        onHide={this.props.onSignInFormHide}\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">Sign in</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form className=\"pt-3\">\r\n            <Form.Group>\r\n              <Form.Control\r\n                name=\"email\"\r\n                // value={this.state.formData.name}\r\n                type=\"text\"\r\n                placeholder=\"Email\"\r\n                required\r\n                onChange={this.handleFormInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                name=\"password\"\r\n                // value={this.state.formData.review}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n                onChange={this.handleFormInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Row className=\"pt-3 text-center\">\r\n              <Col>\r\n                <Button onClick={this.handleHideSignInModal}>Back</Button>\r\n              </Col>\r\n              <Col>\r\n                <Button onClick={this.handleSignIn}>Ok</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignInForm;\r\n","import { connect } from \"react-redux\";\r\nimport SignInForm from \"../components/Navbar/SignInForm\";\r\nimport { signIn } from \"../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n  state: state\r\n});\r\n\r\nconst mapDispatchToProps = { signIn };\r\n\r\nexport const SignInFormContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignInForm);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar as BsNavbar, Form, Button, Container } from \"react-bootstrap\";\r\nimport { SearchFormContainer } from \"../../containers/SearchFormContainer\";\r\nimport { SignInFormContainer } from \"../../containers/SignInFormContainer\";\r\nimport { PUBLIC_URL } from \"../../index\";\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { signInModalShow: false };\r\n  }\r\n\r\n  handleLogoClick = () => {\r\n    this.props.resetFilters(this.props.filters);\r\n    this.props.filterPosts(this.props.posts, {\r\n      tags: [],\r\n      dates: [],\r\n      searchValue: \"\"\r\n    });\r\n  };\r\n\r\n  handleSignInClick = () => {\r\n    if (this.props.auth.isSignedIn) {\r\n      this.props.signOut();\r\n    } else {\r\n      this.setState({ signInModalShow: true });\r\n    }\r\n  };\r\n\r\n  handleHideSignInModal = () => {\r\n    this.setState({ signInModalShow: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BsNavbar bg=\"dark\" variant=\"dark\" className=\"sticky-top text-center\">\r\n        <Container>\r\n          <Link to={PUBLIC_URL + \"/\"} onClick={this.handleLogoClick}>\r\n            <BsNavbar.Brand className=\"ml-4\">Home</BsNavbar.Brand>\r\n          </Link>\r\n          <SearchFormContainer />\r\n          {this.props.auth.isSignedIn && (\r\n            <div className=\"hello-user\">\r\n              {\"Hello, \" + this.props.auth.displayName}\r\n            </div>\r\n          )}\r\n          <Form inline>\r\n            <Link to={PUBLIC_URL + \"/addpost\"}>\r\n              <Button variant=\"outline-info mr-4\">Add Post</Button>\r\n            </Link>\r\n            <Button\r\n              variant=\"outline-info mr-4\"\r\n              onClick={this.handleSignInClick}\r\n            >\r\n              {this.props.auth.isSignedIn ? \"Sign out\" : \"Sign in\"}\r\n            </Button>\r\n          </Form>\r\n          <SignInFormContainer\r\n            signInModalShow={this.state.signInModalShow}\r\n            onSignInFormHide={this.handleHideSignInModal}\r\n          />\r\n        </Container>\r\n      </BsNavbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import { connect } from \"react-redux\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport { resetFilters, filterPosts, signOut } from \"../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.data,\r\n  filters: state.filters,\r\n  auth: state.auth\r\n});\r\n\r\nconst mapDispatchToProps = { resetFilters, signOut, filterPosts };\r\n\r\nexport const NavbarContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass AboutMe extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h4>About Me</h4>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutMe;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Badge } from \"react-bootstrap\";\r\nimport { PUBLIC_URL } from \"../../index\";\r\n\r\nclass Tags extends Component {\r\n  onTagClick = (event, tagName) => {\r\n    this.props.switchTagState(tagName);\r\n    this.props.filterPosts(this.props.posts, this.props.filters);\r\n    event.preventDefault();\r\n  };\r\n\r\n  Tags = () => {\r\n    const tags = this.props.filters.tags;\r\n    return tags.length > 0\r\n      ? tags.map(tag => (\r\n          <div\r\n            className=\"mr-2 alert-link\"\r\n            key={tag.name}\r\n            onClick={event => this.onTagClick(event, tag.name)}\r\n          >\r\n            <Link to={PUBLIC_URL + \"/search\"}>\r\n              {tag.name}\r\n              {tag.state ? (\r\n                <i className=\"far fa-check-square ml-2\" />\r\n              ) : (\r\n                <Badge variant=\"secondary\" className=\"ml-2\">\r\n                  {tag.quantity}\r\n                </Badge>\r\n              )}\r\n            </Link>\r\n          </div>\r\n        ))\r\n      : \"\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div>\r\n          <h4>Tags</h4>\r\n          <span className=\"d-flex flex-wrap\">\r\n            <this.Tags />\r\n          </span>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tags;\r\n","import { connect } from \"react-redux\";\r\nimport { switchTagState, filterPosts } from \"../actions\";\r\nimport Tags from \"../components/SidePanel/Tags\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    posts: state.posts.data,\r\n    filters: state.filters\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { switchTagState, filterPosts };\r\n\r\nexport const TagsContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Tags);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Badge } from \"react-bootstrap\";\r\nimport { PUBLIC_URL } from \"../../index\";\r\n\r\nclass Archives extends Component {\r\n  onDateClick = (event, year, month) => {\r\n    this.props.switchDateState({ year, month });\r\n    this.props.filterPosts(this.props.posts, this.props.filters);\r\n    event.preventDefault();\r\n  };\r\n\r\n  Dates = () => {\r\n    const dates = this.props.filters.dates;\r\n    return dates.length > 0\r\n      ? dates.map(date => (\r\n          <ul key={date.year} className=\"list-unstyled\">\r\n            <div\r\n              className=\"alert-link\"\r\n              onClick={event => this.onDateClick(event, date.year)}\r\n            >\r\n              <Link to={PUBLIC_URL + \"/search\"}>\r\n                {date.year}\r\n                {date.yearState ? (\r\n                  <i className=\"far fa-check-square ml-2\" />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Link>\r\n            </div>\r\n            {date.months.map(month => (\r\n              <li key={month.name}>\r\n                <div\r\n                  className=\"alert-link\"\r\n                  onClick={event =>\r\n                    this.onDateClick(event, date.year, month.name)\r\n                  }\r\n                >\r\n                  <Link to={PUBLIC_URL + \"/search\"}>\r\n                    {month.name}\r\n                    {month.state ? (\r\n                      <i className=\"far fa-check-square ml-2\" />\r\n                    ) : (\r\n                      <Badge variant=\"secondary\" className=\"ml-2\">\r\n                        {month.quantity}\r\n                      </Badge>\r\n                    )}\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ))\r\n      : \"\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h4>Archive posts</h4>\r\n        <this.Dates />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Archives;\r\n","import { connect } from \"react-redux\";\r\nimport { filterPosts, switchDateState } from \"../actions\";\r\nimport Archive from \"../components/SidePanel/Archives\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.data,\r\n  filters: state.filters\r\n});\r\n\r\nconst mapDispatchToProps = { filterPosts, switchDateState };\r\n\r\nexport const ArchivesContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Archive);\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport AboutMe from \"./AboutMe\";\r\nimport { TagsContainer } from \"../../containers/TagsContainer\";\r\nimport { ArchivesContainer } from \"../../containers/ArchivesContainer\";\r\n\r\nclass SidePanel extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className=\"pb-2\">\r\n          <AboutMe />\r\n        </Row>\r\n        <Row className=\"pb-2\">\r\n          <TagsContainer />\r\n        </Row>\r\n        <Row className=\"pb-2\">\r\n          <ArchivesContainer />\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidePanel;\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PUBLIC_URL } from \"../../../index\";\r\n\r\nclass PostsCard extends Component {\r\n  render() {\r\n    const post = this.props.post;\r\n    const postURL = PUBLIC_URL + \"/post/id-\" + post.id;\r\n    return (\r\n      <Container className=\"mb-2\">\r\n        <div className=\"card mb-3\">\r\n          <div className=\"row no-gutters\">\r\n            <div className=\"col-md-3 d-flex flex-wrap align-items-center\">\r\n              <Link to={postURL}>\r\n                <img src={post.mainImage} className=\"card-img pl-3\" alt=\"\" />\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-9\">\r\n              <div className=\"card-body\">\r\n                <Link to={postURL}>\r\n                  <h5 className=\"card-title\">{post.title}</h5>\r\n                </Link>\r\n                <p className=\"card-text\">\r\n                  {post.shortDescription.substring(0, 150) + \"...\"}\r\n                </p>\r\n                <span className=\"card-text\">\r\n                  <p className=\"text-muted mb-0\">\r\n                    {post.author +\r\n                      \", \" +\r\n                      post.date.toLocaleString(\"pl-PL\", {\r\n                        day: \"numeric\",\r\n                        month: \"numeric\",\r\n                        year: \"numeric\"\r\n                      })}\r\n                  </p>\r\n                  <p className=\"text-muted mb-0\">\r\n                    {post.tags.map(tag => (\r\n                      <span key={tag} className=\"pr-2\">\r\n                        {tag}\r\n                      </span>\r\n                    ))}\r\n                  </p>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostsCard;\r\n","import React, { Component } from \"react\";\r\nimport PostCardHorizontal from \"./PostCards/PostCardHorizontal\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass SearchResult extends Component {\r\n  PostCards = () => {\r\n    return this.props.filteredPosts.map(post => (\r\n      <PostCardHorizontal key={post.id} post={post} />\r\n    ));\r\n  };\r\n\r\n  EmptyResult = () => {\r\n    return (\r\n      <div className=\"text-center pt-5\">\r\n        <div className=\"pb-2\">\r\n          <h2>Nothing here...</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.props.filteredPosts.length !== 0 ? (\r\n          <this.PostCards />\r\n        ) : (\r\n          <this.EmptyResult />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResult;\r\n","import { connect } from \"react-redux\";\r\nimport SearchResult from \"../components/MainPanel/SearchResult\";\r\n\r\nconst mapStateToProps = state => ({\r\n  filteredPosts: state.filteredPosts\r\n});\r\n\r\nexport const SearchResultContainer = connect(mapStateToProps)(SearchResult);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PUBLIC_URL } from \"../../../index\";\r\n\r\nclass PostsCardVertical extends Component {\r\n  render() {\r\n    const post = this.props.post;\r\n    const postURL = PUBLIC_URL + \"/post/id-\" + post.id;\r\n    return (\r\n      <div className=\"card\">\r\n        <Link to={postURL}>\r\n          <img src={post.mainImage} className=\"card-img-top pt-3\" alt=\"\" />\r\n        </Link>\r\n        <div className=\"card-body\">\r\n          <Link to={postURL}>\r\n            <h4 className=\"card-title\">{post.title}</h4>\r\n          </Link>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <p className=\"text-muted mb-0\">\r\n            {post.author +\r\n              \", \" +\r\n              post.date.toLocaleString(\"pl-PL\", {\r\n                day: \"numeric\",\r\n                month: \"numeric\",\r\n                year: \"numeric\"\r\n              })}\r\n          </p>\r\n          <p className=\"text-muted mb-0\">\r\n            {post.tags.map(tag => (\r\n              <span key={tag} className=\"pr-2\">\r\n                {tag}\r\n              </span>\r\n            ))}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostsCardVertical;\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport PostCardHorizontal from \"./PostCards/PostCardHorizontal\";\r\nimport PostCardVertical from \"./PostCards/PostCardVertical\";\r\n\r\nclass MainBoard extends Component {\r\n  static headPostsNum = 2;\r\n\r\n  HeadPosts = () => {\r\n    const headCards = this.props.filteredPosts\r\n      .slice(0, MainBoard.headPostsNum)\r\n      .map(post => <PostCardVertical key={post.id} post={post} />);\r\n    return <div className=\"card-deck\">{headCards}</div>;\r\n  };\r\n\r\n  PostCards = () => {\r\n    return this.props.filteredPosts\r\n      .slice(MainBoard.headPostsNum)\r\n      .map(post => <PostCardHorizontal key={post.id} post={post} />);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h4>Latest posts</h4>\r\n        <this.HeadPosts />\r\n        <hr />\r\n        <this.PostCards />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainBoard;\r\n","import { connect } from \"react-redux\";\r\nimport MainBoard from \"../components/MainPanel/MainBoard\";\r\n\r\nconst mapStateToProps = state => ({\r\n  filteredPosts: state.filteredPosts\r\n});\r\n\r\nexport const MainBoardContainer = connect(mapStateToProps)(MainBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport DataUtils from \"../../data/dataUtils\";\r\n\r\nclass Post extends Component {\r\n  componentDidMount() {\r\n    DataUtils.updateCodeSyntaxHighlighting();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    DataUtils.updateCodeSyntaxHighlighting();\r\n  }\r\n\r\n  PostContainer = () => {\r\n    const post = this.props.posts.find(\r\n      post => post.id === this.props.routeParamId\r\n    );\r\n    const text = DataUtils.convertMarkdownToHtml(post.text);\r\n    return (\r\n      <div>\r\n        <h1>{post.title}</h1>\r\n        <p>{post.shortDescription}</p>\r\n        <div\r\n          className=\"content pt-3\"\r\n          dangerouslySetInnerHTML={{ __html: text }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <this.PostContainer />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import { connect } from \"react-redux\";\r\nimport Post from \"../components/MainPanel/Post\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.data\r\n});\r\n\r\nexport const PostContainer = connect(mapStateToProps)(Post);\r\n","import React, { Component } from \"react\";\r\nimport DataUtils from \"../../../data/dataUtils\";\r\n\r\nclass Preview extends Component {\r\n  componentDidMount() {\r\n    DataUtils.updateCodeSyntaxHighlighting();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    DataUtils.updateCodeSyntaxHighlighting();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pt-3\">\r\n        <h4>Live preview</h4>\r\n        <hr />\r\n        <h1>{this.props.title}</h1>\r\n        <p>{this.props.shortDescription}</p>\r\n        <div\r\n          className=\"content pt-3\"\r\n          dangerouslySetInnerHTML={{\r\n            __html: DataUtils.convertMarkdownToHtml(this.props.parsedText)\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Preview;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nclass FormattingHelp extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"pt-4\">\r\n        <h4>Formatting options (only in Post body)</h4>\r\n        <Table bordered>\r\n          <thead>\r\n            <tr>\r\n              <th>Usage</th>\r\n              <th>Example</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>### header h3</td>\r\n              <td>\r\n                <h3>header h3</h3>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>#### header h4</td>\r\n              <td>\r\n                <h4>header h4</h4>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>*italics*</td>\r\n              <td>\r\n                <em>italics</em>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>**bold**</td>\r\n              <td>\r\n                <strong>bold</strong>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>`code`</td>\r\n              <td>\r\n                <code>code</code>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>```</p>\r\n                <p>randomArrayItem = array...</p>\r\n                <p>array[Math.floor...</p>\r\n                <p>```</p>\r\n              </td>\r\n              <td>\r\n                <pre>\r\n                  <code>\r\n                    <p>randomArrayItem = array =></p>\r\n                    <p>\r\n                      &nbsp;&nbsp;array[Math.floor(Math.random() *\r\n                      array.length)];\r\n                    </p>\r\n                  </code>\r\n                </pre>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>![alt text](url = 30x30)</td>\r\n              <td>\r\n                <img\r\n                  alt=\"Alt Text\"\r\n                  src=\"https://avatars.dicebear.com/v2/identicon/test.svg\"\r\n                  width=\"30\"\r\n                  height=\"30\"\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>{\"<http://www.example.com>\"}</td>\r\n              <td>\r\n                <a href=\"http://www.example.com\">http://www.example.com</a>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormattingHelp;\r\n","import React, { Component } from \"react\";\r\nimport uuidv1 from \"uuid/v1\";\r\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Post } from \"../../../data/index\";\r\nimport DataUtils from \"../../../data/dataUtils\";\r\nimport Preview from \"./Preview\";\r\nimport FormattingHelp from \"./FormattingHelp\";\r\n\r\nclass AddPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formInput: {\r\n        title: \"\",\r\n        shortDescription: \"\",\r\n        text: \"\"\r\n      },\r\n      parsedText: \"\",\r\n      controllers: {\r\n        showFormattingHelp: false,\r\n        shouldClearPastedExample: false\r\n      }\r\n    };\r\n  }\r\n\r\n  handleShowFormattingHelp = () => {\r\n    const current = this.state.controllers.showFormattingHelp;\r\n    this.setState({\r\n      ...this.state,\r\n      controllers: { showFormattingHelp: !current }\r\n    });\r\n  };\r\n\r\n  handlePasteExample = () => {\r\n    const shouldClearPastedExample = !this.state.controllers\r\n      .shouldClearPastedExample;\r\n    const title = shouldClearPastedExample ? \"Example title\" : \"\";\r\n    const shortDescription = shouldClearPastedExample\r\n      ? \"Example short description\"\r\n      : \"\";\r\n    const text = shouldClearPastedExample\r\n      ? DataUtils.generateExampleMarkdownText()\r\n      : \"\";\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      formInput: {\r\n        title,\r\n        shortDescription,\r\n        text\r\n      },\r\n      parsedText: text,\r\n      controllers: {\r\n        ...this.state.controllers,\r\n        shouldClearPastedExample\r\n      }\r\n    });\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    let text = event.target.value;\r\n    const parsedText =\r\n      event.target.name === \"text\" ? text : this.state.parsedText;\r\n    this.setState({\r\n      ...this.state,\r\n      formInput: {\r\n        ...this.state.formInput,\r\n        [event.target.name]: text\r\n      },\r\n      parsedText\r\n    });\r\n  };\r\n\r\n  handleAddPost = () => {\r\n    this.props.addPost(\r\n      new Post(\r\n        uuidv1(),\r\n        this.state.formInput.title,\r\n        this.state.formInput.shortDescription,\r\n        this.state.parsedText,\r\n        \"twistezo\",\r\n        new Date(),\r\n        [\"#rust\", \"#javascript\", \"#linux\"],\r\n        \"https://avatars.dicebear.com/v2/identicon/test.svg\"\r\n      )\r\n    );\r\n  };\r\n\r\n  Form = () => {\r\n    return (\r\n      <div className=\"pt-4\">\r\n        <h4>Create your post!</h4>\r\n        <hr />\r\n        <Form className=\"pt-2\">\r\n          <Form.Group>\r\n            <Form.Control\r\n              name=\"title\"\r\n              value={this.state.formInput.title}\r\n              type=\"text\"\r\n              placeholder=\"Post title\"\r\n              required\r\n              maxLength=\"30\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Control\r\n              name=\"shortDescription\"\r\n              as=\"textarea\"\r\n              value={this.state.formInput.shortDescription}\r\n              placeholder=\"Short description\"\r\n              required\r\n              rows=\"3\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Control\r\n              name=\"text\"\r\n              as=\"textarea\"\r\n              value={this.state.formInput.text}\r\n              placeholder=\"Post body\"\r\n              rows=\"10\"\r\n              required\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Button onClick={this.handleAddPost}>Add</Button>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  Helper = () => {\r\n    return (\r\n      <div>\r\n        <h4>Need a little help?</h4>\r\n        <hr />\r\n        <Col>\r\n          <Row className=\"pt-2\">\r\n            <span>Formatting options:</span>\r\n            <Button className=\"ml-2\" onClick={this.handleShowFormattingHelp}>\r\n              {this.state.controllers.showFormattingHelp ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </Row>\r\n          <Row className=\"pt-2\">\r\n            <span>Example post:</span>\r\n            <Button className=\"ml-2\" onClick={this.handlePasteExample}>\r\n              {this.state.controllers.shouldClearPastedExample\r\n                ? \"Clear\"\r\n                : \"Paste\"}\r\n            </Button>\r\n          </Row>\r\n        </Col>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <this.Helper />\r\n        {this.state.controllers.showFormattingHelp && <FormattingHelp />}\r\n        <this.Form />\r\n        <Preview\r\n          title={this.state.formInput.title}\r\n          shortDescription={this.state.formInput.shortDescription}\r\n          parsedText={this.state.parsedText}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddPost;\r\n","import { connect } from \"react-redux\";\r\nimport AddPost from \"../components/MainPanel/AddPost/AddPost\";\r\nimport { addPost, filterPosts, unwrapTags, unwrapDates } from \"../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts,\r\n  filters: state.filters\r\n});\r\n\r\nconst mapDispatchToProps = { addPost, filterPosts, unwrapTags, unwrapDates };\r\n\r\nexport const AddPostContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddPost);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport { NavbarContainer } from \"../containers/NavbarContainer\";\r\nimport SidePanel from \"./SidePanel/SidePanel\";\r\nimport { SearchResultContainer } from \"../containers/SearchResultContainer\";\r\nimport { MainBoardContainer } from \"../containers/MainBoardContainer\";\r\nimport { PostContainer } from \"../containers/PostContainer\";\r\nimport { AddPostContainer } from \"../containers/AddPostContainer\";\r\nimport { PUBLIC_URL } from \"../index\";\r\nimport DataUtils from \"../data/dataUtils\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.waitMessages = [\r\n      \"Feeding artificial intelligence\",\r\n      \"Decorating unattractive UI\",\r\n      \"Refactoring dirty code\",\r\n      \"Writing fake news\",\r\n      \"Patching security vulnerabilities\"\r\n    ];\r\n    this.state = {\r\n      error: null,\r\n      waitMessage: DataUtils.randomArrayItem(this.waitMessages)\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchPosts();\r\n    // DataUtils.addPostsToFirestore(20);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // console.log(window.store.getState());\r\n    const posts = this.props.posts;\r\n    if (posts !== prevProps.posts) {\r\n      this.setState({\r\n        error: this.props.posts.fetchingError\r\n      });\r\n    }\r\n  }\r\n\r\n  ErrorContainer = () => {\r\n    return (\r\n      <div className=\"text-center pt-5\">\r\n        <div className=\"pb-2\">\r\n          <h2>Error. Please reload the page.</h2>\r\n          <h5>Error message: \"{this.state.error.message}\"</h5>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  WaitContainer = () => {\r\n    const currentIndex = this.waitMessages.findIndex(\r\n      m => m === this.state.waitMessage\r\n    );\r\n    setTimeout(() => {\r\n      console.log(\"here\");\r\n      this.setState({\r\n        waitMessage: DataUtils.nextArrayItem(this.waitMessages, currentIndex)\r\n      });\r\n    }, 1000);\r\n\r\n    return (\r\n      <div className=\"wait-container\">\r\n        <div className=\"container text-center h-100 d-flex flex-column justify-content-center\">\r\n          <Row className=\"wait-text\">\r\n            <Col>\r\n              <h2>{this.state.waitMessage + `.`}</h2>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"box-loading\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  MainContainer = () => {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <NavbarContainer />\r\n          <Container>\r\n            <Row className=\"pt-5\">\r\n              <Col sm={3}>\r\n                <SidePanel />\r\n              </Col>\r\n              <Col sm={9}>\r\n                <Switch>\r\n                  <Route\r\n                    exact\r\n                    path={PUBLIC_URL + \"/\"}\r\n                    component={MainBoardContainer}\r\n                  />\r\n                  <Route\r\n                    path={PUBLIC_URL + \"/search\"}\r\n                    component={SearchResultContainer}\r\n                  />\r\n                  <Route\r\n                    path={PUBLIC_URL + \"/post/id-:id\"}\r\n                    component={route => (\r\n                      <PostContainer routeParamId={route.match.params.id} />\r\n                    )}\r\n                  />\r\n                  <Route\r\n                    path={PUBLIC_URL + \"/addpost\"}\r\n                    component={AddPostContainer}\r\n                  />\r\n                </Switch>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </Router>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.props.posts.length !== 0 && this.state.error === null) {\r\n      return <this.MainContainer />;\r\n    } else if (this.state.error !== null) {\r\n      return <this.ErrorContainer />;\r\n    } else {\r\n      return <this.WaitContainer />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { connect } from \"react-redux\";\r\nimport { fetchPosts, filterPosts, unwrapTags, unwrapDates } from \"../actions\";\r\nimport App from \"../components/App\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts,\r\n  filters: state.filters\r\n});\r\n\r\nconst mapDispatchToProps = { fetchPosts, filterPosts, unwrapTags, unwrapDates };\r\n\r\nexport const AppContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport { AppContainer } from \"./containers/AppContainer\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles/_index.scss\";\r\n\r\nexport const PUBLIC_URL = process.env.PUBLIC_URL;\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n// TODO: Remove. For debugging purposes only!\r\nwindow.store = store;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <AppContainer />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"version":3,"sources":["data/firebase.js","data/index.js","data/generator.js","data/dataUtils.js","reducers/reducersUtils.js","reducers/auth.js","reducers/filters.js","reducers/index.js","reducers/posts.js","actions/filters.js","actions/posts.js","components/Navbar/SearchForm.js","components/Navbar/SignInForm.js","components/Navbar/Navbar.js","actions/auth.js","containers/NavbarContainer.js","components/SidePanel/AboutMe.js","components/SidePanel/Tags.js","components/SidePanel/Archives.js","components/SidePanel/SidePanel.js","containers/SidePanelContainer.js","components/MainPanel/PostCard/PostCardHorizontal.js","components/MainPanel/PostCard/PostCardVertical.js","components/MainPanel/PostCard/PostCard.js","containers/PostCardContainer.js","components/MainPanel/SearchResult.js","components/MainPanel/MainBoard.js","components/MainPanel/Post.js","components/MainPanel/PostEditor/Preview.js","components/MainPanel/PostEditor/Form.js","components/MainPanel/PostEditor/FormattingHelp.js","components/MainPanel/PostEditor/Helper.js","components/MainPanel/PostEditor/PostEditor.js","containers/PostEditorContainer.js","components/MainPanel/Settings.js","containers/SettingsContainer.js","components/App.js","containers/AppContainer.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseFirestore","firestore","Post","id","title","shortDescription","text","author","date","tags","mainImage","Object","classCallCheck","this","_id","_title","_shortDescription","_text","_author","_date","_tags","_mainImage","DataGenerator","_this","_generate","quantity","chance","Chance","examplePost","DataUtils","generateExampleMarkdownPost","i","_data","push","uuidv1","string","american","year","randomArrayItem","arrayFromArrayRandomItems","word","length","isNullEmptyOrUndefinded","Error","fetch","Promise","resolve","reject","result","array","Math","floor","random","value","undefined","Array","from","filter","randomBoolean","arrayContainsAllElementsFromAnother","array0","array1","map","a","some","b","every","e","nextArrayItem","currentIndex","getEmailPrefix","email","slice","indexOf","convertSentenceToTagsArray","words","split","convertTagsArrayToSentence","tagsArray","tag","join","randomSentence","sentence","randomParagraph","sentences","paragraph","randomImageSrc","concat","convertMarkdownToHtml","markdownString","showdown","Converter","noHeaderId","makeHtml","updateCodeSyntaxHighlighting","document","querySelectorAll","forEach","block","hljs","highlightBlock","jsPostObjToFirestoreObj","post","Timestamp","fromDate","firestorePostObjToJsOjb","firestoreObj","toDate","addPostsToFirestore","num","then","posts","collection","doc","set","catch","error","console","err","log","ReducersUtils","sortPostsByDateDesc","sort","Date","unwrapTagsFromPosts","allTags","flat","uniqueTags","Set","uniqueWithQuantity","uniqueTag","name","state","switchTagState","tagName","find","filterPostsBy","filters","dates","searchValue","filtered","switchedOnTags","toLowerCase","includes","switchedOnYears","yearState","getFullYear","switchedOnMonths","months","month","item","monthNameFromDate","unwrapDatesFromPosts","years","yearsWithMonths","postsQuantityByDate","toLocaleString","switchDateState","dateToSwitch","archiveDates","resetFilters","reseted","assign","authShape","displayName","isSignedIn","errorMessage","filtersShape","combineReducers","arguments","action","type","objectSpread","data","toConsumableArray","fetchingError","editedPostId","postId","filteredPosts","auth","filterPosts","unwrapTags","unwrapDates","fetchPosts","dispatch","getState","get","querySnapshot","docs","postsFetchedSuccess","SearchForm","handleSearchFormInputChange","event","target","props","handleSearchInput","react_default","createElement","Form","inline","Link","to","PUBLIC_URL","FormControl","placeholder","onChange","className","Component","SignInForm","possibleConstructorReturn","getPrototypeOf","call","handleSignIn","signIn","formData","password","setState","authFailed","handleHideSignInModal","onSignInFormHide","handleFormInputChange","targetName","targetValue","isFieldValid","checkValidity","formValidation","defineProperty","isFormValid","values","v","isFieldValidated","isFormValidated","Modal","show","signInModalShow","onHide","size","aria-labelledby","centered","Header","closeButton","Title","Body","validated","Group","Control","required","Feedback","Row","Col","role","Button","onClick","disabled","Navbar","handleLogoClick","handleSignInClick","signOut","es_Navbar","bg","variant","Container","Brand","Navbar_SearchForm","Navbar_SignInForm","signedIn","fetchedUserData","mapDispatchToProps","signInWithEmailAndPassword","user","currentUser","userEmail","fetchSignedInUserData","message","NavbarContainer","connect","AboutMe","src","alt","height","href","rel","Tags","onTagClick","preventDefault","key","Badge","Archives","onDateClick","Dates","SidePanel","SidePanel_AboutMe","SidePanel_Tags","SidePanel_Archives","SidePanelContainer","PostsCardHorizontal","postURL","Card","substring","day","ButtonGroup","onEditPost","onRemovePost","PostCardVertical","PostsCard","handleEditPost","handleRemovePost","removePost","HorizontalCard","PostCardHorizontal","VerticalCard","PostCard_PostCardVertical","cardVersion","delete","removePostByIdFromFirestore","PostCardContainer","PostCard","SearchResult","PostCards","react_addons_css_transition_group_default","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","EmptyResult","MainBoard","HeadPosts","headPostsNum","routeParamId","dangerouslySetInnerHTML","__html","Preview","sm","Editor","handleFinishEdit","onFinishEditPost","sourcePost","authDisplayName","handleInputChange","regex","imageURL","prevProps","wasCleared","maxLength","as","rows","pattern","PostEditor_Preview","FormattingHelp","Table","bordered","width","Helper","handleShowFormattingHelp","current","showFormattingHelp","handlePasteExample","shouldClearPastedExample","generatedExample","onPasteExample","PostEditor_FormattingHelp","AddPost","handleAddPost","editedPost","addPost","PostEditor_Helper","PostEditor_Form","addPostToFirestore","PostEditorContainer","PostEditor","Settings","handleRemoveAllPosts","handleUserDataChange","SettingsContainer","App","ErrorContainer","WaitContainer","waitMessages","findIndex","m","waitMessage","setTimeout","MainContainer","BrowserRouter","Switch","Route","exact","path","component","MainPanel_MainBoard","MainPanel_SearchResult","route","MainPanel_Post","match","params","AppContainer","Boolean","window","location","hostname","__webpack_require__","d","__webpack_exports__","process","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b8dd1676.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport DataUtils from './dataUtils'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBU_CK4oTRzwPIOjZWQn8tpF5kOcnESnps',\n  authDomain: 'twistezo-blog.firebaseapp.com',\n  databaseURL: 'https://twistezo-blog.firebaseio.com',\n  projectId: 'twistezo-blog',\n  storageBucket: 'twistezo-blog.appspot.com',\n  messagingSenderId: '1065707028990'\n}\nfirebase.initializeApp(firebaseConfig)\n\nexport default firebase\nexport const firebaseFirestore = firebase.firestore()\n\nexport const fetchPostsFromFirestore = () =>\n  firebaseFirestore\n    .collection('posts')\n    .get()\n    .then(querySnapshot =>\n      querySnapshot.docs.map(doc =>\n        DataUtils.firestorePostObjToJsOjb(doc.data())\n      )\n    )\n    .catch(\n      error => new Error('Errow while fetching posts. Error message: ', error)\n    )\n\nexport const addPostToFirestore = post =>\n  firebaseFirestore\n    .collection('posts')\n    .doc(post.id)\n    .set(DataUtils.jsPostObjToFirestoreObj(post))\n    .catch(\n      error => new Error('Errow while adding post. Error message: ', error)\n    )\n\nexport const removePostByIdFromFirestore = postId =>\n  firebaseFirestore\n    .collection('posts')\n    .doc(postId)\n    .delete()\n    .catch(\n      error => new Error('Errow while removing post. Error message: ', error)\n    )\n\nexport const signInWithEmailAndPassword = (email, password) =>\n  firebase.auth().signInWithEmailAndPassword(email, password)\n\nexport const fetchSignedInUserData = () => {\n  const user = firebase.auth().currentUser\n  const userEmail = user.email\n  const displayName = user.displayName\n  const newDisplayName =\n    displayName === null ? DataUtils.getEmailPrefix(userEmail) : displayName\n  return {\n    name: newDisplayName,\n    email: userEmail\n  }\n}\n\nexport const signOutUser = () => firebase.auth().signOut()\n","class Post {\n  constructor(\n    id,\n    title,\n    shortDescription,\n    text,\n    author,\n    date,\n    tags,\n    mainImage\n  ) {\n    this._id = id\n    this._title = title\n    this._shortDescription = shortDescription\n    this._text = text\n    this._author = author\n    this._date = date\n    this._tags = tags\n    this._mainImage = mainImage\n  }\n\n  get id() {\n    return this._id\n  }\n\n  get title() {\n    return this._title\n  }\n\n  get shortDescription() {\n    return this._shortDescription\n  }\n\n  get text() {\n    return this._text\n  }\n\n  get author() {\n    return this._author\n  }\n\n  get date() {\n    return this._date\n  }\n\n  set date(date) {\n    this._date = date\n  }\n\n  get tags() {\n    return this._tags\n  }\n\n  get mainImage() {\n    return this._mainImage\n  }\n}\n\nexport { Post }\n","import Chance from 'chance'\nimport uuidv1 from 'uuid/v1'\nimport DataUtils from './dataUtils'\nimport { Post } from './'\n\nclass DataGenerator {\n  constructor() {\n    this._data = []\n    this._tags = ['#javascript', '#css', '#rust', '#webpack', '#cargo']\n  }\n\n  _generate = quantity => {\n    const chance = new Chance()\n    const examplePost = DataUtils.generateExampleMarkdownPost()\n    for (let i = 0; i < quantity; i++) {\n      this._data.push(\n        new Post(\n          uuidv1(),\n          examplePost.title,\n          examplePost.shortDescription,\n          examplePost.text,\n          'twistezo',\n          chance.date({\n            string: false,\n            american: false,\n            year: DataUtils.randomArrayItem([2016, 2017, 2018])\n          }),\n          DataUtils.arrayFromArrayRandomItems(this._tags),\n          'https://avatars.dicebear.com/v2/identicon/' +\n            chance.word({ length: 15 }) +\n            '.svg'\n        )\n      )\n    }\n\n    return DataUtils.isNullEmptyOrUndefinded(this._data)\n      ? new Error('Generate data failed.')\n      : this._data\n  }\n\n  fetch = quantity =>\n    new Promise((resolve, reject) => {\n      const result = this._generate(quantity)\n      if (result instanceof Error) {\n        reject(\n          new Error('Error while fetching data. The data seems to be broken.')\n        )\n      } else {\n        resolve(result)\n      }\n    })\n}\n\nexport default DataGenerator\n","import Chance from 'chance'\nimport showdown from 'showdown'\nimport firebase from './firebase'\nimport { firebaseFirestore } from '../data/firebase'\nimport hljs from 'highlight.js'\nimport '../styles/_dracula.scss'\nimport { Post } from '../data/index'\nimport DataGenerator from './generator'\n\nclass DataUtils {\n  static randomArrayItem = array =>\n    array[Math.floor(Math.random() * array.length)]\n\n  static isNullEmptyOrUndefinded = value =>\n    value === null || value === [] || value === undefined || value.length === 0\n\n  static arrayFromArrayRandomItems = array => {\n    const result = Array.from(array).filter(() => DataUtils.randomBoolean())\n    return result.length === 0 ? [array[0]] : result\n  }\n\n  static randomBoolean = () => Math.random() >= 0.5\n\n  static arrayContainsAllElementsFromAnother = (array0, array1) =>\n    array1\n      .map(a => {\n        return array0.some(b => {\n          return b === a\n        })\n      })\n      .every(e => e)\n\n  static nextArrayItem = (array, currentIndex) =>\n    array[(currentIndex + 1) % array.length]\n\n  static getEmailPrefix = email => email.slice(0, email.indexOf('@'))\n\n  /**\n   * Convert sentence with words to array of tags.\n   * Ex. `java rust scss` to `['#java', '#rust', '#scss']`\n   * @param {string} words Sentence of tags.\n   * @return {array} Array of hashtags.\n   */\n  static convertSentenceToTagsArray = words =>\n    words !== null && words !== undefined && words !== ''\n      ? words.split(' ').map(word => '#' + word)\n      : []\n\n  /**\n   * Convert array of tags to sentence with words.\n   * Ex. `['#java', '#rust', '#scss']` to `java rust scss`\n   * @param {array} tagsArray Array of hashtags.\n   * @return {string} Sentence of tags.\n   */\n  static convertTagsArrayToSentence = tagsArray => {\n    const joined = tagsArray.map(tag => tag.slice(1)).join(' ')\n    return joined\n  }\n\n  static generateExampleMarkdownPost = () => {\n    const chance = new Chance()\n    const randomSentence = words => chance.sentence({ words })\n    const randomParagraph = sentences =>\n      chance.paragraph({\n        sentences\n      })\n\n    const word = length => chance.word({ length })\n    const randomImageSrc = `https://avatars.dicebear.com/v2/identicon/${word(\n      15\n    )}.svg`\n    const title = randomSentence(6)\n    const shortDescription = randomParagraph(3)\n    const text = `### ${randomSentence(6)}\n    \\n ${randomParagraph(10)}\n    \\n![Alt Text](${randomImageSrc} =200x200)\n    \\nPhoto: *${randomSentence(6)}*\n    \\nVisit: <http://www.example.com>\n    \\n### ${randomSentence(6)}\n    \\n${randomParagraph(6)}\n    \\n${word()} ${word()}:\n    \\n* ${word()}\n    \\n* ${word()}\n    \\n* ${word()}\n    \\n### ${randomSentence(6)}\n    \\nSome code:\n    \\n\n    \\`\\`\\`\n    function resolveAfter2Seconds() {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved');\n        }, 2000);\n      });\n    }\n    \n    async function asyncCall() {\n      console.log('calling');\n      var result = await resolveAfter2Seconds();\n      console.log(result);\n      // expected output: 'resolved'\n    }\n    \n    asyncCall();\n    \\`\\`\\`\n    `\n    const tags = ['#rust', '#java', '#scss']\n    return {\n      title,\n      shortDescription,\n      text,\n      randomImageSrc,\n      tags\n    }\n  }\n\n  static convertMarkdownToHtml = markdownString =>\n    new showdown.Converter({ noHeaderId: true }).makeHtml(markdownString)\n\n  static updateCodeSyntaxHighlighting = () => {\n    document.querySelectorAll('pre code').forEach(block => {\n      hljs.highlightBlock(block)\n    })\n  }\n\n  static jsPostObjToFirestoreObj = post => ({\n    id: post.id,\n    title: post.title,\n    shortDescription: post.shortDescription,\n    text: post.text,\n    author: post.author,\n    date: firebase.firestore.Timestamp.fromDate(post.date),\n    tags: post.tags,\n    mainImage: post.mainImage\n  })\n\n  static firestorePostObjToJsOjb = firestoreObj =>\n    new Post(\n      firestoreObj.id,\n      firestoreObj.title,\n      firestoreObj.shortDescription,\n      firestoreObj.text,\n      firestoreObj.author,\n      firestoreObj.date.toDate(),\n      firestoreObj.tags,\n      firestoreObj.mainImage\n    )\n\n  /**\n   * Use only for first time writing to firestore random generated data.\n   * It creates in firestore  `posts` collection with documents `post` by `post.id`.\n   */\n  static addPostsToFirestore = num => {\n    new DataGenerator()\n      .fetch(num)\n      .then(posts => {\n        posts.forEach(post => {\n          firebaseFirestore\n            .collection('posts')\n            .doc(post.id)\n            .set(DataUtils.jsPostObjToFirestoreObj(post))\n            .catch(error =>\n              console.error('Skipping write document cause: ', error)\n            )\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport default DataUtils\n","import DataUtils from '../data/dataUtils'\n\nclass ReducersUtils {\n  static sortPostsByDateDesc = posts =>\n    posts.sort((a, b) => new Date(b.date) - new Date(a.date))\n\n  static unwrapTagsFromPosts = posts => {\n    const allTags = Array.from(posts.map(post => post.tags).flat())\n    const uniqueTags = Array.from(new Set(allTags))\n\n    let uniqueWithQuantity = []\n    uniqueTags.forEach(uniqueTag =>\n      uniqueWithQuantity.push({\n        name: uniqueTag,\n        quantity: allTags.filter(tag => tag === uniqueTag).length,\n        state: false\n      })\n    )\n\n    return uniqueWithQuantity\n  }\n\n  static switchTagState = (tagName, tags) => {\n    let tag = tags.find(tag => tag.name === tagName)\n    tag.state = !tag.state\n    return tags\n  }\n\n  static filterPostsBy = (posts, filters) => {\n    const tags = filters.tags\n    const dates = filters.dates\n    const searchValue = filters.searchValue\n\n    let filtered = []\n    const switchedOnTags = tags.filter(tag => tag.state).map(tag => tag.name)\n    filtered = posts.filter(\n      post =>\n        // by tags\n        DataUtils.arrayContainsAllElementsFromAnother(\n          post.tags,\n          switchedOnTags\n        ) &&\n        // by searchValue (title)\n        post.title.toLowerCase().includes(searchValue.toLowerCase())\n    )\n\n    // by date - years\n    let switchedOnYears = dates\n      .filter(date => date.yearState)\n      .map(date => date.year)\n    if (switchedOnYears.length !== 0) {\n      filtered = filtered.filter(post =>\n        DataUtils.arrayContainsAllElementsFromAnother(switchedOnYears, [\n          post.date.getFullYear()\n        ])\n      )\n    }\n\n    // by date - months\n    let switchedOnMonths = dates\n      .map(date =>\n        date.months\n          .map(month => ({\n            year: date.year,\n            month: month.name,\n            state: month.state\n          }))\n          .flat()\n      )\n      .flat()\n      .filter(month => month.state)\n    if (switchedOnMonths.length !== 0) {\n      filtered = filtered.filter(\n        post =>\n          switchedOnMonths.some(\n            item => item.year === post.date.getFullYear()\n          ) &&\n          switchedOnMonths.some(\n            item => item.month === ReducersUtils.monthNameFromDate(post.date)\n          )\n      )\n    }\n    return ReducersUtils.sortPostsByDateDesc(filtered)\n  }\n\n  static unwrapDatesFromPosts = posts => {\n    const years = Array.from(\n      new Set(posts.map(post => post.date.getFullYear()))\n    )\n\n    let yearsWithMonths = []\n    years.forEach(year =>\n      yearsWithMonths.push({\n        year: year,\n        yearState: false,\n        months: Array.from(\n          new Set(\n            posts\n              .filter(post => post.date.getFullYear() === year)\n              .map(post => ReducersUtils.monthNameFromDate(post.date))\n          )\n        ).map(month => ({\n          name: month,\n          quantity: ReducersUtils.postsQuantityByDate(posts, month, year),\n          state: false\n        }))\n      })\n    )\n    return yearsWithMonths\n  }\n\n  static postsQuantityByDate = (posts, month, year) =>\n    posts.filter(\n      post =>\n        post.date.getFullYear() === year &&\n        ReducersUtils.monthNameFromDate(post.date) === month\n    ).length\n\n  static monthNameFromDate = date =>\n    date.toLocaleString('en-us', { month: 'long' })\n\n  static switchDateState = (dateToSwitch, archiveDates) => {\n    if (dateToSwitch.month === undefined) {\n      let date = archiveDates.find(date => date.year === dateToSwitch.year)\n      date.yearState = !date.yearState\n      // reset all months state\n      archiveDates.forEach(date =>\n        date.months.forEach(month => (month.state = false))\n      )\n    } else {\n      let month = archiveDates\n        .find(date => date.year === dateToSwitch.year)\n        .months.find(month => month.name === dateToSwitch.month)\n      month.state = !month.state\n      // reset all years state\n      archiveDates.forEach(date => (date.yearState = false))\n    }\n    return archiveDates\n  }\n\n  static resetFilters = filters => {\n    let reseted = Object.assign({}, filters)\n    reseted.tags.forEach(tag => (tag.state = false))\n    reseted.dates.forEach(date => (date.yearState = false))\n    reseted.dates.forEach(date =>\n      date.months.forEach(month => (month.state = false))\n    )\n    reseted.searchValue = ''\n    return reseted\n  }\n}\n\nexport default ReducersUtils\n","const authShape = {\n  displayName: '',\n  email: '',\n  isSignedIn: false,\n  errorMessage: ''\n}\n\nexport const auth = (state = authShape, action) => {\n  switch (action.type) {\n    case 'SIGNED_IN':\n      return {\n        ...state,\n        isSignedIn: action.isSignedIn,\n        errorMessage: action.errorMessage\n      }\n    case 'FETCHED_USER_DATA':\n      return {\n        ...state,\n        displayName: action.displayName,\n        email: action.email\n      }\n    default:\n      return state\n  }\n}\n","import ReducersUtils from './reducersUtils'\n\nexport const filteredPosts = (state = [], action) => {\n  switch (action.type) {\n    case 'FILTER_POSTS':\n      return [...ReducersUtils.filterPostsBy(action.posts, action.filters)]\n    default:\n      return state\n  }\n}\n\nconst filtersShape = {\n  tags: [],\n  dates: [],\n  searchValue: ''\n}\n\nexport const filters = (state = filtersShape, action) => {\n  switch (action.type) {\n    case 'UNWRAP_TAGS':\n      return {\n        ...state,\n        tags: [...ReducersUtils.unwrapTagsFromPosts(action.posts)]\n      }\n    case 'SWITCH_TAG':\n      return {\n        ...state,\n        tags: [...ReducersUtils.switchTagState(action.tagName, state.tags)]\n      }\n    case 'UNWRAP_DATES':\n      return {\n        ...state,\n        dates: [...ReducersUtils.unwrapDatesFromPosts(action.posts)]\n      }\n    case 'SWITCH_DATE_STATE':\n      return {\n        ...state,\n        dates: [...ReducersUtils.switchDateState(action.date, state.dates)]\n      }\n    case 'HANDLE_SEARCH_INPUT':\n      return {\n        ...state,\n        searchValue: action.value\n      }\n    case 'RESET_FILTERS':\n      return ReducersUtils.resetFilters(action.filters)\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { posts } from './posts'\nimport { auth } from './auth'\nimport { filters, filteredPosts } from './filters'\n\nexport default combineReducers({\n  posts,\n  filteredPosts,\n  filters,\n  auth\n})\n","import ReducersUtils from './reducersUtils'\n\nexport const posts = (state = [], action) => {\n  switch (action.type) {\n    case 'POSTS_FETCHED_SUCCESS':\n      return {\n        ...state,\n        data: [...ReducersUtils.sortPostsByDateDesc(action.posts)],\n        fetchingError: null\n      }\n    case 'POSTS_FETCHED_ERROR':\n      return {\n        ...state,\n        data: [],\n        fetchingError: action.fetchingError\n      }\n    case 'EDITED_POST_ID':\n      return {\n        ...state,\n        editedPostId: action.postId\n      }\n    default:\n      return state\n  }\n}\n","export const filterPosts = (posts, filters) => ({\n  type: 'FILTER_POSTS',\n  posts,\n  filters\n})\n\nexport const unwrapTags = posts => ({\n  type: 'UNWRAP_TAGS',\n  posts\n})\n\nexport const switchTagState = tagName => ({\n  type: 'SWITCH_TAG',\n  tagName\n})\n\nexport const unwrapDates = posts => ({\n  type: 'UNWRAP_DATES',\n  posts\n})\n\nexport const switchDateState = date => ({\n  type: 'SWITCH_DATE_STATE',\n  date\n})\n\nexport const handleSearchInput = value => ({\n  type: 'HANDLE_SEARCH_INPUT',\n  value\n})\n\nexport const resetFilters = filters => ({\n  type: 'RESET_FILTERS',\n  filters\n})\n","import {\n  fetchPostsFromFirestore,\n  addPostToFirestore,\n  removePostByIdFromFirestore\n} from '../data/firebase'\n\nimport { unwrapTags, unwrapDates, filterPosts } from './filters'\n\nconst postsFetchedSuccess = posts => ({\n  type: 'POSTS_FETCHED_SUCCESS',\n  posts\n})\n\nconst postsFetchedError = fetchingError => ({\n  type: 'POSTS_FETCHED_ERROR',\n  fetchingError\n})\n\nexport const fetchPosts = () => (dispatch, getState) => {\n  fetchPostsFromFirestore()\n    .then(posts => {\n      dispatch(postsFetchedSuccess(posts))\n      dispatch(unwrapTags(posts))\n      dispatch(unwrapDates(posts))\n      dispatch(filterPosts(posts, getState().filters))\n    })\n    .catch(error => dispatch(postsFetchedError(error)))\n}\n\nexport const addPost = post => dispatch => {\n  addPostToFirestore(post).then(() => dispatch(fetchPosts()))\n}\n\nexport const removePost = postId => dispatch => {\n  removePostByIdFromFirestore(postId)\n    .then(() => dispatch(fetchPosts()))\n    .catch(err => console.log(err))\n}\n\nexport const editedPostId = postId => ({\n  type: 'EDITED_POST_ID',\n  postId\n})\n","import React, { Component } from 'react'\nimport { Form, FormControl } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { PUBLIC_URL } from '../../index'\n\nclass SearchForm extends Component {\n  handleSearchFormInputChange = event => {\n    const value = event.target.value\n    this.props.handleSearchInput(value)\n\n    let filters = Object.assign({}, this.props.filters)\n    filters.searchValue = value\n    this.props.filterPosts(this.props.posts, filters)\n  }\n\n  render() {\n    return (\n      <Form inline>\n        <Link to={PUBLIC_URL + '/search'}>\n          <FormControl\n            name='search'\n            type='text'\n            value={this.props.filters.searchValue}\n            placeholder='search'\n            onChange={this.handleSearchFormInputChange}\n          />\n        </Link>\n        <i className='fas fa-search' />\n      </Form>\n    )\n  }\n}\n\nexport default SearchForm\n","import React, { Component } from 'react'\nimport { Form, Col, Row, Button, Modal } from 'react-bootstrap'\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      formData: {\n        email: '',\n        password: ''\n      },\n      formValidation: {\n        email: false,\n        password: false\n      },\n      isFormValid: false,\n      isFormValidated: false,\n      authFailed: false\n    }\n  }\n\n  handleSignIn = () => {\n    this.props\n      .signIn(this.state.formData.email, this.state.formData.password)\n      .then(result => {\n        if (result.isSignedIn === false && result.errorMessage !== '') {\n          this.setState({\n            ...this.state,\n            formData: {\n              ...this.state.formData,\n              password: ''\n            },\n            authFailed: true\n          })\n        } else {\n          this.setState({ ...this.state, authFailed: false })\n          this.handleHideSignInModal()\n        }\n      })\n  }\n\n  handleHideSignInModal = () => {\n    this.props.onSignInFormHide()\n  }\n\n  handleFormInputChange = event => {\n    const targetName = event.target.name\n    const targetValue = event.target.value\n    const isFieldValid = event.target.checkValidity() === true\n    let formValidation = { ...this.state.formValidation }\n    formValidation[targetName] = isFieldValid\n\n    this.setState(() => ({\n      formData: {\n        ...this.state.formData,\n        [targetName]: targetValue\n      },\n      formValidation,\n      isFormValid: Object.values(formValidation).every(v => v === true),\n      isFieldValidated: true\n    }))\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.signInModalShow}\n        onHide={this.props.onSignInFormHide}\n        size='sm'\n        aria-labelledby='contained-modal-title-vcenter'\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id='contained-modal-title-vcenter'>Sign in</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form className='pt-3' validated={this.state.isFieldValidated}>\n            <Form.Group>\n              <Form.Control\n                name='email'\n                value={this.state.formData.email}\n                type='email'\n                placeholder='Email'\n                required\n                onChange={this.handleFormInputChange}\n              />\n              <Form.Control.Feedback type='invalid'>\n                Incorrect email format.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                name='password'\n                value={this.state.formData.password}\n                type='password'\n                placeholder='Password'\n                required\n                onChange={this.handleFormInputChange}\n              />\n              <Form.Control.Feedback type='invalid'>\n                Password is required.\n              </Form.Control.Feedback>\n            </Form.Group>\n            {this.state.authFailed && (\n              <Row className='pt-2 text-center'>\n                <Col>\n                  <div className='alert alert-danger' role='alert'>\n                    Wrong email or password.\n                  </div>\n                </Col>\n              </Row>\n            )}\n            <Row className='pt-3 pb-3 text-center'>\n              <Col>\n                <Button onClick={this.handleHideSignInModal}>Back</Button>\n              </Col>\n              <Col>\n                <Button\n                  disabled={!this.state.isFormValid}\n                  onClick={this.handleSignIn}\n                >\n                  Ok\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    )\n  }\n}\n\nexport default SignInForm\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Navbar as BsNavbar, Button, Container } from 'react-bootstrap'\nimport SearchForm from './SearchForm'\nimport SignInForm from './SignInForm'\nimport { PUBLIC_URL } from '../../index'\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { signInModalShow: false }\n  }\n\n  handleLogoClick = () => {\n    this.props.resetFilters(this.props.filters)\n    this.props.filterPosts(this.props.posts, {\n      tags: [],\n      dates: [],\n      searchValue: ''\n    })\n  }\n\n  handleSignInClick = () => {\n    if (this.props.auth.isSignedIn) {\n      this.props.signOut()\n    } else {\n      this.setState({ signInModalShow: true })\n    }\n  }\n\n  handleHideSignInModal = () => {\n    this.setState({ signInModalShow: false })\n  }\n\n  render() {\n    const isSignedIn = this.props.auth.isSignedIn\n    return (\n      <BsNavbar bg='dark' variant='light' className='sticky-top text-center'>\n        <Container>\n          <div className='d-flex justify-content-between flex-fill align-items-center'>\n            <Link to={PUBLIC_URL + '/'} onClick={this.handleLogoClick}>\n              <BsNavbar.Brand className='ml-4'>\n                John Smith's cave\n              </BsNavbar.Brand>\n            </Link>\n            <div className='d-flex'>\n              <SearchForm\n                posts={this.props.posts}\n                filters={this.props.filters}\n                filterPosts={this.props.filterPosts}\n                handleSearchInput={this.props.handleSearchInput}\n              />\n              {isSignedIn && (\n                <div className='d-flex'>\n                  <div className='hello-user d-flex align-self-center ml-2'>\n                    {'Hello, ' + this.props.auth.displayName + '!'}\n                  </div>\n                  <Link className='ml-4' to={PUBLIC_URL + '/addpost'}>\n                    <Button variant='outline-info'>\n                      Add Post&nbsp; <i className='fas fa-pen-alt' />\n                    </Button>\n                  </Link>\n                  <Link className='ml-2' to={PUBLIC_URL + '/settings'}>\n                    <Button variant='outline-info'>\n                      <i className='fas fa-cogs' />\n                    </Button>\n                  </Link>\n                </div>\n              )}\n              <Link to={PUBLIC_URL}>\n                <Button\n                  className='ml-2 mr-4'\n                  variant='outline-info'\n                  onClick={this.handleSignInClick}\n                >\n                  {isSignedIn ? (\n                    <div>\n                      Sign out &nbsp; <i className='fas fa-sign-out-alt' />\n                    </div>\n                  ) : (\n                    <div>\n                      Sign in &nbsp; <i className='fas fa-sign-in-alt' />\n                    </div>\n                  )}\n                </Button>\n              </Link>\n            </div>\n          </div>\n          <SignInForm\n            signInModalShow={this.state.signInModalShow}\n            onSignInFormHide={this.handleHideSignInModal}\n            auth={this.props.auth}\n            signIn={this.props.signIn}\n          />\n        </Container>\n      </BsNavbar>\n    )\n  }\n}\n\nexport default Navbar\n","import {\n  signInWithEmailAndPassword,\n  fetchSignedInUserData,\n  signOutUser\n} from '../data/firebase'\n\nexport const signedIn = (isSignedIn, errorMessage) => ({\n  type: 'SIGNED_IN',\n  isSignedIn,\n  errorMessage\n})\n\nexport const fetchedUserData = (displayName, email) => ({\n  type: 'FETCHED_USER_DATA',\n  displayName,\n  email\n})\n\nexport const signIn = (email, password) => dispatch =>\n  signInWithEmailAndPassword(email, password)\n    .then(() => dispatch(signedIn(true, '')))\n    .then(() => fetchSignedInUserData())\n    .then(data => dispatch(fetchedUserData(data.name, data.email)))\n    .catch(error => dispatch(signedIn(false, error.message)))\n\nexport const signOut = () => dispatch =>\n  signOutUser()\n    .then(() => dispatch(signedIn(false, '')))\n    .then(() => dispatch(fetchedUserData('', '')))\n","import { connect } from 'react-redux'\nimport Navbar from '../components/Navbar/Navbar'\nimport { signIn, signOut } from '../actions/auth'\nimport {\n  filterPosts,\n  handleSearchInput,\n  resetFilters\n} from '../actions/filters'\n\nconst mapStateToProps = state => ({\n  posts: state.posts.data,\n  filters: state.filters,\n  auth: state.auth\n})\n\nconst mapDispatchToProps = {\n  filterPosts,\n  handleSearchInput,\n  resetFilters,\n  signIn,\n  signOut\n}\n\nexport const NavbarContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Navbar)\n","import React, { Component } from 'react'\nimport { Container, Row } from 'react-bootstrap'\n\nclass AboutMe extends Component {\n  render() {\n    return (\n      <Container id='about-me'>\n        <h3 className='pb-2'>About Me</h3>\n        <Row className='pb-3'>\n          <img\n            src='https://picsum.photos/200/?random'\n            alt=''\n            className='rounded float-left'\n            height='100'\n          />\n        </Row>\n        <Row className='pb-2'>\n          <h5>John Smith</h5>\n          <span>Full-stack developer</span>\n        </Row>\n        <Row className=''>\n          <a\n            href='https://twitter.com/'\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            <i className='fab fa-twitter' />\n          </a>\n          <a\n            href='https://facebook.com'\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            <i className='fab fa-facebook' />\n          </a>\n          <a\n            href='https://linkedin.com'\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            <i className='fab fa-linkedin' />\n          </a>\n          <a\n            href='https://github.com'\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            <i className='fab fa-github' />\n          </a>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default AboutMe\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Badge } from 'react-bootstrap'\nimport { PUBLIC_URL } from '../../index'\n\nclass Tags extends Component {\n  onTagClick = (event, tagName) => {\n    this.props.switchTagState(tagName)\n    this.props.filterPosts(this.props.posts, this.props.filters)\n    event.preventDefault()\n  }\n\n  Tags = () => {\n    const tags = this.props.filters.tags\n    return tags.length > 0\n      ? tags.map(tag => (\n          <div\n            className='mr-2 alert-link'\n            key={tag.name}\n            onClick={event => this.onTagClick(event, tag.name)}\n          >\n            <Link to={PUBLIC_URL + '/search'}>\n              {tag.name}\n              {tag.state ? (\n                <i className='far fa-check-square ml-2' />\n              ) : (\n                <Badge variant='secondary' className='ml-2'>\n                  {tag.quantity}\n                </Badge>\n              )}\n            </Link>\n          </div>\n        ))\n      : ''\n  }\n\n  render() {\n    return (\n      <Container>\n        <div>\n          <h3>Tags</h3>\n          <span className='d-flex flex-wrap'>\n            <this.Tags />\n          </span>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default Tags\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Badge } from 'react-bootstrap'\nimport { PUBLIC_URL } from '../../index'\n\nclass Archives extends Component {\n  onDateClick = (event, year, month) => {\n    this.props.switchDateState({ year, month })\n    this.props.filterPosts(this.props.posts, this.props.filters)\n    event.preventDefault()\n  }\n\n  Dates = () => {\n    const dates = this.props.filters.dates\n    return dates.length > 0\n      ? dates.map(date => (\n          <ul key={date.year} className='list-unstyled'>\n            <div\n              className='alert-link'\n              onClick={event => this.onDateClick(event, date.year)}\n            >\n              <Link to={PUBLIC_URL + '/search'}>\n                {date.year}\n                {date.yearState ? (\n                  <i className='far fa-check-square ml-2' />\n                ) : (\n                  ''\n                )}\n              </Link>\n            </div>\n            {date.months.map(month => (\n              <li key={month.name}>\n                <div\n                  className='alert-link'\n                  onClick={event =>\n                    this.onDateClick(event, date.year, month.name)\n                  }\n                >\n                  <Link to={PUBLIC_URL + '/search'}>\n                    {month.name}\n                    {month.state ? (\n                      <i className='far fa-check-square ml-2' />\n                    ) : (\n                      <Badge variant='secondary' className='ml-2'>\n                        {month.quantity}\n                      </Badge>\n                    )}\n                  </Link>\n                </div>\n              </li>\n            ))}\n          </ul>\n        ))\n      : ''\n  }\n\n  render() {\n    return (\n      <Container>\n        <h3>Archive posts</h3>\n        <this.Dates />\n      </Container>\n    )\n  }\n}\n\nexport default Archives\n","import React, { Component } from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport AboutMe from './AboutMe'\nimport Tags from './Tags'\nimport Archives from './Archives'\n\nclass SidePanel extends Component {\n  render() {\n    return (\n      <Container>\n        <Row className='pb-5'>\n          <AboutMe />\n        </Row>\n        <Row className='pb-5'>\n          <Tags\n            posts={this.props.posts}\n            filters={this.props.filters}\n            switchTagState={this.props.switchTagState}\n            filterPosts={this.props.filterPosts}\n          />\n        </Row>\n        <Row className='pb-5'>\n          <Archives\n            posts={this.props.posts}\n            filters={this.props.filters}\n            switchDateState={this.props.switchDateState}\n            filterPosts={this.props.filterPosts}\n          />\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default SidePanel\n","import { connect } from 'react-redux'\nimport {\n  filterPosts,\n  switchDateState,\n  switchTagState\n} from '../actions/filters'\nimport SidePanel from '../components/SidePanel/SidePanel'\n\nconst mapStateToProps = state => ({\n  posts: state.posts.data,\n  filters: state.filters\n})\n\nconst mapDispatchToProps = { filterPosts, switchDateState, switchTagState }\n\nexport const SidePanelContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SidePanel)\n","import React, { Component } from 'react'\nimport { Row, Card, Col, Button, ButtonGroup } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { PUBLIC_URL } from '../../../index'\n\nclass PostsCardHorizontal extends Component {\n  render() {\n    const post = this.props.post\n    const postURL = this.props.postURL\n    return (\n      <Card className='mb-3'>\n        <div className='row no-gutters'>\n          <div className='col-md-3 d-flex flex-wrap align-items-center'>\n            <Link to={postURL}>\n              <img src={post.mainImage} className='card-img pl-3' alt='' />\n            </Link>\n          </div>\n          <div className='col-md-9'>\n            <div className='card-body'>\n              <Link to={postURL}>\n                <h5 className='card-title'>{post.title}</h5>\n              </Link>\n              <p className='card-text'>\n                {post.shortDescription.substring(0, 150) + '...'}\n              </p>\n              <span className='card-text'>\n                <Row>\n                  <Col>\n                    <p className='text-muted mb-0'>\n                      {post.author +\n                        ', ' +\n                        post.date.toLocaleString('pl-PL', {\n                          day: 'numeric',\n                          month: 'numeric',\n                          year: 'numeric'\n                        })}\n                    </p>\n                    <p className='text-muted mb-0'>\n                      {post.tags.map(tag => (\n                        <span key={tag} className='pr-2'>\n                          {tag}\n                        </span>\n                      ))}\n                    </p>\n                  </Col>\n                  {this.props.isSignedIn && (\n                    <Col className='align-self-center'>\n                      <ButtonGroup className='float-right btn-group-sm'>\n                        <Link to={PUBLIC_URL + '/editpost'}>\n                          <Button\n                            variant='outline-primary'\n                            onClick={this.props.onEditPost}\n                          >\n                            Edit &nbsp; <i className='fas fa-edit' />\n                          </Button>\n                        </Link>\n                        <Button\n                          variant='outline-primary'\n                          className='ml-3'\n                          onClick={this.props.onRemovePost}\n                        >\n                          Remove &nbsp; <i className='fas fa-trash-alt' />\n                        </Button>\n                      </ButtonGroup>\n                    </Col>\n                  )}\n                </Row>\n              </span>\n            </div>\n          </div>\n        </div>\n      </Card>\n    )\n  }\n}\n\nexport default PostsCardHorizontal\n","import React, { Component } from 'react'\nimport { Col, Card, Button, ButtonGroup } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { PUBLIC_URL } from '../../../index'\n\nclass PostCardVertical extends Component {\n  render() {\n    const post = this.props.post\n    const postURL = this.props.postURL\n    return (\n      <Card id='post-card-vertical' className='mb-3'>\n        <Link to={postURL}>\n          <img src={post.mainImage} className='card-img-top pt-3' alt='' />\n        </Link>\n        <div className='card-body'>\n          <Link to={postURL}>\n            <h5 className='card-title'>{post.title}</h5>\n          </Link>\n        </div>\n        <div className='card-footer'>\n          <p className='text-muted mb-0'>\n            {post.author +\n              ', ' +\n              post.date.toLocaleString('pl-PL', {\n                day: 'numeric',\n                month: 'numeric',\n                year: 'numeric'\n              })}\n          </p>\n          <p className='text-muted mb-0'>\n            {post.tags.map(tag => (\n              <span key={tag} className='pr-2'>\n                {tag}\n              </span>\n            ))}\n          </p>\n          {this.props.isSignedIn && (\n            <Col className='align-self-center text-center pt-2'>\n              <ButtonGroup className='btn-group-sm'>\n                <Link to={PUBLIC_URL + '/editpost'}>\n                  <Button\n                    variant='outline-primary'\n                    onClick={this.props.onEditPost}\n                  >\n                    Edit &nbsp; <i className='fas fa-edit' />\n                  </Button>\n                </Link>\n                <Button\n                  variant='outline-primary'\n                  className='ml-3'\n                  onClick={this.props.onRemovePost}\n                >\n                  Remove &nbsp; <i className='fas fa-trash-alt' />\n                </Button>\n              </ButtonGroup>\n            </Col>\n          )}\n        </div>\n      </Card>\n    )\n  }\n}\n\nexport default PostCardVertical\n","import React, { Component } from 'react'\nimport { PUBLIC_URL } from '../../../index'\nimport PostCardHorizontal from './PostCardHorizontal'\nimport PostCardVertical from './PostCardVertical'\n\nclass PostsCard extends Component {\n  handleEditPost = () => {\n    this.props.editedPostId(this.props.post.id)\n  }\n  handleRemovePost = () => {\n    this.props.removePost(this.props.post.id)\n  }\n\n  HorizontalCard = props => (\n    <PostCardHorizontal\n      post={props.post}\n      postURL={props.postURL}\n      onEditPost={this.handleEditPost}\n      onRemovePost={this.handleRemovePost}\n      isSignedIn={props.isSignedIn}\n    />\n  )\n\n  VerticalCard = props => (\n    <PostCardVertical\n      post={props.post}\n      postURL={props.postURL}\n      onEditPost={this.handleEditPost}\n      onRemovePost={this.handleRemovePost}\n      isSignedIn={props.isSignedIn}\n    />\n  )\n\n  render() {\n    const post = this.props.post\n    const postURL = PUBLIC_URL + '/post/id-' + post.id\n    const isSignedIn = this.props.isSignedIn\n    const cardVersion = this.props.cardVersion\n    const card =\n      cardVersion === 'horizontal' ? (\n        <this.HorizontalCard\n          post={post}\n          postURL={postURL}\n          isSignedIn={isSignedIn}\n        />\n      ) : (\n        <this.VerticalCard\n          post={post}\n          postURL={postURL}\n          isSignedIn={isSignedIn}\n        />\n      )\n    return card\n  }\n}\n\nexport default PostsCard\n","import { connect } from 'react-redux'\nimport PostCard from '../components/MainPanel/PostCard/PostCard'\nimport { removePost, editedPostId } from '../actions/posts'\n\nconst mapStateToProps = state => ({\n  isSignedIn: state.auth.isSignedIn\n})\n\nconst mapDispatchToProps = { removePost, editedPostId }\n\nexport const PostCardContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostCard)\n","import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { PostCardContainer } from '../../containers/PostCardContainer'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\n\nclass SearchResult extends Component {\n  PostCards = () => {\n    return this.props.filteredPosts.map(post => (\n      <ReactCSSTransitionGroup\n        transitionName='search-result'\n        transitionAppear={true}\n        transitionAppearTimeout={750}\n        transitionEnter={false}\n        transitionLeave={false}\n        key={post.id}\n      >\n        <PostCardContainer\n          key={post.id}\n          cardVersion={'horizontal'}\n          post={post}\n        />\n      </ReactCSSTransitionGroup>\n    ))\n  }\n\n  EmptyResult = () => {\n    return (\n      <div className='text-center pt-5'>\n        <div className='pb-2'>\n          <h2>Nothing here...</h2>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.props.filteredPosts.length !== 0 ? (\n          <this.PostCards />\n        ) : (\n          <this.EmptyResult />\n        )}\n      </Container>\n    )\n  }\n}\n\nexport default SearchResult\n","import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { PostCardContainer } from '../../containers/PostCardContainer'\n\nclass MainBoard extends Component {\n  static headPostsNum = 2\n\n  HeadPosts = () => {\n    return (\n      <div className='card-deck'>\n        {this.props.filteredPosts.slice(0, MainBoard.headPostsNum).map(post => (\n          <PostCardContainer\n            key={post.id}\n            cardVersion={'vertical'}\n            post={post}\n          />\n        ))}\n      </div>\n    )\n  }\n\n  PostCards = () => {\n    return this.props.filteredPosts\n      .slice(MainBoard.headPostsNum)\n      .map(post => (\n        <PostCardContainer\n          key={post.id}\n          cardVersion={'horizontal'}\n          post={post}\n        />\n      ))\n  }\n\n  render() {\n    return (\n      <Container>\n        <h3 className='pb-3'>Latest posts</h3>\n        <this.HeadPosts />\n        <hr className='pb-2' />\n        <this.PostCards />\n      </Container>\n    )\n  }\n}\n\nexport default MainBoard\n","import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap'\nimport DataUtils from '../../data/dataUtils'\n\nclass Post extends Component {\n  componentDidMount() {\n    DataUtils.updateCodeSyntaxHighlighting()\n  }\n\n  componentDidUpdate() {\n    DataUtils.updateCodeSyntaxHighlighting()\n  }\n\n  render() {\n    const post = this.props.posts.find(\n      post => post.id === this.props.routeParamId\n    )\n    const text = DataUtils.convertMarkdownToHtml(post.text)\n    return (\n      <Container>\n        <h1>{post.title}</h1>\n        <p>{post.shortDescription}</p>\n        <div\n          className='content pt-3'\n          dangerouslySetInnerHTML={{ __html: text }}\n        />\n      </Container>\n    )\n  }\n}\n\nexport default Post\n","import React, { Component } from 'react'\nimport DataUtils from '../../../data/dataUtils'\nimport { Col } from 'react-bootstrap'\n\nclass Preview extends Component {\n  componentDidMount() {\n    DataUtils.updateCodeSyntaxHighlighting()\n  }\n\n  componentDidUpdate() {\n    DataUtils.updateCodeSyntaxHighlighting()\n  }\n\n  render() {\n    return (\n      <div className='pb-4'>\n        <h4>Live preview</h4>\n        <Col sm={3} className='pl-0'>\n          <hr />\n        </Col>\n        <h1>{this.props.title}</h1>\n        <p>{this.props.shortDescription}</p>\n        <div\n          className='content pt-3'\n          dangerouslySetInnerHTML={{\n            __html: DataUtils.convertMarkdownToHtml(this.props.text)\n          }}\n        />\n        <div>\n          {DataUtils.convertSentenceToTagsArray(this.props.tags).map(tag => (\n            <span key={tag}>{tag + ' '}</span>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Preview\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Form, Button } from 'react-bootstrap'\nimport uuidv1 from 'uuid/v1'\nimport { Post } from '../../../data/index'\nimport Preview from './Preview'\nimport { PUBLIC_URL } from '../../../index'\nimport DataUtils from '../../../data/dataUtils'\n\nclass Editor extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      formData: {\n        title: '',\n        shortDescription: '',\n        text: '',\n        mainImage: '',\n        tags: ''\n      },\n      formValidation: {\n        title: false,\n        shortDescription: false,\n        text: false,\n        mainImage: false,\n        tags: false\n      },\n      isFormValid: false,\n      isFormValidated: false\n    }\n    this.regex = {\n      imageURL: `^(?:http(s)?:\\\\/\\\\/)?[\\\\w.-]+(?:\\\\.[\\\\w\\\\.-]+)+[\\\\w\\\\-\\\\._~:\\\\/?#[\\\\]@!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=.]+(?:png|jpg|jpeg|gif|svg)+$`,\n      tags: `^[a-zA-Z0-9_ ]*$`\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const sourcePost = this.props.sourcePost\n    // handle paste or clear example\n    if (sourcePost !== prevProps.sourcePost) {\n      const wasCleared = sourcePost.title !== ''\n      this.setState({\n        ...this.state,\n        formData: {\n          title: sourcePost.title,\n          shortDescription: sourcePost.shortDescription,\n          text: sourcePost.text,\n          mainImage: sourcePost.mainImage,\n          tags: DataUtils.convertTagsArrayToSentence(sourcePost.tags)\n        },\n        formValidation: {\n          title: wasCleared,\n          shortDescription: wasCleared,\n          text: wasCleared,\n          mainImage: wasCleared,\n          tags: wasCleared\n        },\n        isFormValidated: wasCleared,\n        isFormValid: wasCleared\n      })\n    }\n  }\n\n  handleFinishEdit = () => {\n    this.props.onFinishEditPost(\n      new Post(\n        this.props.variant === 'add' ? uuidv1() : this.props.sourcePost.id,\n        this.state.formData.title,\n        this.state.formData.shortDescription,\n        this.state.formData.text,\n        this.props.authDisplayName,\n        new Date(),\n        DataUtils.convertSentenceToTagsArray(this.state.formData.tags),\n        this.state.formData.mainImage\n      )\n    )\n  }\n\n  handleInputChange = event => {\n    const targetName = event.target.name\n    const targetValue = event.target.value\n    const isFieldValid = event.target.checkValidity() === true\n    let formValidation = { ...this.state.formValidation }\n    formValidation[targetName] = isFieldValid\n\n    this.setState(() => ({\n      ...this.state,\n      formData: {\n        ...this.state.formData,\n        [targetName]: targetValue\n      },\n      formValidation,\n      isFormValid: Object.values(formValidation).every(v => v === true),\n      isFieldValidated: true\n    }))\n  }\n\n  render() {\n    return (\n      <Container>\n        <div className='pb-4'>\n          <h5 className='pb-2'>Let's write</h5>\n          <Form validated={this.state.isFieldValidated}>\n            <Form.Group>\n              <Form.Control\n                name='title'\n                value={this.state.formData.title}\n                type='text'\n                placeholder='Post title'\n                required\n                maxLength='100'\n                onChange={this.handleInputChange}\n              />\n              <Form.Control.Feedback type='invalid'>\n                This field is required. Max length is 100.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                name='shortDescription'\n                as='textarea'\n                value={this.state.formData.shortDescription}\n                placeholder='Short description'\n                required\n                rows='3'\n                onChange={this.handleInputChange}\n              />\n              <Form.Control.Feedback type='invalid'>\n                This field is required.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                name='text'\n                as='textarea'\n                value={this.state.formData.text}\n                placeholder='Post body'\n                rows='10'\n                required\n                onChange={this.handleInputChange}\n              />\n              <Form.Control.Feedback type='invalid'>\n                This field is required.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                name='mainImage'\n                value={this.state.formData.mainImage}\n                type='text'\n                placeholder='Main image source. Ex. https://example.com/image.svg'\n                pattern={this.regex.imageURL}\n                required\n                onChange={this.handleInputChange}\n              />\n              <Form.Control.Feedback type='invalid'>\n                This field is required. Ex. https://example.com/image.svg\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                name='tags'\n                value={this.state.formData.tags}\n                type='text'\n                placeholder='Tags. Ex. rust java scss'\n                pattern={this.regex.tags}\n                required\n                onChange={this.handleInputChange}\n              />\n              <Form.Control.Feedback type='invalid'>\n                This field is required. Tags must be separated with space. Ex.\n                rust java scss\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className='d-flex justify-content-end'>\n              <Link to={PUBLIC_URL}>\n                <Button\n                  variant='outline-primary'\n                  disabled={!this.state.isFormValid}\n                  onClick={this.handleFinishEdit}\n                >\n                  {this.props.variant === 'add' ? 'Add' : 'Edit'}\n                </Button>\n              </Link>\n            </Form.Group>\n          </Form>\n        </div>\n        <Preview\n          title={this.state.formData.title}\n          shortDescription={this.state.formData.shortDescription}\n          text={this.state.formData.text}\n          tags={this.state.formData.tags}\n        />\n      </Container>\n    )\n  }\n}\n\nexport default Editor\n","import React, { Component } from 'react'\nimport { Table } from 'react-bootstrap'\n\nclass FormattingHelp extends Component {\n  render() {\n    return (\n      <div className='pb-4'>\n        <h5 className='pb-2 '>Formatting options (only in Post body)</h5>\n        <Table bordered>\n          <thead>\n            <tr>\n              <th>Usage</th>\n              <th>Example</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>### header h3</td>\n              <td>\n                <h3>header h3</h3>\n              </td>\n            </tr>\n            <tr>\n              <td>#### header h4</td>\n              <td>\n                <h4>header h4</h4>\n              </td>\n            </tr>\n            <tr>\n              <td>*italics*</td>\n              <td>\n                <em>italics</em>\n              </td>\n            </tr>\n            <tr>\n              <td>**bold**</td>\n              <td>\n                <strong>bold</strong>\n              </td>\n            </tr>\n            <tr>\n              <td>`code`</td>\n              <td>\n                <code>code</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p>```</p>\n                <p>randomArrayItem = array...</p>\n                <p>array[Math.floor...</p>\n                <p>```</p>\n              </td>\n              <td>\n                <pre>\n                  <code>\n                    <p>randomArrayItem = array =></p>\n                    <p>\n                      &nbsp;&nbsp;array[Math.floor(Math.random() *\n                      array.length)];\n                    </p>\n                  </code>\n                </pre>\n              </td>\n            </tr>\n            <tr>\n              <td>![alt text](url = 30x30)</td>\n              <td>\n                <img\n                  alt='Alt Text'\n                  src='https://avatars.dicebear.com/v2/identicon/test.svg'\n                  width='30'\n                  height='30'\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>{'<http://www.example.com>'}</td>\n              <td>\n                <a href='http://www.example.com'>http://www.example.com</a>\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    )\n  }\n}\n\nexport default FormattingHelp\n","import React, { Component } from 'react'\nimport { Container, Button, Col, Row } from 'react-bootstrap'\nimport FormattingHelp from './FormattingHelp'\nimport DataUtils from '../../../data/dataUtils'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\n\nclass Helper extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showFormattingHelp: false,\n      shouldClearPastedExample: false\n    }\n  }\n\n  componentDidUpdate() {\n    DataUtils.updateCodeSyntaxHighlighting()\n  }\n\n  handleShowFormattingHelp = () => {\n    const current = this.state.showFormattingHelp\n    this.setState({\n      ...this.state,\n      showFormattingHelp: !current\n    })\n  }\n\n  handlePasteExample = () => {\n    const shouldClearPastedExample = !this.state.shouldClearPastedExample\n    const generatedExample = DataUtils.generateExampleMarkdownPost()\n    const title = shouldClearPastedExample ? generatedExample.title : ''\n    const shortDescription = shouldClearPastedExample\n      ? generatedExample.shortDescription\n      : ''\n    const text = shouldClearPastedExample ? generatedExample.text : ''\n    const mainImage = shouldClearPastedExample\n      ? generatedExample.randomImageSrc\n      : ''\n    const tags = shouldClearPastedExample ? generatedExample.tags : []\n\n    this.setState({\n      ...this.state,\n      shouldClearPastedExample\n    })\n    this.props.onPasteExample({\n      title,\n      shortDescription,\n      text,\n      mainImage,\n      tags\n    })\n  }\n\n  Helper = () => {\n    return (\n      <div className='pb-4'>\n        <h5 className='pb-1'>Need a little help?</h5>\n        <Col className='pb-4'>\n          <Row className='pb-2 d-flex align-items-center'>\n            <Col sm={4} className='pl-0'>\n              <span>Formatting options:</span>\n            </Col>\n            <Col sm={2} className='d-flex justify-content-end'>\n              <Button\n                className='ml-2'\n                variant='outline-primary'\n                onClick={this.handleShowFormattingHelp}\n              >\n                {this.state.showFormattingHelp ? 'Hide' : 'Show'}\n              </Button>\n            </Col>\n          </Row>\n          {this.props.variant === 'add' ? (\n            <Row className='d-flex align-items-center'>\n              <Col sm={4} className='pl-0'>\n                <span>Example post:</span>\n              </Col>\n              <Col sm={2} className='d-flex justify-content-end'>\n                <Button\n                  className='ml-2'\n                  variant='outline-primary'\n                  onClick={this.handlePasteExample}\n                >\n                  {this.state.shouldClearPastedExample ? 'Clear' : 'Paste'}\n                </Button>\n              </Col>\n            </Row>\n          ) : (\n            ''\n          )}\n        </Col>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Container>\n        <this.Helper />\n        {this.state.showFormattingHelp && (\n          <ReactCSSTransitionGroup\n            transitionName='search-result'\n            transitionAppear={true}\n            transitionAppearTimeout={750}\n            transitionEnter={false}\n            transitionLeave={false}\n          >\n            <FormattingHelp />\n          </ReactCSSTransitionGroup>\n        )}\n      </Container>\n    )\n  }\n}\n\nexport default Helper\n","import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap'\nimport Form from './Form'\nimport Helper from './Helper'\n\nclass AddPost extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      sourcePost: {}\n    }\n  }\n\n  componentDidMount() {\n    const editedPostId = this.props.posts.editedPostId\n    const sourcePost = this.props.posts.data.find(\n      post => post._id === editedPostId\n    )\n    if (this.props.variant === 'edit' && sourcePost !== undefined) {\n      this.setState({\n        sourcePost\n      })\n    }\n  }\n\n  handleAddPost = editedPost => {\n    this.props.addPost(editedPost)\n  }\n\n  handlePasteExample = examplePost => {\n    this.setState({ sourcePost: examplePost })\n  }\n\n  render() {\n    return (\n      <Container>\n        <h4>\n          {this.props.variant === 'add' ? 'Write new post!' : 'Edit your post.'}\n        </h4>\n        <hr className='pb-3' />\n        <Helper\n          variant={this.props.variant}\n          onPasteExample={this.handlePasteExample}\n        />\n        <Form\n          authDisplayName={this.props.authDisplayName}\n          sourcePost={this.state.sourcePost}\n          variant={this.props.variant}\n          onFinishEditPost={this.handleAddPost}\n        />\n      </Container>\n    )\n  }\n}\n\nexport default AddPost\n","import { connect } from 'react-redux'\nimport PostEditor from '../components/MainPanel/PostEditor/PostEditor'\nimport { addPost } from '../actions/posts'\nimport { filterPosts, unwrapTags, unwrapDates } from '../actions/filters'\n\nconst mapStateToProps = state => ({\n  posts: state.posts,\n  filters: state.filters,\n  authDisplayName: state.auth.displayName\n})\n\nconst mapDispatchToProps = { addPost, filterPosts, unwrapTags, unwrapDates }\n\nexport const PostEditorContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostEditor)\n","import React, { Component } from 'react'\nimport { Container, Form, Button, Col, Row } from 'react-bootstrap'\n\nclass Settings extends Component {\n  handleRemoveAllPosts = () => {\n    console.log('handleRemoveAllPosts')\n  }\n\n  handleUserDataChange = () => {\n    console.log('handleUserDataChange')\n  }\n\n  render() {\n    return (\n      <Container>\n        <h4>Settings</h4>\n        <hr className='pb-3' />\n        <h5 className='pb-1'>For debugging purposes</h5>\n        <Col className='pb-5'>\n          <Row className='pb-2 d-flex align-items-center'>\n            <Col sm={4} className='pl-0'>\n              <span>Remove all posts:</span>\n            </Col>\n            <Col sm={2} className='d-flex justify-content-end'>\n              <Button\n                className='ml-2'\n                variant='outline-primary'\n                onClick={this.handleRemoveAllPosts}\n              >\n                Remove\n              </Button>\n            </Col>\n          </Row>\n          <Row className='d-flex align-items-center'>\n            <Col sm={4} className='pl-0'>\n              <span>Generate new random posts:</span>\n            </Col>\n            <Col sm={2} className='d-flex justify-content-end'>\n              <Button\n                className='ml-2'\n                variant='outline-primary'\n                onClick={this.handleRemoveAllPosts}\n              >\n                Generate\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n        <h5 className='pb-2'>User data</h5>\n        <Form>\n          <Col sm={6} className='pl-0'>\n            <Form.Group>\n              <Form.Control\n                name='displayName'\n                // value={this.state.formInput.title}\n                type='text'\n                placeholder='Name'\n                required\n                maxLength='30'\n                // onChange={this.handleInputChange}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                name='email'\n                type='email'\n                // value={this.state.formInput.shortDescription}\n                placeholder='Email'\n                required\n                // onChange={this.handleInputChange}\n              />\n            </Form.Group>\n            <Form.Group className='d-flex justify-content-end'>\n              <Button\n                variant='outline-primary'\n                onClick={this.handleUserDataChange}\n              >\n                Change\n              </Button>\n            </Form.Group>\n          </Col>\n        </Form>\n      </Container>\n    )\n  }\n}\n\nexport default Settings\n","import { connect } from 'react-redux'\nimport Settings from '../components/MainPanel/Settings'\n\nconst mapStateToProps = state => ({\n  state: state\n})\n\nexport const SettingsContainer = connect(mapStateToProps)(Settings)\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Row, Col, Container } from 'react-bootstrap'\nimport { NavbarContainer } from '../containers/NavbarContainer'\nimport { SidePanelContainer } from '../containers/SidePanelContainer'\nimport SearchResult from '../components/MainPanel/SearchResult'\nimport MainBoard from '../components/MainPanel/MainBoard'\nimport Post from '../components/MainPanel/Post'\nimport { PostEditorContainer } from '../containers/PostEditorContainer'\nimport { SettingsContainer } from '../containers/SettingsContainer'\nimport { PUBLIC_URL } from '../index'\nimport DataUtils from '../data/dataUtils'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.waitMessages = [\n      'Feeding artificial intelligence',\n      'Decorating unattractive UI',\n      'Refactoring dirty code',\n      'Writing fake news',\n      'Patching security vulnerabilities'\n    ]\n    this.state = {\n      error: null,\n      waitMessage: DataUtils.randomArrayItem(this.waitMessages)\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchPosts()\n    // DataUtils.addPostsToFirestore(20);\n  }\n\n  componentDidUpdate(prevProps) {\n    // console.log(window.store.getState())\n    const posts = this.props.posts\n    if (posts !== prevProps.posts) {\n      this.setState({\n        error: this.props.posts.fetchingError\n      })\n    }\n  }\n\n  ErrorContainer = () => {\n    return (\n      <div className='text-center pt-5'>\n        <div className='pb-2'>\n          <h2>Error. Please reload the page.</h2>\n          <h5>Error message: \"{this.state.error.message}\"</h5>\n        </div>\n      </div>\n    )\n  }\n\n  WaitContainer = () => {\n    const currentIndex = this.waitMessages.findIndex(\n      m => m === this.state.waitMessage\n    )\n    setTimeout(() => {\n      this.setState({\n        waitMessage: DataUtils.nextArrayItem(this.waitMessages, currentIndex)\n      })\n    }, 1000)\n\n    return (\n      <div className='wait-container'>\n        <div className='container text-center h-100 d-flex flex-column justify-content-center'>\n          <Row className='wait-text'>\n            <Col>\n              <h2>{this.state.waitMessage + `.`}</h2>\n            </Col>\n          </Row>\n          <div className='box-loading' />\n        </div>\n      </div>\n    )\n  }\n\n  MainContainer = () => {\n    const isSignedIn = this.props.isSignedIn\n    return (\n      <Router>\n        <div>\n          <NavbarContainer />\n          <Container>\n            <Row className='pt-5'>\n              <Col sm={3}>\n                <SidePanelContainer />\n              </Col>\n              <Col sm={9}>\n                <Switch>\n                  <Route\n                    exact\n                    path={PUBLIC_URL + '/'}\n                    component={() => (\n                      <MainBoard filteredPosts={this.props.filteredPosts} />\n                    )}\n                  />\n                  <Route\n                    path={PUBLIC_URL + '/search'}\n                    component={() => (\n                      <SearchResult filteredPosts={this.props.filteredPosts} />\n                    )}\n                  />\n                  <Route\n                    path={PUBLIC_URL + '/post/id-:id'}\n                    component={route => (\n                      <Post\n                        posts={this.props.posts.data}\n                        routeParamId={route.match.params.id}\n                      />\n                    )}\n                  />\n                  {isSignedIn && (\n                    <Route\n                      path={PUBLIC_URL + '/addpost'}\n                      component={() => <PostEditorContainer variant={'add'} />}\n                    />\n                  )}\n                  {isSignedIn && (\n                    <Route\n                      path={PUBLIC_URL + '/editpost'}\n                      component={() => <PostEditorContainer variant={'edit'} />}\n                    />\n                  )}\n                  {isSignedIn && (\n                    <Route\n                      path={PUBLIC_URL + '/settings'}\n                      component={SettingsContainer}\n                    />\n                  )}\n                </Switch>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </Router>\n    )\n  }\n\n  render() {\n    if (this.props.posts.length !== 0 && this.state.error === null) {\n      return <this.MainContainer />\n    } else if (this.state.error !== null) {\n      return <this.ErrorContainer />\n    } else {\n      return <this.WaitContainer />\n    }\n  }\n}\n\nexport default App\n","import { connect } from 'react-redux'\nimport { fetchPosts } from '../actions/posts'\nimport App from '../components/App'\n\nconst mapStateToProps = state => ({\n  posts: state.posts,\n  filteredPosts: state.filteredPosts,\n  isSignedIn: state.auth.isSignedIn\n})\n\nconst mapDispatchToProps = { fetchPosts }\n\nexport const AppContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\nimport { AppContainer } from './containers/AppContainer'\nimport * as serviceWorker from './serviceWorker'\nimport './styles/_index.scss'\n\nexport const PUBLIC_URL = process.env.PUBLIC_URL\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n// TODO: Remove. For debugging purposes only!\nwindow.store = store\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
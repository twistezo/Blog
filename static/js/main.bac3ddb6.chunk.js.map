{"version":3,"sources":["data/dataUtils.js","reducers/reducersUtils.js","reducers/filters/index.js","reducers/index.js","actions/index.js","data/index.js","data/generator.js","components/SearchForm.js","containers/SearchFormContainer.js","components/Navbar.js","components/AboutMe.js","components/Tags.js","containers/TagsContainer.js","components/Archives.js","containers/ArchivesContainer.js","components/SidePanel.js","components/PostCard.js","components/PostsBoard.js","containers/PostsBoardContainer.js","components/App.js","containers/AppContainer.js","serviceWorker.js","index.js"],"names":["DataUtils","randomArrayItem","array","Math","floor","random","length","isNullEmptyOrUndefinded","value","undefined","arrayFromArrayRandomItems","Array","from","filter","randomBoolean","arrayContainsAllElementsFromAnother","array0","array1","map","a","some","b","every","e","ReducersUtils","sortPostsByDateDesc","posts","sort","Date","date","unwrapTagsFromPosts","allTags","post","tags","flat","uniqueTags","Set","uniqueWithQuantity","forEach","uniqueTag","push","name","quantity","tag","state","switchTagState","tagName","find","filterPostsBy","filters","dates","searchValue","filtered","switchedOnTags","title","toLowerCase","includes","switchedOnYears","yearState","year","getFullYear","switchedOnMonths","months","month","item","monthNameFromDate","unwrapDatesFromPosts","years","yearsWithMonths","postsQuantityByDate","toLocaleString","switchDateState","dateToSwitch","archiveDates","combineReducers","arguments","action","type","Object","toConsumableArray","filteredPosts","filterPosts","Post","id","text","author","classCallCheck","this","_id","_title","_text","_author","_date","_tags","DataGenerator","_this","_generate","chance","Chance","i","_data","uuidv1","sentence","words","paragraph","sentences","string","american","Error","fetch","Promise","resolve","reject","result","SearchForm","handleSearchFormInputChange","event","target","props","handleSearchInput","assign","react_default","createElement","Form","inline","FormControl","className","placeholder","onChange","Component","mapDispatchToProps","SearchFormContainer","connect","Navbar","es_Navbar","bg","variant","Brand","href","Nav","Button","AboutMe","Container","Tags","onTagClick","preventDefault","Alert","Link","key","onClick","Badge","TagsContainer","Archives","onDateClick","Dates","ArchivesContainer","Archive","SidePanel","Row","Col","components_AboutMe","PostsCard","day","PostsBoard","PostCards","PostCard","EmptyResult","PostsBoardContainer","PostBoard","App","possibleConstructorReturn","getPrototypeOf","call","ErrorContainer","error","message","WaitContainer","MainContainer","components_Navbar","xs","components_SidePanel","occured","_this2","then","fetchPosts","unwrapTags","unwrapDates","catch","err","setState","AppContainer","Boolean","window","location","hostname","match","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bac3ddb6.chunk.js","sourcesContent":["class DataUtils {\r\n  static randomArrayItem = array =>\r\n    array[Math.floor(Math.random() * array.length)];\r\n\r\n  static isNullEmptyOrUndefinded = value =>\r\n    value === null || value === [] || value === undefined || value.length === 0;\r\n\r\n  static arrayFromArrayRandomItems = array =>\r\n    Array.from(array).filter(() => DataUtils.randomBoolean());\r\n\r\n  static randomBoolean = () => Math.random() >= 0.5;\r\n\r\n  static arrayContainsAllElementsFromAnother = (array0, array1) =>\r\n    array1\r\n      .map(a => {\r\n        return array0.some(b => {\r\n          return b === a;\r\n        });\r\n      })\r\n      .every(e => e);\r\n}\r\n\r\nexport default DataUtils;\r\n","import DataUtils from \"../data/dataUtils\";\r\n\r\nclass ReducersUtils {\r\n  static sortPostsByDateDesc = posts =>\r\n    posts.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n\r\n  static unwrapTagsFromPosts = posts => {\r\n    const allTags = Array.from(posts.map(post => post.tags).flat());\r\n    const uniqueTags = Array.from(new Set(allTags));\r\n\r\n    let uniqueWithQuantity = [];\r\n    uniqueTags.forEach(uniqueTag =>\r\n      uniqueWithQuantity.push({\r\n        name: uniqueTag,\r\n        quantity: allTags.filter(tag => tag === uniqueTag).length,\r\n        state: false\r\n      })\r\n    );\r\n\r\n    return uniqueWithQuantity;\r\n  };\r\n\r\n  static switchTagState = (tagName, tags) => {\r\n    let tag = tags.find(tag => tag.name === tagName);\r\n    tag.state = !tag.state;\r\n    return tags;\r\n  };\r\n\r\n  static filterPostsBy = (posts, filters) => {\r\n    const tags = filters.tags;\r\n    const dates = filters.dates;\r\n    const searchValue = filters.searchValue;\r\n\r\n    let filtered = [];\r\n    const switchedOnTags = tags.filter(tag => tag.state).map(tag => tag.name);\r\n    filtered = posts.filter(\r\n      post =>\r\n        // by tags\r\n        DataUtils.arrayContainsAllElementsFromAnother(\r\n          post.tags,\r\n          switchedOnTags\r\n        ) &&\r\n        // by searchValue (title)\r\n        post.title.toLowerCase().includes(searchValue.toLowerCase())\r\n    );\r\n\r\n    // by date - years\r\n    let switchedOnYears = dates\r\n      .filter(date => date.yearState)\r\n      .map(date => date.year);\r\n    if (switchedOnYears.length !== 0) {\r\n      filtered = filtered.filter(post =>\r\n        DataUtils.arrayContainsAllElementsFromAnother(switchedOnYears, [\r\n          post.date.getFullYear()\r\n        ])\r\n      );\r\n    }\r\n\r\n    // by date - months\r\n    let switchedOnMonths = dates\r\n      .map(date =>\r\n        date.months\r\n          .map(month => ({\r\n            year: date.year,\r\n            month: month.name,\r\n            state: month.state\r\n          }))\r\n          .flat()\r\n      )\r\n      .flat()\r\n      .filter(month => month.state);\r\n    if (switchedOnMonths.length !== 0) {\r\n      filtered = filtered.filter(\r\n        post =>\r\n          switchedOnMonths.some(\r\n            item => item.year === post.date.getFullYear()\r\n          ) &&\r\n          switchedOnMonths.some(\r\n            item => item.month === ReducersUtils.monthNameFromDate(post.date)\r\n          )\r\n      );\r\n    }\r\n    return filtered;\r\n  };\r\n\r\n  static unwrapDatesFromPosts = posts => {\r\n    const years = Array.from(\r\n      new Set(posts.map(post => post.date.getFullYear()))\r\n    );\r\n\r\n    let yearsWithMonths = [];\r\n    years.forEach(year =>\r\n      yearsWithMonths.push({\r\n        year: year,\r\n        yearState: false,\r\n        months: Array.from(\r\n          new Set(\r\n            posts\r\n              .filter(post => post.date.getFullYear() === year)\r\n              .map(post => ReducersUtils.monthNameFromDate(post.date))\r\n          )\r\n        ).map(month => ({\r\n          name: month,\r\n          quantity: ReducersUtils.postsQuantityByDate(posts, month, year),\r\n          state: false\r\n        }))\r\n      })\r\n    );\r\n    return yearsWithMonths;\r\n  };\r\n\r\n  static postsQuantityByDate = (posts, month, year) =>\r\n    posts.filter(\r\n      post =>\r\n        post.date.getFullYear() === year &&\r\n        ReducersUtils.monthNameFromDate(post.date) === month\r\n    ).length;\r\n\r\n  static monthNameFromDate = date =>\r\n    date.toLocaleString(\"en-us\", { month: \"long\" });\r\n\r\n  static switchDateState = (dateToSwitch, archiveDates) => {\r\n    if (dateToSwitch.month === undefined) {\r\n      let date = archiveDates.find(date => date.year === dateToSwitch.year);\r\n      date.yearState = !date.yearState;\r\n      // reset all months state\r\n      archiveDates.forEach(date =>\r\n        date.months.forEach(month => (month.state = false))\r\n      );\r\n    } else {\r\n      let month = archiveDates\r\n        .find(date => date.year === dateToSwitch.year)\r\n        .months.find(month => month.name === dateToSwitch.month);\r\n      month.state = !month.state;\r\n      // reset all years state\r\n      archiveDates.forEach(date => (date.yearState = false));\r\n    }\r\n    return archiveDates;\r\n  };\r\n}\r\n\r\nexport default ReducersUtils;\r\n","import { combineReducers } from \"redux\";\r\nimport ReducersUtils from \"../reducersUtils\";\r\n\r\nconst tags = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"UNWRAP_TAGS\":\r\n      return [...ReducersUtils.unwrapTagsFromPosts(action.posts)];\r\n    case \"SWITCH_TAG\":\r\n      return [...ReducersUtils.switchTagState(action.tagName, state)];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst dates = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"UNWRAP_DATES\":\r\n      return [...ReducersUtils.unwrapDatesFromPosts(action.posts)];\r\n    case \"SWITCH_DATE_STATE\":\r\n      return [...ReducersUtils.switchDateState(action.date, state)];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst searchValue = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"HANDLE_SEARCH_INPUT\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  tags,\r\n  dates,\r\n  searchValue\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport filters from \"./filters\";\r\nimport ReducersUtils from \"./reducersUtils\";\r\n\r\nconst posts = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_POSTS\":\r\n      return [...ReducersUtils.sortPostsByDateDesc(action.posts)];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const filteredPosts = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FILTER_POSTS\":\r\n      return [...ReducersUtils.filterPostsBy(action.posts, action.filters)];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  posts,\r\n  filteredPosts,\r\n  filters\r\n});\r\n","export const fetchPosts = posts => ({\r\n  type: \"FETCH_POSTS\",\r\n  posts\r\n});\r\n\r\nexport const filterPosts = (posts, filters) => ({\r\n  type: \"FILTER_POSTS\",\r\n  posts,\r\n  filters\r\n});\r\n\r\nexport const unwrapTags = posts => ({\r\n  type: \"UNWRAP_TAGS\",\r\n  posts\r\n});\r\n\r\nexport const switchTagState = tagName => ({\r\n  type: \"SWITCH_TAG\",\r\n  tagName\r\n});\r\n\r\nexport const unwrapDates = posts => ({\r\n  type: \"UNWRAP_DATES\",\r\n  posts\r\n});\r\n\r\nexport const switchDateState = date => ({\r\n  type: \"SWITCH_DATE_STATE\",\r\n  date\r\n});\r\n\r\nexport const handleSearchInput = value => ({\r\n  type: \"HANDLE_SEARCH_INPUT\",\r\n  value\r\n});\r\n","class Post {\r\n  constructor(id, title, text, author, date, tags) {\r\n    this._id = id;\r\n    this._title = title;\r\n    this._text = text;\r\n    this._author = author;\r\n    this._date = date;\r\n    this._tags = tags;\r\n  }\r\n\r\n  get id() {\r\n    return this._id;\r\n  }\r\n\r\n  get title() {\r\n    return this._title;\r\n  }\r\n\r\n  get text() {\r\n    return this._text;\r\n  }\r\n\r\n  get author() {\r\n    return this._author;\r\n  }\r\n\r\n  get date() {\r\n    return this._date;\r\n  }\r\n\r\n  get tags() {\r\n    return this._tags;\r\n  }\r\n}\r\n\r\nexport { Post };\r\n","import Chance from \"chance\";\r\nimport uuidv1 from \"uuid/v1\";\r\nimport DataUtils from \"./dataUtils\";\r\nimport { Post } from \"./\";\r\n\r\nclass DataGenerator {\r\n  constructor() {\r\n    this._data = [];\r\n    this._tags = [\"#javascript\", \"#css\", \"#rust\", \"#webpack\", \"#cargo\"];\r\n  }\r\n\r\n  _generate = quantity => {\r\n    const chance = new Chance();\r\n    for (let i = 0; i < quantity; i++) {\r\n      this._data.push(\r\n        new Post(\r\n          uuidv1(),\r\n          chance.sentence({ words: 10 }),\r\n          chance.paragraph({ sentences: 20 }),\r\n          \"twistezo\",\r\n          chance.date({\r\n            string: false,\r\n            american: false,\r\n            year: DataUtils.randomArrayItem([2017, 2018, 2019])\r\n          }),\r\n          DataUtils.arrayFromArrayRandomItems(this._tags)\r\n        )\r\n      );\r\n    }\r\n\r\n    return DataUtils.isNullEmptyOrUndefinded(this._data)\r\n      ? new Error(\"Generate data failed.\")\r\n      : this._data;\r\n  };\r\n\r\n  fetch = quantity =>\r\n    new Promise((resolve, reject) => {\r\n      const result = this._generate(quantity);\r\n      if (result instanceof Error) {\r\n        reject(\r\n          new Error(\"Error while fetching data. The data seems to be broken.\")\r\n        );\r\n      } else {\r\n        resolve(result);\r\n      }\r\n    });\r\n}\r\n\r\nexport { DataGenerator };\r\n","import React, { Component } from \"react\";\r\nimport { Form, FormControl } from \"react-bootstrap\";\r\n\r\nclass SearchForm extends Component {\r\n  handleSearchFormInputChange = event => {\r\n    const value = event.target.value;\r\n    this.props.handleSearchInput(value);\r\n\r\n    let filters = Object.assign({}, this.props.filters);\r\n    filters.searchValue = value;\r\n    this.props.filterPosts(this.props.posts, filters);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form inline>\r\n        <FormControl\r\n          className=\"mr-sm-2\"\r\n          name=\"search\"\r\n          type=\"text\"\r\n          placeholder=\"search by title\"\r\n          onChange={this.handleSearchFormInputChange}\r\n        />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForm;\r\n","import { connect } from \"react-redux\";\r\nimport { filterPosts, handleSearchInput } from \"../actions\";\r\nimport SearchForm from \"../components/SearchForm\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts,\r\n  filters: state.filters\r\n});\r\n\r\nconst mapDispatchToProps = { filterPosts, handleSearchInput };\r\n\r\nexport const SearchFormContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SearchForm);\r\n","import React, { Component } from \"react\";\r\nimport { Navbar as BsNavbar, Nav, Form, Button } from \"react-bootstrap\";\r\nimport { SearchFormContainer } from \"../containers/SearchFormContainer\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <BsNavbar bg=\"dark\" variant=\"dark\" className=\"sticky-top\">\r\n        <BsNavbar.Brand href=\"/\">Blog</BsNavbar.Brand>\r\n        <Nav className=\"mr-auto\" />\r\n        <SearchFormContainer />\r\n        <Form inline className=\"pl-5\">\r\n          <Button variant=\"outline-info\">Sign in</Button>\r\n        </Form>\r\n      </BsNavbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass AboutMe extends Component {\r\n  render() {\r\n    return <Container className=\"AboutMe\">AboutMe</Container>;\r\n  }\r\n}\r\n\r\nexport default AboutMe;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Alert, Badge } from \"react-bootstrap\";\r\n\r\nclass Tags extends Component {\r\n  onTagClick = (event, tagName) => {\r\n    this.props.switchTagState(tagName);\r\n    this.props.filterPosts(this.props.posts, this.props.filters);\r\n    event.preventDefault();\r\n  };\r\n\r\n  Tags = () => {\r\n    const tags = this.props.filters.tags;\r\n    return tags.length > 0\r\n      ? tags.map(tag => (\r\n          <Alert.Link\r\n            className=\"mr-1\"\r\n            key={tag.name}\r\n            onClick={event => this.onTagClick(event, tag.name)}\r\n          >\r\n            {tag.name}\r\n            <Badge variant=\"success\" className=\"ml-1\">\r\n              {tag.quantity}\r\n            </Badge>\r\n            <Badge variant=\"light\" className=\"ml-1\">\r\n              {tag.state ? \"x\" : \"\"}\r\n            </Badge>\r\n          </Alert.Link>\r\n        ))\r\n      : \"\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"Tags\">\r\n        <div>\r\n          Tags:\r\n          <p className=\"d-flex flex-wrap\">\r\n            <this.Tags />\r\n          </p>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tags;\r\n","import { connect } from \"react-redux\";\r\nimport { switchTagState, filterPosts } from \"../actions\";\r\nimport Tags from \"../components/Tags\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    posts: state.posts,\r\n    filters: state.filters\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { switchTagState, filterPosts };\r\n\r\nexport const TagsContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Tags);\r\n","import React, { Component } from \"react\";\r\nimport { Container, Alert, Badge } from \"react-bootstrap\";\r\n\r\nclass Archives extends Component {\r\n  onDateClick = (event, year, month) => {\r\n    this.props.switchDateState({ year, month });\r\n    this.props.filterPosts(this.props.posts, this.props.filters);\r\n    event.preventDefault();\r\n  };\r\n\r\n  Dates = () => {\r\n    const dates = this.props.filters.dates;\r\n    return dates.length > 0\r\n      ? dates.map(date => (\r\n          <ul key={date.year} className=\"list-unstyled\">\r\n            <Alert.Link onClick={event => this.onDateClick(event, date.year)}>\r\n              {date.year}\r\n              <Badge variant=\"light\" className=\"ml-1\">\r\n                {date.yearState ? \"x\" : \"\"}\r\n              </Badge>\r\n            </Alert.Link>\r\n            {date.months.map(month => (\r\n              <li key={month.name}>\r\n                <Alert.Link\r\n                  onClick={event =>\r\n                    this.onDateClick(event, date.year, month.name)\r\n                  }\r\n                >\r\n                  {month.name}\r\n                  <Badge variant=\"success\" className=\"ml-1\">\r\n                    {month.quantity}\r\n                  </Badge>\r\n                  <Badge variant=\"light\" className=\"ml-1\">\r\n                    {month.state ? \"x\" : \"\"}\r\n                  </Badge>\r\n                </Alert.Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ))\r\n      : \"\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"Archives\">\r\n        Archive posts:\r\n        <this.Dates />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Archives;\r\n","import { connect } from \"react-redux\";\r\nimport { filterPosts, switchDateState } from \"../actions\";\r\nimport Archive from \"../components/Archives\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts,\r\n  filters: state.filters\r\n});\r\n\r\nconst mapDispatchToProps = { filterPosts, switchDateState };\r\n\r\nexport const ArchivesContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Archive);\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport AboutMe from \"./AboutMe\";\r\nimport { TagsContainer } from \"../containers/TagsContainer\";\r\nimport { ArchivesContainer } from \"../containers/ArchivesContainer\";\r\n\r\nclass SidePanel extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"SidePanel\">\r\n        <Row>\r\n          <Col>\r\n            <AboutMe />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <TagsContainer />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <ArchivesContainer />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidePanel;\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass PostsCard extends Component {\r\n  render() {\r\n    const post = this.props.post;\r\n    return (\r\n      <Container className=\"PostCard mb-2\">\r\n        <p>Id: {post.id}</p>\r\n        <p>Title: {post.title}</p>\r\n        <p>Author: {post.author}</p>\r\n        <p>\r\n          Date:\r\n          {post.date.toLocaleString(\"pl-PL\", {\r\n            day: \"numeric\",\r\n            month: \"numeric\",\r\n            year: \"numeric\"\r\n          })}\r\n        </p>\r\n        <p>Tags: {post.tags}</p>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostsCard;\r\n","import React, { Component } from \"react\";\r\nimport PostCard from \"./PostCard\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass PostsBoard extends Component {\r\n  PostCards = () => {\r\n    return this.props.filteredPosts.map(post => (\r\n      <PostCard key={post.id} post={post} />\r\n    ));\r\n  };\r\n\r\n  EmptyResult = () => {\r\n    return (\r\n      <div className=\"text-center pt-5\">\r\n        <div className=\"pb-2\">\r\n          <h2>Nothing here...</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"PostsBoard\">\r\n        {this.props.filteredPosts.length !== 0 ? (\r\n          <this.PostCards />\r\n        ) : (\r\n          <this.EmptyResult />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostsBoard;\r\n","import { connect } from \"react-redux\";\r\nimport PostBoard from \"../components/PostsBoard\";\r\n\r\nconst mapStateToProps = state => ({\r\n  filteredPosts: state.filteredPosts\r\n});\r\n\r\nexport const PostsBoardContainer = connect(mapStateToProps)(PostBoard);\r\n","import React, { Component } from \"react\";\r\nimport { DataGenerator } from \"../data/generator\";\r\nimport Navbar from \"./Navbar\";\r\nimport SidePanel from \"./SidePanel\";\r\nimport { PostsBoardContainer } from \"../containers/PostsBoardContainer\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      error: {\r\n        occured: false,\r\n        message: \"\"\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    new DataGenerator()\r\n      .fetch(10)\r\n      .then(posts => {\r\n        this.props.fetchPosts(posts);\r\n      })\r\n      .then(() => {\r\n        this.props.unwrapTags(this.props.posts);\r\n        this.props.unwrapDates(this.props.posts);\r\n      })\r\n      .then(() => {\r\n        this.props.filterPosts(this.props.posts, this.props.filters);\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: {\r\n            occured: true,\r\n            message: err.message\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  ErrorContainer = () => {\r\n    return (\r\n      <div className=\"text-center pt-5\">\r\n        <div className=\"pb-2\">\r\n          <h2>Error. Please reload the page.</h2>\r\n          <h5>Error message: \"{this.state.error.message}\"</h5>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  WaitContainer = () => {\r\n    return (\r\n      <div className=\"text-center pt-5\">\r\n        <div className=\"pb-2\">\r\n          <h2>Downloading data...</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  MainContainer = () => {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <Row className=\"pt-5\">\r\n          <Col xs={3}>\r\n            <SidePanel />\r\n          </Col>\r\n          <Col xs={9}>\r\n            <PostsBoardContainer />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.props.posts.length !== 0 && !this.state.error.occured) {\r\n      return <this.MainContainer />;\r\n    } else if (this.state.error.occured) {\r\n      return <this.ErrorContainer />;\r\n    } else {\r\n      return <this.WaitContainer />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { connect } from \"react-redux\";\r\nimport { fetchPosts, filterPosts, unwrapTags, unwrapDates } from \"../actions\";\r\nimport App from \"../components/App\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts,\r\n  filters: state.filters\r\n});\r\n\r\nconst mapDispatchToProps = { fetchPosts, filterPosts, unwrapTags, unwrapDates };\r\n\r\nexport const AppContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport { AppContainer } from \"./containers/AppContainer\";\r\nimport \"./index.scss\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n// TODO: Remove. For debugging purposes only!\r\nwindow.store = store;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <AppContainer />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"version":3,"sources":["data/dataUtils.js","reducers/reducersUtils.js","reducers/index.js","actions/index.js","data/index.js","data/generator.js","components/Navbar/SearchForm.js","containers/SearchFormContainer.js","components/Navbar/Navbar.js","containers/NavbarContainer.js","components/SidePanel/AboutMe.js","components/SidePanel/Tags.js","containers/TagsContainer.js","components/SidePanel/Archives.js","containers/ArchivesContainer.js","components/SidePanel/SidePanel.js","components/MainPanel/PostCards/PostCardHorizontal.js","components/MainPanel/SearchResult.js","containers/SearchResultContainer.js","components/MainPanel/PostCards/PostCardVertical.js","components/MainPanel/MainBoard.js","containers/MainBoardContainer.js","components/MainPanel/Post.js","containers/PostContainer.js","components/MainPanel/AddPost/exampleText.js","components/MainPanel/AddPost/Preview.js","components/MainPanel/AddPost/FormattingHelp.js","components/MainPanel/AddPost/AddPost.js","containers/AddPostContainer.js","components/App.js","containers/AppContainer.js","serviceWorker.js","index.js"],"names":["DataUtils","randomArrayItem","array","Math","floor","random","length","isNullEmptyOrUndefinded","value","undefined","arrayFromArrayRandomItems","result","Array","from","filter","randomBoolean","arrayContainsAllElementsFromAnother","array0","array1","map","a","some","b","every","e","ReducersUtils","sortPostsByDateDesc","posts","sort","Date","date","unwrapTagsFromPosts","allTags","post","tags","flat","uniqueTags","Set","uniqueWithQuantity","forEach","uniqueTag","push","name","quantity","tag","state","switchTagState","tagName","find","filterPostsBy","filters","dates","searchValue","filtered","switchedOnTags","title","toLowerCase","includes","switchedOnYears","yearState","year","getFullYear","switchedOnMonths","months","month","item","monthNameFromDate","unwrapDatesFromPosts","years","yearsWithMonths","postsQuantityByDate","toLocaleString","switchDateState","dateToSwitch","archiveDates","resetFilters","reseted","Object","assign","filtersShape","combineReducers","arguments","action","type","toConsumableArray","concat","filteredPosts","objectSpread","filterPosts","unwrapTags","unwrapDates","Post","id","shortDescription","text","author","mainImage","classCallCheck","this","_id","_title","_shortDescription","_text","_author","_date","_tags","_mainImage","DataGenerator","_this","_generate","i","_data","uuidv1","_chance","sentence","words","paragraph","sentences","_generateHtmlText","string","american","word","Error","_mdToHtmlConverter","makeHtml","fetch","Promise","resolve","reject","Chance","showdown","Converter","noHeaderId","SearchForm","handleSearchFormInputChange","event","target","props","handleSearchInput","react_default","createElement","Form","inline","Link","to","App","publicURL","FormControl","className","placeholder","onChange","Component","mapDispatchToProps","SearchFormContainer","connect","Navbar","handleLogoClick","es_Navbar","bg","variant","Container","onClick","Brand","Button","NavbarContainer","AboutMe","Tags","onTagClick","preventDefault","key","Badge","TagsContainer","Archives","onDateClick","Dates","ArchivesContainer","Archive","SidePanel","Row","SidePanel_AboutMe","PostsCard","postURL","src","alt","substring","day","SearchResult","PostCards","PostCardHorizontal","EmptyResult","SearchResultContainer","PostsCardVertical","MainBoard","HeadPosts","headCards","slice","headPostsNum","PostCardVertical","MainBoardContainer","PostContainer","routeParamId","dangerouslySetInnerHTML","__html","exampleText","Preview","parsedText","FormattingHelp","Table","bordered","width","height","href","AddPost","possibleConstructorReturn","getPrototypeOf","call","handleShowFormattingHelp","current","controllers","showFormattingHelp","setState","handlePasteExample","shouldClearPastedExample","formInput","mdToHtmlConverter","handleInputChange","defineProperty","handleAddPost","addPost","Group","Control","required","maxLength","as","rows","Helper","Col","prevProps","AddPost_FormattingHelp","AddPost_Preview","AddPostContainer","ErrorContainer","error","message","WaitContainer","MainContainer","BrowserRouter","sm","components_SidePanel_SidePanel","Switch","Route","exact","path","component","route","match","params","occured","_this2","then","fetchPosts","catch","err","process","AppContainer","Boolean","window","location","hostname","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6OAAMA,sCACGC,gBAAkB,SAAAC,GAAK,OAC5BA,EAAMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,UAFrCN,EAIGO,wBAA0B,SAAAC,GAAK,OAC1B,OAAVA,GAAkBA,IAAU,SAAgBC,IAAVD,GAAwC,IAAjBA,EAAMF,QAL7DN,EAOGU,0BAA4B,SAAAR,GACjC,IAAMS,EAASC,MAAMC,KAAKX,GAAOY,OAAO,kBAAMd,EAAUe,kBACxD,OAAyB,IAAlBJ,EAAOL,OAAe,CAACJ,EAAM,IAAMS,GATxCX,EAYGe,cAAgB,kBAAMZ,KAAKE,UAAY,IAZ1CL,EAcGgB,oCAAsC,SAACC,EAAQC,GAAT,OAC3CA,EACGC,IAAI,SAAAC,GACH,OAAOH,EAAOI,KAAK,SAAAC,GACjB,OAAOA,IAAMF,MAGhBG,MAAM,SAAAC,GAAC,OAAIA,KAGHxB,QCtBTyB,sCACGC,oBAAsB,SAAAC,GAAK,OAChCA,EAAMC,KAAK,SAACR,EAAGE,GAAJ,OAAU,IAAIO,KAAKP,EAAEQ,MAAQ,IAAID,KAAKT,EAAEU,SAFjDL,EAIGM,oBAAsB,SAAAJ,GAC3B,IAAMK,EAAUpB,MAAMC,KAAKc,EAAMR,IAAI,SAAAc,GAAI,OAAIA,EAAKC,OAAMC,QAClDC,EAAaxB,MAAMC,KAAK,IAAIwB,IAAIL,IAElCM,EAAqB,GASzB,OARAF,EAAWG,QAAQ,SAAAC,GAAS,OAC1BF,EAAmBG,KAAK,CACtBC,KAAMF,EACNG,SAAUX,EAAQlB,OAAO,SAAA8B,GAAG,OAAIA,IAAQJ,IAAWlC,OACnDuC,OAAO,MAIJP,GAjBLb,EAoBGqB,eAAiB,SAACC,EAASb,GAChC,IAAIU,EAAMV,EAAKc,KAAK,SAAAJ,GAAG,OAAIA,EAAIF,OAASK,IAExC,OADAH,EAAIC,OAASD,EAAIC,MACVX,GAvBLT,EA0BGwB,cAAgB,SAACtB,EAAOuB,GAC7B,IAAMhB,EAAOgB,EAAQhB,KACfiB,EAAQD,EAAQC,MAChBC,EAAcF,EAAQE,YAExBC,EAAW,GACTC,EAAiBpB,EAAKpB,OAAO,SAAA8B,GAAG,OAAIA,EAAIC,QAAO1B,IAAI,SAAAyB,GAAG,OAAIA,EAAIF,OACpEW,EAAW1B,EAAMb,OACf,SAAAmB,GAAI,OAEFjC,EAAUgB,oCACRiB,EAAKC,KACLoB,IAGFrB,EAAKsB,MAAMC,cAAcC,SAASL,EAAYI,iBAIlD,IAAIE,EAAkBP,EACnBrC,OAAO,SAAAgB,GAAI,OAAIA,EAAK6B,YACpBxC,IAAI,SAAAW,GAAI,OAAIA,EAAK8B,OACW,IAA3BF,EAAgBpD,SAClB+C,EAAWA,EAASvC,OAAO,SAAAmB,GAAI,OAC7BjC,EAAUgB,oCAAoC0C,EAAiB,CAC7DzB,EAAKH,KAAK+B,mBAMhB,IAAIC,EAAmBX,EACpBhC,IAAI,SAAAW,GAAI,OACPA,EAAKiC,OACF5C,IAAI,SAAA6C,GAAK,MAAK,CACbJ,KAAM9B,EAAK8B,KACXI,MAAOA,EAAMtB,KACbG,MAAOmB,EAAMnB,SAEdV,SAEJA,OACArB,OAAO,SAAAkD,GAAK,OAAIA,EAAMnB,QAYzB,OAXgC,IAA5BiB,EAAiBxD,SACnB+C,EAAWA,EAASvC,OAClB,SAAAmB,GAAI,OACF6B,EAAiBzC,KACf,SAAA4C,GAAI,OAAIA,EAAKL,OAAS3B,EAAKH,KAAK+B,iBAElCC,EAAiBzC,KACf,SAAA4C,GAAI,OAAIA,EAAKD,QAAUvC,EAAcyC,kBAAkBjC,EAAKH,WAI7DL,EAAcC,oBAAoB2B,IAhFvC5B,EAmFG0C,qBAAuB,SAAAxC,GAC5B,IAAMyC,EAAQxD,MAAMC,KAClB,IAAIwB,IAAIV,EAAMR,IAAI,SAAAc,GAAI,OAAIA,EAAKH,KAAK+B,kBAGlCQ,EAAkB,GAkBtB,OAjBAD,EAAM7B,QAAQ,SAAAqB,GAAI,OAChBS,EAAgB5B,KAAK,CACnBmB,KAAMA,EACND,WAAW,EACXI,OAAQnD,MAAMC,KACZ,IAAIwB,IACFV,EACGb,OAAO,SAAAmB,GAAI,OAAIA,EAAKH,KAAK+B,gBAAkBD,IAC3CzC,IAAI,SAAAc,GAAI,OAAIR,EAAcyC,kBAAkBjC,EAAKH,UAEtDX,IAAI,SAAA6C,GAAK,MAAK,CACdtB,KAAMsB,EACNrB,SAAUlB,EAAc6C,oBAAoB3C,EAAOqC,EAAOJ,GAC1Df,OAAO,SAINwB,GA1GL5C,EA6GG6C,oBAAsB,SAAC3C,EAAOqC,EAAOJ,GAAf,OAC3BjC,EAAMb,OACJ,SAAAmB,GAAI,OACFA,EAAKH,KAAK+B,gBAAkBD,GAC5BnC,EAAcyC,kBAAkBjC,EAAKH,QAAUkC,IACjD1D,QAlHAmB,EAoHGyC,kBAAoB,SAAApC,GAAI,OAC7BA,EAAKyC,eAAe,QAAS,CAAEP,MAAO,UArHpCvC,EAuHG+C,gBAAkB,SAACC,EAAcC,GACtC,QAA2BjE,IAAvBgE,EAAaT,MAAqB,CACpC,IAAIlC,EAAO4C,EAAa1B,KAAK,SAAAlB,GAAI,OAAIA,EAAK8B,OAASa,EAAab,OAChE9B,EAAK6B,WAAa7B,EAAK6B,UAEvBe,EAAanC,QAAQ,SAAAT,GAAI,OACvBA,EAAKiC,OAAOxB,QAAQ,SAAAyB,GAAK,OAAKA,EAAMnB,OAAQ,UAEzC,CACL,IAAImB,EAAQU,EACT1B,KAAK,SAAAlB,GAAI,OAAIA,EAAK8B,OAASa,EAAab,OACxCG,OAAOf,KAAK,SAAAgB,GAAK,OAAIA,EAAMtB,OAAS+B,EAAaT,QACpDA,EAAMnB,OAASmB,EAAMnB,MAErB6B,EAAanC,QAAQ,SAAAT,GAAI,OAAKA,EAAK6B,WAAY,IAEjD,OAAOe,GAvILjD,EA0IGkD,aAAe,SAAAzB,GACpB,IAAI0B,EAAUC,OAAOC,OAAO,GAAI5B,GAOhC,OANA0B,EAAQ1C,KAAKK,QAAQ,SAAAK,GAAG,OAAKA,EAAIC,OAAQ,IACzC+B,EAAQzB,MAAMZ,QAAQ,SAAAT,GAAI,OAAKA,EAAK6B,WAAY,IAChDiB,EAAQzB,MAAMZ,QAAQ,SAAAT,GAAI,OACxBA,EAAKiC,OAAOxB,QAAQ,SAAAyB,GAAK,OAAKA,EAAMnB,OAAQ,MAE9C+B,EAAQxB,YAAc,GACfwB,GAIInD,QCjITsD,EAAe,CACnB7C,KAAM,GACNiB,MAAO,GACPC,YAAa,IAqCA4B,cAAgB,CAC7BrD,MA7DY,WAAwB,IAAvBkB,EAAuBoC,UAAA3E,OAAA,QAAAG,IAAAwE,UAAA,GAAAA,UAAA,GAAf,GAAIC,EAAWD,UAAA3E,OAAA,EAAA2E,UAAA,QAAAxE,EACpC,OAAQyE,EAAOC,MACb,IAAK,cACH,OAAON,OAAAO,EAAA,EAAAP,CAAIpD,EAAcC,oBAAoBwD,EAAOvD,QACtD,IAAK,WACH,SAAA0D,OAAAR,OAAAO,EAAA,EAAAP,CAAWhC,GAAX,CAAkBqC,EAAOjD,OAC3B,QACE,OAAOY,IAuDXyC,cAnD2B,WAAwB,IAAvBzC,EAAuBoC,UAAA3E,OAAA,QAAAG,IAAAwE,UAAA,GAAAA,UAAA,GAAf,GAAIC,EAAWD,UAAA3E,OAAA,EAAA2E,UAAA,QAAAxE,EACnD,OAAQyE,EAAOC,MACb,IAAK,eACH,OAAON,OAAAO,EAAA,EAAAP,CAAIpD,EAAcwB,cAAciC,EAAOvD,MAAOuD,EAAOhC,UAC9D,QACE,OAAOL,IA+CXK,QArCc,WAAkC,IAAjCL,EAAiCoC,UAAA3E,OAAA,QAAAG,IAAAwE,UAAA,GAAAA,UAAA,GAAzBF,EAAcG,EAAWD,UAAA3E,OAAA,EAAA2E,UAAA,QAAAxE,EAChD,OAAQyE,EAAOC,MACb,IAAK,cACH,OAAON,OAAAU,EAAA,EAAAV,CAAA,GACFhC,EADL,CAEEX,KAAK2C,OAAAO,EAAA,EAAAP,CAAKpD,EAAcM,oBAAoBmD,EAAOvD,UAEvD,IAAK,aACH,OAAOkD,OAAAU,EAAA,EAAAV,CAAA,GACFhC,EADL,CAEEX,KAAK2C,OAAAO,EAAA,EAAAP,CAAKpD,EAAcqB,eAAeoC,EAAOnC,QAASF,EAAMX,SAEjE,IAAK,eACH,OAAO2C,OAAAU,EAAA,EAAAV,CAAA,GACFhC,EADL,CAEEM,MAAM0B,OAAAO,EAAA,EAAAP,CAAKpD,EAAc0C,qBAAqBe,EAAOvD,UAEzD,IAAK,oBACH,OAAOkD,OAAAU,EAAA,EAAAV,CAAA,GACFhC,EADL,CAEEM,MAAM0B,OAAAO,EAAA,EAAAP,CAAKpD,EAAc+C,gBAAgBU,EAAOpD,KAAMe,EAAMM,UAEhE,IAAK,sBACH,OAAO0B,OAAAU,EAAA,EAAAV,CAAA,GACFhC,EADL,CAEEO,YAAa8B,EAAO1E,QAExB,IAAK,gBACH,OAAOiB,EAAckD,aAAaO,EAAOhC,SAC3C,QACE,OAAOL,MCjDA2C,EAAc,SAAC7D,EAAOuB,GAAR,MAAqB,CAC9CiC,KAAM,eACNxD,QACAuB,YAGWuC,EAAa,SAAA9D,GAAK,MAAK,CAClCwD,KAAM,cACNxD,UAQW+D,EAAc,SAAA/D,GAAK,MAAK,CACnCwD,KAAM,eACNxD,mHC5BIgE,aACJ,SAAAA,EACEC,EACArC,EACAsC,EACAC,EACAC,EACAjE,EACAI,EACA8D,GACCnB,OAAAoB,EAAA,EAAApB,CAAAqB,KAAAP,GACDO,KAAKC,IAAMP,EACXM,KAAKE,OAAS7C,EACd2C,KAAKG,kBAAoBR,EACzBK,KAAKI,MAAQR,EACbI,KAAKK,QAAUR,EACfG,KAAKM,MAAQ1E,EACboE,KAAKO,MAAQvE,EACbgE,KAAKQ,WAAaV,iDAIlB,OAAOE,KAAKC,kCAIZ,OAAOD,KAAKE,gDAIZ,OAAOF,KAAKG,+CAIZ,OAAOH,KAAKI,qCAIZ,OAAOJ,KAAKK,qCAIZ,OAAOL,KAAKM,mCAIZ,OAAON,KAAKO,wCAIZ,OAAOP,KAAKQ,oBC5CVC,EACJ,SAAAA,IAAc,IAAAC,EAAAV,KAAArB,OAAAoB,EAAA,EAAApB,CAAAqB,KAAAS,GAAAT,KAOdW,UAAY,SAAAlE,GACV,IAAK,IAAImE,EAAI,EAAGA,EAAInE,EAAUmE,IAC5BF,EAAKG,MAAMtE,KACT,IAAIkD,EACFqB,MACAJ,EAAKK,QAAQC,SAAS,CAAEC,MAAO,IAC/BP,EAAKK,QAAQG,UAAU,CAAEC,UAAW,IACpCT,EAAKU,oBACL,WACAV,EAAKK,QAAQnF,KAAK,CAChByF,QAAQ,EACRC,UAAU,EACV5D,KAAM5D,EAAUC,gBAAgB,CAAC,KAAM,KAAM,SAE/CD,EAAUU,0BAA0BkG,EAAKH,OACzC,6CACEG,EAAKK,QAAQQ,KAAK,CAAEnH,OAAQ,KAC5B,SAKR,OAAON,EAAUO,wBAAwBqG,EAAKG,OAC1C,IAAIW,MAAM,yBACVd,EAAKG,OA/BGb,KAkCdoB,kBAAoB,kBAClBV,EAAKe,mBAAmBC,SACtB,MACEhB,EAAKK,QAAQC,SAAS,CAAEC,MAAO,IADjC,KAGEP,EAAKK,QAAQG,UAAU,CAAEC,UAAW,KAHtC,6DAMET,EAAKK,QAAQQ,KAAK,CAAEnH,OAAQ,KAC5B,6BAGAsG,EAAKK,QAAQC,SAAS,CAAEC,MAAO,IAVjC,8CAcEP,EAAKK,QAAQC,SAAS,CAAEC,MAAO,IAdjC,KAgBEP,EAAKK,QAAQG,UAAU,CAAEC,UAAW,IAhBtC,0SApCUnB,KAoEd2B,MAAQ,SAAAlF,GAAQ,OACd,IAAImF,QAAQ,SAACC,EAASC,GACpB,IAAMrH,EAASiG,EAAKC,UAAUlE,GAC1BhC,aAAkB+G,MACpBM,EACE,IAAIN,MAAM,4DAGZK,EAAQpH,MA3EZuF,KAAKa,MAAQ,GACbb,KAAKO,MAAQ,CAAC,cAAe,OAAQ,QAAS,WAAY,UAC1DP,KAAKe,QAAU,IAAIgB,IACnB/B,KAAKyB,mBAAqB,IAAIO,IAASC,UAAU,CAAEC,YAAY,qDCuBpDC,6MA5BbC,4BAA8B,SAAAC,GAC5B,IAAM/H,EAAQ+H,EAAMC,OAAOhI,MAC3BoG,EAAK6B,MAAMC,kBAAkBlI,GAE7B,IAAI0C,EAAU2B,OAAOC,OAAO,GAAI8B,EAAK6B,MAAMvF,SAC3CA,EAAQE,YAAc5C,EACtBoG,EAAK6B,MAAMjD,YAAYoB,EAAK6B,MAAM9G,MAAOuB,4EAIzC,OACEyF,EAAAvH,EAAAwH,cAACC,EAAA,EAAD,CAAMC,QAAM,GACVH,EAAAvH,EAAAwH,cAACG,EAAA,EAAD,CAAMC,GAAIC,GAAIC,UAAY,WACxBP,EAAAvH,EAAAwH,cAACO,EAAA,EAAD,CACEC,UAAU,UACV1G,KAAK,SACLyC,KAAK,OACL3E,MAAO0F,KAAKuC,MAAMvF,QAAQE,YAC1BiG,YAAY,SACZC,SAAUpD,KAAKoC,+BAGnBK,EAAAvH,EAAAwH,cAAA,KAAGQ,UAAU,0BAvBIG,aCInBC,EAAqB,CAAEhE,cAAakD,kBJ2BT,SAAAlI,GAAK,MAAK,CACzC2E,KAAM,sBACN3E,WI3BWiJ,EAAsBC,YAPX,SAAA7G,GAAK,MAAK,CAChClB,MAAOkB,EAAMlB,MACbuB,QAASL,EAAMK,UAOfsG,EAFiCE,CAGjCrB,GCsBasB,6MA7BbC,gBAAkB,WAChBhD,EAAK6B,MAAM9D,aAAaiC,EAAK6B,MAAMvF,SACnC0D,EAAK6B,MAAMjD,YAAYoB,EAAK6B,MAAM9G,MAAO,CACvCO,KAAM,GACNiB,MAAO,GACPC,YAAa,8EAKf,OACEuF,EAAAvH,EAAAwH,cAACiB,EAAA,EAAD,CAAUC,GAAG,OAAOC,QAAQ,OAAOX,UAAU,0BAC3CT,EAAAvH,EAAAwH,cAACoB,EAAA,EAAD,KACErB,EAAAvH,EAAAwH,cAACG,EAAA,EAAD,CAAMC,GAAIC,GAAIC,UAAY,IAAKe,QAAS/D,KAAK0D,iBAC3CjB,EAAAvH,EAAAwH,cAACiB,EAAA,EAASK,MAAV,CAAgBd,UAAU,QAA1B,SAEFT,EAAAvH,EAAAwH,cAACa,EAAD,MACAd,EAAAvH,EAAAwH,cAACC,EAAA,EAAD,CAAMC,QAAM,GACVH,EAAAvH,EAAAwH,cAACG,EAAA,EAAD,CAAMC,GAAIC,GAAIC,UAAY,YACxBP,EAAAvH,EAAAwH,cAACuB,EAAA,EAAD,CAAQJ,QAAQ,qBAAhB,aAEFpB,EAAAvH,EAAAwH,cAACuB,EAAA,EAAD,CAAQJ,QAAQ,qBAAhB,qBAtBSR,aCGfC,EAAqB,CAAE7E,aNgCD,SAAAzB,GAAO,MAAK,CACtCiC,KAAM,gBACNjC,YMlCyCsC,eAE9B4E,EAAkBV,YAPP,SAAA7G,GAAK,MAAK,CAChClB,MAAOkB,EAAMlB,MACbuB,QAASL,EAAMK,UAOfsG,EAF6BE,CAG7BC,WCDaU,mLARX,OACE1B,EAAAvH,EAAAwH,cAACoB,EAAA,EAAD,KACErB,EAAAvH,EAAAwH,cAAA,8BAJcW,qBC+CPe,6MA5CbC,WAAa,SAAChC,EAAOxF,GACnB6D,EAAK6B,MAAM3F,eAAeC,GAC1B6D,EAAK6B,MAAMjD,YAAYoB,EAAK6B,MAAM9G,MAAOiF,EAAK6B,MAAMvF,SACpDqF,EAAMiC,oBAGRF,KAAO,WACL,IAAMpI,EAAO0E,EAAK6B,MAAMvF,QAAQhB,KAChC,OAAOA,EAAK5B,OAAS,EACjB4B,EAAKf,IAAI,SAAAyB,GAAG,OACV+F,EAAAvH,EAAAwH,cAAA,OACEQ,UAAU,kBACVqB,IAAK7H,EAAIF,KACTuH,QAAS,SAAA1B,GAAK,OAAI3B,EAAK2D,WAAWhC,EAAO3F,EAAIF,QAE7CiG,EAAAvH,EAAAwH,cAACG,EAAA,EAAD,CAAMC,GAAIC,GAAIC,UAAY,WACvBtG,EAAIF,KACJE,EAAIC,MACH8F,EAAAvH,EAAAwH,cAAA,KAAGQ,UAAU,6BAEbT,EAAAvH,EAAAwH,cAAC8B,EAAA,EAAD,CAAOX,QAAQ,YAAYX,UAAU,QAClCxG,EAAID,cAMf,4EAIJ,OACEgG,EAAAvH,EAAAwH,cAACoB,EAAA,EAAD,KACErB,EAAAvH,EAAAwH,cAAA,WACED,EAAAvH,EAAAwH,cAAA,kBACAD,EAAAvH,EAAAwH,cAAA,QAAMQ,UAAU,oBACdT,EAAAvH,EAAAwH,cAAA1C,KAAMoE,KAAN,gBArCOf,aCMbC,EAAqB,CAAE1G,eTUC,SAAAC,GAAO,MAAK,CACxCoC,KAAM,aACNpC,YSZ2CyC,eAEhCmF,GAAgBjB,YATL,SAAA7G,GACtB,MAAO,CACLlB,MAAOkB,EAAMlB,MACbuB,QAASL,EAAMK,UAQjBsG,EAF2BE,CAG3BY,GCkDaM,8MA5DbC,YAAc,SAACtC,EAAO3E,EAAMI,GAC1B4C,EAAK6B,MAAMjE,gBAAgB,CAAEZ,OAAMI,UACnC4C,EAAK6B,MAAMjD,YAAYoB,EAAK6B,MAAM9G,MAAOiF,EAAK6B,MAAMvF,SACpDqF,EAAMiC,oBAGRM,MAAQ,WACN,IAAM3H,EAAQyD,EAAK6B,MAAMvF,QAAQC,MACjC,OAAOA,EAAM7C,OAAS,EAClB6C,EAAMhC,IAAI,SAAAW,GAAI,OACZ6G,EAAAvH,EAAAwH,cAAA,MAAI6B,IAAK3I,EAAK8B,KAAMwF,UAAU,iBAC5BT,EAAAvH,EAAAwH,cAAA,OACEQ,UAAU,aACVa,QAAS,SAAA1B,GAAK,OAAI3B,EAAKiE,YAAYtC,EAAOzG,EAAK8B,QAE/C+E,EAAAvH,EAAAwH,cAACG,EAAA,EAAD,CAAMC,GAAIC,GAAIC,UAAY,WACvBpH,EAAK8B,KACL9B,EAAK6B,UACJgF,EAAAvH,EAAAwH,cAAA,KAAGQ,UAAU,6BAEb,KAILtH,EAAKiC,OAAO5C,IAAI,SAAA6C,GAAK,OACpB2E,EAAAvH,EAAAwH,cAAA,MAAI6B,IAAKzG,EAAMtB,MACbiG,EAAAvH,EAAAwH,cAAA,OACEQ,UAAU,aACVa,QAAS,SAAA1B,GAAK,OACZ3B,EAAKiE,YAAYtC,EAAOzG,EAAK8B,KAAMI,EAAMtB,QAG3CiG,EAAAvH,EAAAwH,cAACG,EAAA,EAAD,CAAMC,GAAIC,GAAIC,UAAY,WACvBlF,EAAMtB,KACNsB,EAAMnB,MACL8F,EAAAvH,EAAAwH,cAAA,KAAGQ,UAAU,6BAEbT,EAAAvH,EAAAwH,cAAC8B,EAAA,EAAD,CAAOX,QAAQ,YAAYX,UAAU,QAClCpF,EAAMrB,kBASvB,4EAIJ,OACEgG,EAAAvH,EAAAwH,cAACoB,EAAA,EAAD,KACErB,EAAAvH,EAAAwH,cAAA,2BACAD,EAAAvH,EAAAwH,cAAA1C,KAAM4E,MAAN,cAvDevB,aCIjBC,GAAqB,CAAEhE,cAAahB,gBXsBX,SAAA1C,GAAI,MAAK,CACtCqD,KAAM,oBACNrD,UWtBWiJ,GAAoBrB,YAPT,SAAA7G,GAAK,MAAK,CAChClB,MAAOkB,EAAMlB,MACbuB,QAASL,EAAMK,UAOfsG,GAF+BE,CAG/BsB,ICUaC,oLAhBX,OACEtC,EAAAvH,EAAAwH,cAACoB,EAAA,EAAD,KACErB,EAAAvH,EAAAwH,cAACsC,EAAA,EAAD,CAAK9B,UAAU,QACbT,EAAAvH,EAAAwH,cAACuC,EAAD,OAEFxC,EAAAvH,EAAAwH,cAACsC,EAAA,EAAD,CAAK9B,UAAU,QACbT,EAAAvH,EAAAwH,cAAC+B,GAAD,OAEFhC,EAAAvH,EAAAwH,cAACsC,EAAA,EAAD,CAAK9B,UAAU,QACbT,EAAAvH,EAAAwH,cAACmC,GAAD,eAXcxB,aC+CT6B,oLA9CX,IAAMnJ,EAAOiE,KAAKuC,MAAMxG,KAClBoJ,EAAUpC,GAAIC,UAAY,YAAcjH,EAAK2D,GACnD,OACE+C,EAAAvH,EAAAwH,cAACoB,EAAA,EAAD,CAAWZ,UAAU,QACnBT,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,aACbT,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,kBACbT,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,gDACbT,EAAAvH,EAAAwH,cAACG,EAAA,EAAD,CAAMC,GAAIqC,GACR1C,EAAAvH,EAAAwH,cAAA,OAAK0C,IAAKrJ,EAAK+D,UAAWoD,UAAU,gBAAgBmC,IAAI,OAG5D5C,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,YACbT,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,aACbT,EAAAvH,EAAAwH,cAACG,EAAA,EAAD,CAAMC,GAAIqC,GACR1C,EAAAvH,EAAAwH,cAAA,MAAIQ,UAAU,cAAcnH,EAAKsB,QAEnCoF,EAAAvH,EAAAwH,cAAA,KAAGQ,UAAU,aACVnH,EAAK4D,iBAAiB2F,UAAU,EAAG,KAAO,OAE7C7C,EAAAvH,EAAAwH,cAAA,QAAMQ,UAAU,aACdT,EAAAvH,EAAAwH,cAAA,KAAGQ,UAAU,mBACVnH,EAAK8D,OACJ,KACA9D,EAAKH,KAAKyC,eAAe,QAAS,CAChCkH,IAAK,UACLzH,MAAO,UACPJ,KAAM,aAGZ+E,EAAAvH,EAAAwH,cAAA,KAAGQ,UAAU,mBACVnH,EAAKC,KAAKf,IAAI,SAAAyB,GAAG,OAChB+F,EAAAvH,EAAAwH,cAAA,QAAM6B,IAAK7H,EAAKwG,UAAU,QACvBxG,mBAlCD2G,aC6BTmC,8MA7BbC,UAAY,WACV,OAAO/E,EAAK6B,MAAMnD,cAAcnE,IAAI,SAAAc,GAAI,OACtC0G,EAAAvH,EAAAwH,cAACgD,GAAD,CAAoBnB,IAAKxI,EAAK2D,GAAI3D,KAAMA,SAI5C4J,YAAc,WACZ,OACElD,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,oBACbT,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,QACbT,EAAAvH,EAAAwH,cAAA,wGAON,OACED,EAAAvH,EAAAwH,cAACoB,EAAA,EAAD,KACuC,IAApC9D,KAAKuC,MAAMnD,cAAchF,OACxBqI,EAAAvH,EAAAwH,cAAA1C,KAAMyF,UAAN,MAEAhD,EAAAvH,EAAAwH,cAAA1C,KAAM2F,YAAN,cAvBiBtC,aCGduC,GAAwBpC,YAJb,SAAA7G,GAAK,MAAK,CAChCyC,cAAezC,EAAMyC,gBAGcoE,CAAyBgC,ICkC/CK,oLAnCX,IAAM9J,EAAOiE,KAAKuC,MAAMxG,KAClBoJ,EAAUpC,GAAIC,UAAY,YAAcjH,EAAK2D,GACnD,OACE+C,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,QACbT,EAAAvH,EAAAwH,cAACG,EAAA,EAAD,CAAMC,GAAIqC,GACR1C,EAAAvH,EAAAwH,cAAA,OAAK0C,IAAKrJ,EAAK+D,UAAWoD,UAAU,oBAAoBmC,IAAI,MAE9D5C,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,aACbT,EAAAvH,EAAAwH,cAACG,EAAA,EAAD,CAAMC,GAAIqC,GACR1C,EAAAvH,EAAAwH,cAAA,MAAIQ,UAAU,cAAcnH,EAAKsB,SAGrCoF,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,eACbT,EAAAvH,EAAAwH,cAAA,KAAGQ,UAAU,mBACVnH,EAAK8D,OACJ,KACA9D,EAAKH,KAAKyC,eAAe,QAAS,CAChCkH,IAAK,UACLzH,MAAO,UACPJ,KAAM,aAGZ+E,EAAAvH,EAAAwH,cAAA,KAAGQ,UAAU,mBACVnH,EAAKC,KAAKf,IAAI,SAAAyB,GAAG,OAChB+F,EAAAvH,EAAAwH,cAAA,QAAM6B,IAAK7H,EAAKwG,UAAU,QACvBxG,eA3Be2G,aCC1ByC,8MAGJC,UAAY,WACV,IAAMC,EAAYtF,EAAK6B,MAAMnD,cAC1B6G,MAAM,EAAGH,EAAUI,cACnBjL,IAAI,SAAAc,GAAI,OAAI0G,EAAAvH,EAAAwH,cAACyD,GAAD,CAAkB5B,IAAKxI,EAAK2D,GAAI3D,KAAMA,MACrD,OAAO0G,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,aAAa8C,MAGrCP,UAAY,WACV,OAAO/E,EAAK6B,MAAMnD,cACf6G,MAAMH,EAAUI,cAChBjL,IAAI,SAAAc,GAAI,OAAI0G,EAAAvH,EAAAwH,cAACgD,GAAD,CAAoBnB,IAAKxI,EAAK2D,GAAI3D,KAAMA,+EAIvD,OACE0G,EAAAvH,EAAAwH,cAACoB,EAAA,EAAD,KACErB,EAAAvH,EAAAwH,cAAA,0BACAD,EAAAvH,EAAAwH,cAAA1C,KAAM+F,UAAN,MACAtD,EAAAvH,EAAAwH,cAAA,WACAD,EAAAvH,EAAAwH,cAAA1C,KAAMyF,UAAN,cAtBgBpC,aAAlByC,GACGI,aAAe,EA2BTJ,UC1BFM,GAAqB5C,YAJV,SAAA7G,GAAK,MAAK,CAChCyC,cAAezC,EAAMyC,gBAGWoE,CAAyBsC,ICsB5CrG,8MAzBb4G,cAAgB,WACd,IAAMtK,EAAO2E,EAAK6B,MAAM9G,MAAMqB,KAC5B,SAAAf,GAAI,OAAIA,EAAK2D,KAAOgB,EAAK6B,MAAM+D,eAEjC,OACE7D,EAAAvH,EAAAwH,cAAA,WACED,EAAAvH,EAAAwH,cAAA,UAAK3G,EAAKsB,OACVoF,EAAAvH,EAAAwH,cAAA,SAAI3G,EAAK4D,kBACT8C,EAAAvH,EAAAwH,cAAA,OACEQ,UAAU,eACVqD,wBAAyB,CAAEC,OAAQzK,EAAK6D,kFAO9C,OACE6C,EAAAvH,EAAAwH,cAACoB,EAAA,EAAD,KACErB,EAAAvH,EAAAwH,cAAA1C,KAAMqG,cAAN,cApBWhD,aCINgD,GAAgB7C,YAJL,SAAA7G,GAAK,MAAK,CAChClB,MAAOkB,EAAMlB,QAGc+H,CAAyB/D,sBCPzCgH,GAAW,shBCmBTC,oLAfX,OACEjE,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,QACbT,EAAAvH,EAAAwH,cAAA,0BACAD,EAAAvH,EAAAwH,cAAA,WACAD,EAAAvH,EAAAwH,cAAA,UAAK1C,KAAKuC,MAAMlF,OAChBoF,EAAAvH,EAAAwH,cAAA,SAAI1C,KAAKuC,MAAM5C,kBACf8C,EAAAvH,EAAAwH,cAAA,OACEQ,UAAU,eACVqD,wBAAyB,CAAEC,OAAQxG,KAAKuC,MAAMoE,sBAVlCtD,sBCuFPuD,oLApFX,OACEnE,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,QACbT,EAAAvH,EAAAwH,cAAA,oDACAD,EAAAvH,EAAAwH,cAACmE,GAAA,EAAD,CAAOC,UAAQ,GACbrE,EAAAvH,EAAAwH,cAAA,aACED,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,mBACAD,EAAAvH,EAAAwH,cAAA,uBAGJD,EAAAvH,EAAAwH,cAAA,aACED,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,2BACAD,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,yBAGJD,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,4BACAD,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,yBAGJD,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,uBACAD,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,uBAGJD,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,sBACAD,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,wBAGJD,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,oBACAD,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,sBAGJD,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,gBACAD,EAAAvH,EAAAwH,cAAA,uCACAD,EAAAvH,EAAAwH,cAAA,gCACAD,EAAAvH,EAAAwH,cAAA,iBAEFD,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,WACED,EAAAvH,EAAAwH,cAAA,YACED,EAAAvH,EAAAwH,cAAA,uCACAD,EAAAvH,EAAAwH,cAAA,yEAQRD,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,sCACAD,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,OACE2C,IAAI,WACJD,IAAI,qDACJ2B,MAAM,KACNC,OAAO,SAIbvE,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,UAAK,4BACLD,EAAAvH,EAAAwH,cAAA,UACED,EAAAvH,EAAAwH,cAAA,KAAGuE,KAAK,0BAAR,sCA5Ea5D,aCsLd6D,eA9Kb,SAAAA,EAAY3E,GAAO,IAAA7B,EAAA,OAAA/B,OAAAoB,EAAA,EAAApB,CAAAqB,KAAAkH,IACjBxG,EAAA/B,OAAAwI,EAAA,EAAAxI,CAAAqB,KAAArB,OAAAyI,EAAA,EAAAzI,CAAAuI,GAAAG,KAAArH,KAAMuC,KAwBR+E,yBAA2B,WACzB,IAAMC,EAAU7G,EAAK/D,MAAM6K,YAAYC,mBACvC/G,EAAKgH,SAAL/I,OAAAU,EAAA,EAAAV,CAAA,GACK+B,EAAK/D,MADV,CAEE6K,YAAa,CAAEC,oBAAqBF,OA7BrB7G,EAiCnBiH,mBAAqB,WACnB,IAAMC,GAA4BlH,EAAK/D,MAAM6K,YAC1CI,yBACGvK,EAAQuK,EAA2B,gBAAkB,GACrDjI,EAAmBiI,EACrB,4BACA,GACEhI,EAAOgI,EAA2BnB,GAAc,GAEtD/F,EAAKgH,SAAL/I,OAAAU,EAAA,EAAAV,CAAA,GACK+B,EAAK/D,MADV,CAEEkL,UAAW,CACTxK,QACAsC,mBACAC,QAEF+G,WAAYjG,EAAKoH,kBAAkBpG,SAAS9B,GAC5C4H,YAAY7I,OAAAU,EAAA,EAAAV,CAAA,GACP+B,EAAK/D,MAAM6K,YADL,CAETI,iCApDalH,EAyDnBqH,kBAAoB,SAAA1F,GAClB,IAAIzC,EAAOyC,EAAMC,OAAOhI,MAClBqM,EACkB,SAAtBtE,EAAMC,OAAO9F,KAAkBkE,EAAKoH,kBAAkBpG,SAAS9B,GAAQ,GACzEc,EAAKgH,SAAL/I,OAAAU,EAAA,EAAAV,CAAA,GACK+B,EAAK/D,MADV,CAEEkL,UAAUlJ,OAAAU,EAAA,EAAAV,CAAA,GACL+B,EAAK/D,MAAMkL,UADPlJ,OAAAqJ,GAAA,EAAArJ,CAAA,GAEN0D,EAAMC,OAAO9F,KAAOoD,IAEvB+G,iBAnEejG,EAuEnBuH,cAAgB,WACdvH,EAAK6B,MAAM2F,QACT,IAAIzI,EACFqB,MACAJ,EAAK/D,MAAMkL,UAAUxK,MACrBqD,EAAK/D,MAAMkL,UAAUlI,iBACrBe,EAAK/D,MAAMgK,WACX,WACA,IAAIhL,KACJ,CAAC,QAAS,cAAe,UACzB,wDAjFa+E,EAsFnBiC,KAAO,WACL,OACEF,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,QACbT,EAAAvH,EAAAwH,cAAA,+BACAD,EAAAvH,EAAAwH,cAAA,WACAD,EAAAvH,EAAAwH,cAACC,EAAA,EAAD,CAAMO,UAAU,QACdT,EAAAvH,EAAAwH,cAACC,EAAA,EAAKwF,MAAN,KACE1F,EAAAvH,EAAAwH,cAACC,EAAA,EAAKyF,QAAN,CACE5L,KAAK,QACLlC,MAAOoG,EAAK/D,MAAMkL,UAAUxK,MAC5B4B,KAAK,OACLkE,YAAY,aACZkF,UAAQ,EACRC,UAAU,KACVlF,SAAU1C,EAAKqH,qBAGnBtF,EAAAvH,EAAAwH,cAACC,EAAA,EAAKwF,MAAN,KACE1F,EAAAvH,EAAAwH,cAACC,EAAA,EAAKyF,QAAN,CACE5L,KAAK,mBACL+L,GAAG,WACHjO,MAAOoG,EAAK/D,MAAMkL,UAAUlI,iBAC5BwD,YAAY,oBACZkF,UAAQ,EACRG,KAAK,IACLpF,SAAU1C,EAAKqH,qBAGnBtF,EAAAvH,EAAAwH,cAACC,EAAA,EAAKwF,MAAN,KACE1F,EAAAvH,EAAAwH,cAACC,EAAA,EAAKyF,QAAN,CACE5L,KAAK,OACL+L,GAAG,WACHjO,MAAOoG,EAAK/D,MAAMkL,UAAUjI,KAC5BuD,YAAY,YACZqF,KAAK,KACLH,UAAQ,EACRjF,SAAU1C,EAAKqH,qBAGnBtF,EAAAvH,EAAAwH,cAACC,EAAA,EAAKwF,MAAN,KACE1F,EAAAvH,EAAAwH,cAACuB,EAAA,EAAD,CAAQF,QAASrD,EAAKuH,eAAtB,WA9HSvH,EAqInB+H,OAAS,WACP,OACEhG,EAAAvH,EAAAwH,cAAA,WACED,EAAAvH,EAAAwH,cAAA,iCACAD,EAAAvH,EAAAwH,cAAA,WACAD,EAAAvH,EAAAwH,cAACgG,GAAA,EAAD,KACEjG,EAAAvH,EAAAwH,cAACsC,EAAA,EAAD,CAAK9B,UAAU,QACbT,EAAAvH,EAAAwH,cAAA,mCACAD,EAAAvH,EAAAwH,cAACuB,EAAA,EAAD,CAAQf,UAAU,OAAOa,QAASrD,EAAK4G,0BACpC5G,EAAK/D,MAAM6K,YAAYC,mBAAqB,OAAS,SAG1DhF,EAAAvH,EAAAwH,cAACsC,EAAA,EAAD,CAAK9B,UAAU,QACbT,EAAAvH,EAAAwH,cAAA,6BACAD,EAAAvH,EAAAwH,cAACuB,EAAA,EAAD,CAAQf,UAAU,OAAOa,QAASrD,EAAKiH,oBACpCjH,EAAK/D,MAAM6K,YAAYI,yBACpB,QACA,aApJdlH,EAAK/D,MAAQ,CACXkL,UAAW,CACTxK,MAAO,GACPsC,iBAAkB,GAClBC,KAAM,IAER+G,WAAY,GACZa,YAAa,CACXC,oBAAoB,EACpBG,0BAA0B,IAG9BlH,EAAKoH,kBAAoB,IAAI9F,IAASC,UAAU,CAAEC,YAAY,IAd7CxB,kFAiBAiI,GACb3I,KAAKuC,MAAM9G,QAAUkN,EAAUlN,QACjCuE,KAAKuC,MAAMhD,WAAWS,KAAKuC,MAAM9G,OACjCuE,KAAKuC,MAAM/C,YAAYQ,KAAKuC,MAAM9G,OAClCuE,KAAKuC,MAAMjD,YAAYU,KAAKuC,MAAM9G,MAAOuE,KAAKuC,MAAMvF,2CA0ItD,OACEyF,EAAAvH,EAAAwH,cAACoB,EAAA,EAAD,KACErB,EAAAvH,EAAAwH,cAAA1C,KAAMyI,OAAN,MACCzI,KAAKrD,MAAM6K,YAAYC,oBAAsBhF,EAAAvH,EAAAwH,cAACkG,GAAD,MAC9CnG,EAAAvH,EAAAwH,cAAA1C,KAAM2C,KAAN,MACAF,EAAAvH,EAAAwH,cAACmG,GAAD,CACExL,MAAO2C,KAAKrD,MAAMkL,UAAUxK,MAC5BsC,iBAAkBK,KAAKrD,MAAMkL,UAAUlI,iBACvCgH,WAAY3G,KAAKrD,MAAMgK,qBAxKXtD,aCDhBC,GAAqB,CAAE4E,QzBJN,SAAAnM,GAAI,MAAK,CAC9BkD,KAAM,WACNlD,SyBEoCuD,cAAaC,aAAYC,eAElDsJ,GAAmBtF,YAPR,SAAA7G,GAAK,MAAK,CAChClB,MAAOkB,EAAMlB,MACbuB,QAASL,EAAMK,UAOfsG,GAF8BE,CAG9B0D,ICHInE,eAGJ,SAAAA,IAAc,IAAArC,EAAA,OAAA/B,OAAAoB,EAAA,EAAApB,CAAAqB,KAAA+C,IACZrC,EAAA/B,OAAAwI,EAAA,EAAAxI,CAAAqB,KAAArB,OAAAyI,EAAA,EAAAzI,CAAAoE,GAAAsE,KAAArH,QAoCF+I,eAAiB,WACf,OACEtG,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,oBACbT,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,QACbT,EAAAvH,EAAAwH,cAAA,4CACAD,EAAAvH,EAAAwH,cAAA,6BAAqBhC,EAAK/D,MAAMqM,MAAMC,QAAtC,QA1CMvI,EAgDdwI,cAAgB,WACd,OACEzG,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,oBACbT,EAAAvH,EAAAwH,cAAA,OAAKQ,UAAU,QACbT,EAAAvH,EAAAwH,cAAA,oCApDMhC,EA0DdyI,cAAgB,WACd,OACE1G,EAAAvH,EAAAwH,cAAC0G,EAAA,EAAD,KACE3G,EAAAvH,EAAAwH,cAAA,WACED,EAAAvH,EAAAwH,cAACwB,EAAD,MACAzB,EAAAvH,EAAAwH,cAACoB,EAAA,EAAD,KACErB,EAAAvH,EAAAwH,cAACsC,EAAA,EAAD,CAAK9B,UAAU,QACbT,EAAAvH,EAAAwH,cAACgG,GAAA,EAAD,CAAKW,GAAI,GACP5G,EAAAvH,EAAAwH,cAAC4G,GAAD,OAEF7G,EAAAvH,EAAAwH,cAACgG,GAAA,EAAD,CAAKW,GAAI,GACP5G,EAAAvH,EAAAwH,cAAC6G,EAAA,EAAD,KACE9G,EAAAvH,EAAAwH,cAAC8G,EAAA,EAAD,CACEC,OAAK,EACLC,KAAM3G,EAAIC,UAAY,IACtB2G,UAAWvD,KAEb3D,EAAAvH,EAAAwH,cAAC8G,EAAA,EAAD,CACEE,KAAM3G,EAAIC,UAAY,UACtB2G,UAAW/D,KAEbnD,EAAAvH,EAAAwH,cAAC8G,EAAA,EAAD,CACEE,KAAM3G,EAAIC,UAAY,eACtB2G,UAAW,SAAAC,GAAK,OACdnH,EAAAvH,EAAAwH,cAAC2D,GAAD,CAAeC,aAAcsD,EAAMC,MAAMC,OAAOpK,QAGpD+C,EAAAvH,EAAAwH,cAAC8G,EAAA,EAAD,CACEE,KAAM3G,EAAIC,UAAY,WACtB2G,UAAWb,YArF3BpI,EAAK/D,MAAQ,CACXqM,MAAO,CACLe,SAAS,EACTd,QAAS,KALDvI,mFAUM,IAAAsJ,EAAAhK,MAClB,IAAIS,GACDkB,MAAM,IACNsI,KAAK,SAAAxO,GACJuO,EAAKzH,MAAM2H,WAAWzO,KAEvBwO,KAAK,WACJD,EAAKzH,MAAMhD,WAAWyK,EAAKzH,MAAM9G,OACjCuO,EAAKzH,MAAM/C,YAAYwK,EAAKzH,MAAM9G,SAEnCwO,KAAK,WACJD,EAAKzH,MAAMjD,YAAY0K,EAAKzH,MAAM9G,MAAOuO,EAAKzH,MAAMvF,WAErDmN,MAAM,SAAAC,GACLJ,EAAKtC,SAAS,CACZsB,MAAO,CACLe,SAAS,EACTd,QAASmB,EAAInB,4FAwErB,OAAgC,IAA5BjJ,KAAKuC,MAAM9G,MAAMrB,QAAiB4F,KAAKrD,MAAMqM,MAAMe,QAE5C/J,KAAKrD,MAAMqM,MAAMe,QACnBtH,EAAAvH,EAAAwH,cAAA1C,KAAM+I,eAAN,MAEAtG,EAAAvH,EAAAwH,cAAA1C,KAAMkJ,cAAN,MAJAzG,EAAAvH,EAAAwH,cAAA1C,KAAMmJ,cAAN,aAvGK9F,aAAZN,GACGC,UAAYqH,oBA+GNtH,UClHTO,GAAqB,CAAE4G,W3BTH,SAAAzO,GAAK,MAAK,CAClCwD,KAAM,cACNxD,U2BOuC6D,cAAaC,aAAYC,eAErD8K,GAAe9G,YAPJ,SAAA7G,GAAK,MAAK,CAChClB,MAAOkB,EAAMlB,MACbuB,QAASL,EAAMK,UAOfsG,GAF0BE,CAG1BT,UCFkBwH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASb,MACvB,2DCRN,IAAMc,GAAQC,YAAYC,EAAaC,YAAgBC,MAEvDP,OAAOG,MAAQA,GAEfK,IAASC,OACPxI,EAAAvH,EAAAwH,cAACwI,EAAA,EAAD,CAAUP,MAAOA,IACflI,EAAAvH,EAAAwH,cAAC4H,GAAD,OAEFa,SAASC,eAAe,SD+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtB,KAAK,SAAAuB,GACjCA,EAAaC","file":"static/js/main.eb659923.chunk.js","sourcesContent":["class DataUtils {\n  static randomArrayItem = array =>\n    array[Math.floor(Math.random() * array.length)];\n\n  static isNullEmptyOrUndefinded = value =>\n    value === null || value === [] || value === undefined || value.length === 0;\n\n  static arrayFromArrayRandomItems = array => {\n    const result = Array.from(array).filter(() => DataUtils.randomBoolean());\n    return result.length === 0 ? [array[0]] : result;\n  };\n\n  static randomBoolean = () => Math.random() >= 0.5;\n\n  static arrayContainsAllElementsFromAnother = (array0, array1) =>\n    array1\n      .map(a => {\n        return array0.some(b => {\n          return b === a;\n        });\n      })\n      .every(e => e);\n}\n\nexport default DataUtils;\n","import DataUtils from \"../data/dataUtils\";\n\nclass ReducersUtils {\n  static sortPostsByDateDesc = posts =>\n    posts.sort((a, b) => new Date(b.date) - new Date(a.date));\n\n  static unwrapTagsFromPosts = posts => {\n    const allTags = Array.from(posts.map(post => post.tags).flat());\n    const uniqueTags = Array.from(new Set(allTags));\n\n    let uniqueWithQuantity = [];\n    uniqueTags.forEach(uniqueTag =>\n      uniqueWithQuantity.push({\n        name: uniqueTag,\n        quantity: allTags.filter(tag => tag === uniqueTag).length,\n        state: false\n      })\n    );\n\n    return uniqueWithQuantity;\n  };\n\n  static switchTagState = (tagName, tags) => {\n    let tag = tags.find(tag => tag.name === tagName);\n    tag.state = !tag.state;\n    return tags;\n  };\n\n  static filterPostsBy = (posts, filters) => {\n    const tags = filters.tags;\n    const dates = filters.dates;\n    const searchValue = filters.searchValue;\n\n    let filtered = [];\n    const switchedOnTags = tags.filter(tag => tag.state).map(tag => tag.name);\n    filtered = posts.filter(\n      post =>\n        // by tags\n        DataUtils.arrayContainsAllElementsFromAnother(\n          post.tags,\n          switchedOnTags\n        ) &&\n        // by searchValue (title)\n        post.title.toLowerCase().includes(searchValue.toLowerCase())\n    );\n\n    // by date - years\n    let switchedOnYears = dates\n      .filter(date => date.yearState)\n      .map(date => date.year);\n    if (switchedOnYears.length !== 0) {\n      filtered = filtered.filter(post =>\n        DataUtils.arrayContainsAllElementsFromAnother(switchedOnYears, [\n          post.date.getFullYear()\n        ])\n      );\n    }\n\n    // by date - months\n    let switchedOnMonths = dates\n      .map(date =>\n        date.months\n          .map(month => ({\n            year: date.year,\n            month: month.name,\n            state: month.state\n          }))\n          .flat()\n      )\n      .flat()\n      .filter(month => month.state);\n    if (switchedOnMonths.length !== 0) {\n      filtered = filtered.filter(\n        post =>\n          switchedOnMonths.some(\n            item => item.year === post.date.getFullYear()\n          ) &&\n          switchedOnMonths.some(\n            item => item.month === ReducersUtils.monthNameFromDate(post.date)\n          )\n      );\n    }\n    return ReducersUtils.sortPostsByDateDesc(filtered);\n  };\n\n  static unwrapDatesFromPosts = posts => {\n    const years = Array.from(\n      new Set(posts.map(post => post.date.getFullYear()))\n    );\n\n    let yearsWithMonths = [];\n    years.forEach(year =>\n      yearsWithMonths.push({\n        year: year,\n        yearState: false,\n        months: Array.from(\n          new Set(\n            posts\n              .filter(post => post.date.getFullYear() === year)\n              .map(post => ReducersUtils.monthNameFromDate(post.date))\n          )\n        ).map(month => ({\n          name: month,\n          quantity: ReducersUtils.postsQuantityByDate(posts, month, year),\n          state: false\n        }))\n      })\n    );\n    return yearsWithMonths;\n  };\n\n  static postsQuantityByDate = (posts, month, year) =>\n    posts.filter(\n      post =>\n        post.date.getFullYear() === year &&\n        ReducersUtils.monthNameFromDate(post.date) === month\n    ).length;\n\n  static monthNameFromDate = date =>\n    date.toLocaleString(\"en-us\", { month: \"long\" });\n\n  static switchDateState = (dateToSwitch, archiveDates) => {\n    if (dateToSwitch.month === undefined) {\n      let date = archiveDates.find(date => date.year === dateToSwitch.year);\n      date.yearState = !date.yearState;\n      // reset all months state\n      archiveDates.forEach(date =>\n        date.months.forEach(month => (month.state = false))\n      );\n    } else {\n      let month = archiveDates\n        .find(date => date.year === dateToSwitch.year)\n        .months.find(month => month.name === dateToSwitch.month);\n      month.state = !month.state;\n      // reset all years state\n      archiveDates.forEach(date => (date.yearState = false));\n    }\n    return archiveDates;\n  };\n\n  static resetFilters = filters => {\n    let reseted = Object.assign({}, filters);\n    reseted.tags.forEach(tag => (tag.state = false));\n    reseted.dates.forEach(date => (date.yearState = false));\n    reseted.dates.forEach(date =>\n      date.months.forEach(month => (month.state = false))\n    );\n    reseted.searchValue = \"\";\n    return reseted;\n  };\n}\n\nexport default ReducersUtils;\n","import { combineReducers } from \"redux\";\nimport ReducersUtils from \"./reducersUtils\";\n\nconst posts = (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_POSTS\":\n      return [...ReducersUtils.sortPostsByDateDesc(action.posts)];\n    case \"ADD_POST\":\n      return [...state, action.post];\n    default:\n      return state;\n  }\n};\n\nexport const filteredPosts = (state = [], action) => {\n  switch (action.type) {\n    case \"FILTER_POSTS\":\n      return [...ReducersUtils.filterPostsBy(action.posts, action.filters)];\n    default:\n      return state;\n  }\n};\n\nconst filtersShape = {\n  tags: [],\n  dates: [],\n  searchValue: \"\"\n};\n\nconst filters = (state = filtersShape, action) => {\n  switch (action.type) {\n    case \"UNWRAP_TAGS\":\n      return {\n        ...state,\n        tags: [...ReducersUtils.unwrapTagsFromPosts(action.posts)]\n      };\n    case \"SWITCH_TAG\":\n      return {\n        ...state,\n        tags: [...ReducersUtils.switchTagState(action.tagName, state.tags)]\n      };\n    case \"UNWRAP_DATES\":\n      return {\n        ...state,\n        dates: [...ReducersUtils.unwrapDatesFromPosts(action.posts)]\n      };\n    case \"SWITCH_DATE_STATE\":\n      return {\n        ...state,\n        dates: [...ReducersUtils.switchDateState(action.date, state.dates)]\n      };\n    case \"HANDLE_SEARCH_INPUT\":\n      return {\n        ...state,\n        searchValue: action.value\n      };\n    case \"RESET_FILTERS\":\n      return ReducersUtils.resetFilters(action.filters);\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  posts,\n  filteredPosts,\n  filters\n});\n","export const fetchPosts = posts => ({\n  type: \"FETCH_POSTS\",\n  posts\n});\n\nexport const addPost = post => ({\n  type: \"ADD_POST\",\n  post\n});\n\nexport const filterPosts = (posts, filters) => ({\n  type: \"FILTER_POSTS\",\n  posts,\n  filters\n});\n\nexport const unwrapTags = posts => ({\n  type: \"UNWRAP_TAGS\",\n  posts\n});\n\nexport const switchTagState = tagName => ({\n  type: \"SWITCH_TAG\",\n  tagName\n});\n\nexport const unwrapDates = posts => ({\n  type: \"UNWRAP_DATES\",\n  posts\n});\n\nexport const switchDateState = date => ({\n  type: \"SWITCH_DATE_STATE\",\n  date\n});\n\nexport const handleSearchInput = value => ({\n  type: \"HANDLE_SEARCH_INPUT\",\n  value\n});\n\nexport const resetFilters = filters => ({\n  type: \"RESET_FILTERS\",\n  filters\n});\n","class Post {\n  constructor(\n    id,\n    title,\n    shortDescription,\n    text,\n    author,\n    date,\n    tags,\n    mainImage\n  ) {\n    this._id = id;\n    this._title = title;\n    this._shortDescription = shortDescription;\n    this._text = text;\n    this._author = author;\n    this._date = date;\n    this._tags = tags;\n    this._mainImage = mainImage;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  get shortDescription() {\n    return this._shortDescription;\n  }\n\n  get text() {\n    return this._text;\n  }\n\n  get author() {\n    return this._author;\n  }\n\n  get date() {\n    return this._date;\n  }\n\n  get tags() {\n    return this._tags;\n  }\n\n  get mainImage() {\n    return this._mainImage;\n  }\n}\n\nexport { Post };\n","import Chance from \"chance\";\nimport uuidv1 from \"uuid/v1\";\nimport showdown from \"showdown\";\nimport DataUtils from \"./dataUtils\";\nimport { Post } from \"./\";\n\nclass DataGenerator {\n  constructor() {\n    this._data = [];\n    this._tags = [\"#javascript\", \"#css\", \"#rust\", \"#webpack\", \"#cargo\"];\n    this._chance = new Chance();\n    this._mdToHtmlConverter = new showdown.Converter({ noHeaderId: true });\n  }\n\n  _generate = quantity => {\n    for (let i = 0; i < quantity; i++) {\n      this._data.push(\n        new Post(\n          uuidv1(),\n          this._chance.sentence({ words: 6 }),\n          this._chance.paragraph({ sentences: 3 }),\n          this._generateHtmlText(),\n          \"twistezo\",\n          this._chance.date({\n            string: false,\n            american: false,\n            year: DataUtils.randomArrayItem([2017, 2018, 2019])\n          }),\n          DataUtils.arrayFromArrayRandomItems(this._tags),\n          \"https://avatars.dicebear.com/v2/identicon/\" +\n            this._chance.word({ length: 15 }) +\n            \".svg\"\n        )\n      );\n    }\n\n    return DataUtils.isNullEmptyOrUndefinded(this._data)\n      ? new Error(\"Generate data failed.\")\n      : this._data;\n  };\n\n  _generateHtmlText = () =>\n    this._mdToHtmlConverter.makeHtml(\n      `###` +\n        this._chance.sentence({ words: 6 }) +\n        `\\n` +\n        this._chance.paragraph({ sentences: 10 }) +\n        `\\n\\n![Alt Text](` +\n        `https://avatars.dicebear.com/v2/identicon/` +\n        this._chance.word({ length: 15 }) +\n        \".svg\" +\n        ` =200x200)` +\n        `\\n\\nPhoto: *` +\n        this._chance.sentence({ words: 6 }) +\n        `*` +\n        `\\n\\nVisit: <http://www.example.com>` +\n        `\\n\\n###` +\n        this._chance.sentence({ words: 6 }) +\n        `\\n` +\n        this._chance.paragraph({ sentences: 5 }) +\n        `\\n` +\n        `\n        \\`\\`\\`\n        static arrayContainsAllElementsFromAnother = (array0, array1) =>\n          array1\n            .map(a => {\n              return array0.some(b => {\n                return b === a;\n              });\n            })\n            .every(e => e);\n        \\`\\`\\`\n        `\n    );\n\n  fetch = quantity =>\n    new Promise((resolve, reject) => {\n      const result = this._generate(quantity);\n      if (result instanceof Error) {\n        reject(\n          new Error(\"Error while fetching data. The data seems to be broken.\")\n        );\n      } else {\n        resolve(result);\n      }\n    });\n}\n\nexport { DataGenerator };\n","import React, { Component } from \"react\";\nimport { Form, FormControl } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport App from \"../App\";\n\nclass SearchForm extends Component {\n  handleSearchFormInputChange = event => {\n    const value = event.target.value;\n    this.props.handleSearchInput(value);\n\n    let filters = Object.assign({}, this.props.filters);\n    filters.searchValue = value;\n    this.props.filterPosts(this.props.posts, filters);\n  };\n\n  render() {\n    return (\n      <Form inline>\n        <Link to={App.publicURL + \"/search\"}>\n          <FormControl\n            className=\"mr-sm-2\"\n            name=\"search\"\n            type=\"text\"\n            value={this.props.filters.searchValue}\n            placeholder=\"search\"\n            onChange={this.handleSearchFormInputChange}\n          />\n        </Link>\n        <i className=\"fas fa-search\" />\n      </Form>\n    );\n  }\n}\n\nexport default SearchForm;\n","import { connect } from \"react-redux\";\nimport { filterPosts, handleSearchInput } from \"../actions\";\nimport SearchForm from \"../components/Navbar/SearchForm\";\n\nconst mapStateToProps = state => ({\n  posts: state.posts,\n  filters: state.filters\n});\n\nconst mapDispatchToProps = { filterPosts, handleSearchInput };\n\nexport const SearchFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchForm);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar as BsNavbar, Form, Button, Container } from \"react-bootstrap\";\nimport { SearchFormContainer } from \"../../containers/SearchFormContainer\";\nimport App from \"../App\";\n\nclass Navbar extends Component {\n  handleLogoClick = () => {\n    this.props.resetFilters(this.props.filters);\n    this.props.filterPosts(this.props.posts, {\n      tags: [],\n      dates: [],\n      searchValue: \"\"\n    });\n  };\n\n  render() {\n    return (\n      <BsNavbar bg=\"dark\" variant=\"dark\" className=\"sticky-top text-center\">\n        <Container>\n          <Link to={App.publicURL + \"/\"} onClick={this.handleLogoClick}>\n            <BsNavbar.Brand className=\"ml-4\">Home</BsNavbar.Brand>\n          </Link>\n          <SearchFormContainer />\n          <Form inline>\n            <Link to={App.publicURL + \"/addpost\"}>\n              <Button variant=\"outline-info mr-4\">Add Post</Button>\n            </Link>\n            <Button variant=\"outline-info mr-4\">Sign in</Button>\n          </Form>\n        </Container>\n      </BsNavbar>\n    );\n  }\n}\n\nexport default Navbar;\n","import { connect } from \"react-redux\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport { resetFilters, filterPosts } from \"../actions\";\n\nconst mapStateToProps = state => ({\n  posts: state.posts,\n  filters: state.filters\n});\n\nconst mapDispatchToProps = { resetFilters, filterPosts };\n\nexport const NavbarContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Navbar);\n","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nclass AboutMe extends Component {\n  render() {\n    return (\n      <Container>\n        <h4>About Me</h4>\n      </Container>\n    );\n  }\n}\n\nexport default AboutMe;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Badge } from \"react-bootstrap\";\nimport App from \"../App\";\n\nclass Tags extends Component {\n  onTagClick = (event, tagName) => {\n    this.props.switchTagState(tagName);\n    this.props.filterPosts(this.props.posts, this.props.filters);\n    event.preventDefault();\n  };\n\n  Tags = () => {\n    const tags = this.props.filters.tags;\n    return tags.length > 0\n      ? tags.map(tag => (\n          <div\n            className=\"mr-2 alert-link\"\n            key={tag.name}\n            onClick={event => this.onTagClick(event, tag.name)}\n          >\n            <Link to={App.publicURL + \"/search\"}>\n              {tag.name}\n              {tag.state ? (\n                <i className=\"far fa-check-square ml-2\" />\n              ) : (\n                <Badge variant=\"secondary\" className=\"ml-2\">\n                  {tag.quantity}\n                </Badge>\n              )}\n            </Link>\n          </div>\n        ))\n      : \"\";\n  };\n\n  render() {\n    return (\n      <Container>\n        <div>\n          <h4>Tags</h4>\n          <span className=\"d-flex flex-wrap\">\n            <this.Tags />\n          </span>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Tags;\n","import { connect } from \"react-redux\";\nimport { switchTagState, filterPosts } from \"../actions\";\nimport Tags from \"../components/SidePanel/Tags\";\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    filters: state.filters\n  };\n};\n\nconst mapDispatchToProps = { switchTagState, filterPosts };\n\nexport const TagsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tags);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Badge } from \"react-bootstrap\";\nimport App from \"../App\";\n\nclass Archives extends Component {\n  onDateClick = (event, year, month) => {\n    this.props.switchDateState({ year, month });\n    this.props.filterPosts(this.props.posts, this.props.filters);\n    event.preventDefault();\n  };\n\n  Dates = () => {\n    const dates = this.props.filters.dates;\n    return dates.length > 0\n      ? dates.map(date => (\n          <ul key={date.year} className=\"list-unstyled\">\n            <div\n              className=\"alert-link\"\n              onClick={event => this.onDateClick(event, date.year)}\n            >\n              <Link to={App.publicURL + \"/search\"}>\n                {date.year}\n                {date.yearState ? (\n                  <i className=\"far fa-check-square ml-2\" />\n                ) : (\n                  \"\"\n                )}\n              </Link>\n            </div>\n            {date.months.map(month => (\n              <li key={month.name}>\n                <div\n                  className=\"alert-link\"\n                  onClick={event =>\n                    this.onDateClick(event, date.year, month.name)\n                  }\n                >\n                  <Link to={App.publicURL + \"/search\"}>\n                    {month.name}\n                    {month.state ? (\n                      <i className=\"far fa-check-square ml-2\" />\n                    ) : (\n                      <Badge variant=\"secondary\" className=\"ml-2\">\n                        {month.quantity}\n                      </Badge>\n                    )}\n                  </Link>\n                </div>\n              </li>\n            ))}\n          </ul>\n        ))\n      : \"\";\n  };\n\n  render() {\n    return (\n      <Container>\n        <h4>Archive posts</h4>\n        <this.Dates />\n      </Container>\n    );\n  }\n}\n\nexport default Archives;\n","import { connect } from \"react-redux\";\nimport { filterPosts, switchDateState } from \"../actions\";\nimport Archive from \"../components/SidePanel/Archives\";\n\nconst mapStateToProps = state => ({\n  posts: state.posts,\n  filters: state.filters\n});\n\nconst mapDispatchToProps = { filterPosts, switchDateState };\n\nexport const ArchivesContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Archive);\n","import React, { Component } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport AboutMe from \"./AboutMe\";\nimport { TagsContainer } from \"../../containers/TagsContainer\";\nimport { ArchivesContainer } from \"../../containers/ArchivesContainer\";\n\nclass SidePanel extends Component {\n  render() {\n    return (\n      <Container>\n        <Row className=\"pb-2\">\n          <AboutMe />\n        </Row>\n        <Row className=\"pb-2\">\n          <TagsContainer />\n        </Row>\n        <Row className=\"pb-2\">\n          <ArchivesContainer />\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default SidePanel;\n","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport App from \"../../App\";\n\nclass PostsCard extends Component {\n  render() {\n    const post = this.props.post;\n    const postURL = App.publicURL + \"/post/id-\" + post.id;\n    return (\n      <Container className=\"mb-2\">\n        <div className=\"card mb-3\">\n          <div className=\"row no-gutters\">\n            <div className=\"col-md-3 d-flex flex-wrap align-items-center\">\n              <Link to={postURL}>\n                <img src={post.mainImage} className=\"card-img pl-3\" alt=\"\" />\n              </Link>\n            </div>\n            <div className=\"col-md-9\">\n              <div className=\"card-body\">\n                <Link to={postURL}>\n                  <h5 className=\"card-title\">{post.title}</h5>\n                </Link>\n                <p className=\"card-text\">\n                  {post.shortDescription.substring(0, 150) + \"...\"}\n                </p>\n                <span className=\"card-text\">\n                  <p className=\"text-muted mb-0\">\n                    {post.author +\n                      \", \" +\n                      post.date.toLocaleString(\"pl-PL\", {\n                        day: \"numeric\",\n                        month: \"numeric\",\n                        year: \"numeric\"\n                      })}\n                  </p>\n                  <p className=\"text-muted mb-0\">\n                    {post.tags.map(tag => (\n                      <span key={tag} className=\"pr-2\">\n                        {tag}\n                      </span>\n                    ))}\n                  </p>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default PostsCard;\n","import React, { Component } from \"react\";\nimport PostCardHorizontal from \"./PostCards/PostCardHorizontal\";\nimport { Container } from \"react-bootstrap\";\n\nclass SearchResult extends Component {\n  PostCards = () => {\n    return this.props.filteredPosts.map(post => (\n      <PostCardHorizontal key={post.id} post={post} />\n    ));\n  };\n\n  EmptyResult = () => {\n    return (\n      <div className=\"text-center pt-5\">\n        <div className=\"pb-2\">\n          <h2>Nothing here...</h2>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Container>\n        {this.props.filteredPosts.length !== 0 ? (\n          <this.PostCards />\n        ) : (\n          <this.EmptyResult />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default SearchResult;\n","import { connect } from \"react-redux\";\nimport SearchResult from \"../components/MainPanel/SearchResult\";\n\nconst mapStateToProps = state => ({\n  filteredPosts: state.filteredPosts\n});\n\nexport const SearchResultContainer = connect(mapStateToProps)(SearchResult);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport App from \"../../App\";\n\nclass PostsCardVertical extends Component {\n  render() {\n    const post = this.props.post;\n    const postURL = App.publicURL + \"/post/id-\" + post.id;\n    return (\n      <div className=\"card\">\n        <Link to={postURL}>\n          <img src={post.mainImage} className=\"card-img-top pt-3\" alt=\"\" />\n        </Link>\n        <div className=\"card-body\">\n          <Link to={postURL}>\n            <h4 className=\"card-title\">{post.title}</h4>\n          </Link>\n        </div>\n        <div className=\"card-footer\">\n          <p className=\"text-muted mb-0\">\n            {post.author +\n              \", \" +\n              post.date.toLocaleString(\"pl-PL\", {\n                day: \"numeric\",\n                month: \"numeric\",\n                year: \"numeric\"\n              })}\n          </p>\n          <p className=\"text-muted mb-0\">\n            {post.tags.map(tag => (\n              <span key={tag} className=\"pr-2\">\n                {tag}\n              </span>\n            ))}\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostsCardVertical;\n","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport PostCardHorizontal from \"./PostCards/PostCardHorizontal\";\nimport PostCardVertical from \"./PostCards/PostCardVertical\";\n\nclass MainBoard extends Component {\n  static headPostsNum = 2;\n\n  HeadPosts = () => {\n    const headCards = this.props.filteredPosts\n      .slice(0, MainBoard.headPostsNum)\n      .map(post => <PostCardVertical key={post.id} post={post} />);\n    return <div className=\"card-deck\">{headCards}</div>;\n  };\n\n  PostCards = () => {\n    return this.props.filteredPosts\n      .slice(MainBoard.headPostsNum)\n      .map(post => <PostCardHorizontal key={post.id} post={post} />);\n  };\n\n  render() {\n    return (\n      <Container>\n        <h4>Latest posts</h4>\n        <this.HeadPosts />\n        <hr />\n        <this.PostCards />\n      </Container>\n    );\n  }\n}\n\nexport default MainBoard;\n","import { connect } from \"react-redux\";\nimport MainBoard from \"../components/MainPanel/MainBoard\";\n\nconst mapStateToProps = state => ({\n  filteredPosts: state.filteredPosts\n});\n\nexport const MainBoardContainer = connect(mapStateToProps)(MainBoard);\n","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nclass Post extends Component {\n  PostContainer = () => {\n    const post = this.props.posts.find(\n      post => post.id === this.props.routeParamId\n    );\n    return (\n      <div>\n        <h1>{post.title}</h1>\n        <p>{post.shortDescription}</p>\n        <div\n          className=\"content pt-3\"\n          dangerouslySetInnerHTML={{ __html: post.text }}\n        />\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Container>\n        <this.PostContainer />\n      </Container>\n    );\n  }\n}\n\nexport default Post;\n","import { connect } from \"react-redux\";\nimport Post from \"../components/MainPanel/Post\";\n\nconst mapStateToProps = state => ({\n  posts: state.posts\n});\n\nexport const PostContainer = connect(mapStateToProps)(Post);\n","export const exampleText = `#### Paragraph one\n**Lorem ipsum dolor sit amet**, consectetur *adipiscing* elit. \\`Nunc ligula\\` nisi. \n\n![Alt Text](https://avatars.dicebear.com/v2/identicon/test.svg =100x100)\n\nPhoto: *description*\n\nVisit: <http://www.example.com>  \n\n#### Paragraph two\nSome unordered list:\n* item 1\n* item 2\n* item 3\n\nSome code:\n\\`\\`\\`\nstatic arrayContainsAllElementsFromAnother = (array0, array1) =>\n  array1\n    .map(a => {\n      return array0.some(b => {\n        return b === a;\n      });\n    })\n    .every(e => e);\n\\`\\`\\`\n`;\n","import React, { Component } from \"react\";\n\nclass Preview extends Component {\n  render() {\n    return (\n      <div className=\"pt-3\">\n        <h4>Live preview</h4>\n        <hr />\n        <h1>{this.props.title}</h1>\n        <p>{this.props.shortDescription}</p>\n        <div\n          className=\"content pt-3\"\n          dangerouslySetInnerHTML={{ __html: this.props.parsedText }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Preview;\n","import React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nclass FormattingHelp extends Component {\n  render() {\n    return (\n      <div className=\"pt-4\">\n        <h4>Formatting options (only in Post body)</h4>\n        <Table bordered>\n          <thead>\n            <tr>\n              <th>Usage</th>\n              <th>Example</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>### header h3</td>\n              <td>\n                <h3>header h3</h3>\n              </td>\n            </tr>\n            <tr>\n              <td>#### header h4</td>\n              <td>\n                <h4>header h4</h4>\n              </td>\n            </tr>\n            <tr>\n              <td>*italics*</td>\n              <td>\n                <em>italics</em>\n              </td>\n            </tr>\n            <tr>\n              <td>**bold**</td>\n              <td>\n                <strong>bold</strong>\n              </td>\n            </tr>\n            <tr>\n              <td>`code`</td>\n              <td>\n                <code>code</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p>```</p>\n                <p>randomArrayItem = array...</p>\n                <p>array[Math.floor...</p>\n                <p>```</p>\n              </td>\n              <td>\n                <pre>\n                  <code>\n                    <p>randomArrayItem = array =></p>\n                    <p>\n                      &nbsp;&nbsp;array[Math.floor(Math.random() *\n                      array.length)];\n                    </p>\n                  </code>\n                </pre>\n              </td>\n            </tr>\n            <tr>\n              <td>![alt text](url = 30x30)</td>\n              <td>\n                <img\n                  alt=\"Alt Text\"\n                  src=\"https://avatars.dicebear.com/v2/identicon/test.svg\"\n                  width=\"30\"\n                  height=\"30\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>{\"<http://www.example.com>\"}</td>\n              <td>\n                <a href=\"http://www.example.com\">http://www.example.com</a>\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default FormattingHelp;\n","import React, { Component } from \"react\";\nimport uuidv1 from \"uuid/v1\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport { Container } from \"react-bootstrap\";\nimport showdown from \"showdown\";\nimport { exampleText } from \"./exampleText\";\nimport Preview from \"./Preview\";\nimport FormattingHelp from \"./FormattingHelp\";\nimport { Post } from \"../../../data/index\";\n\nclass AddPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formInput: {\n        title: \"\",\n        shortDescription: \"\",\n        text: \"\"\n      },\n      parsedText: [],\n      controllers: {\n        showFormattingHelp: false,\n        shouldClearPastedExample: false\n      }\n    };\n    this.mdToHtmlConverter = new showdown.Converter({ noHeaderId: true });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.posts !== prevProps.posts) {\n      this.props.unwrapTags(this.props.posts);\n      this.props.unwrapDates(this.props.posts);\n      this.props.filterPosts(this.props.posts, this.props.filters);\n    }\n  }\n\n  handleShowFormattingHelp = () => {\n    const current = this.state.controllers.showFormattingHelp;\n    this.setState({\n      ...this.state,\n      controllers: { showFormattingHelp: !current }\n    });\n  };\n\n  handlePasteExample = () => {\n    const shouldClearPastedExample = !this.state.controllers\n      .shouldClearPastedExample;\n    const title = shouldClearPastedExample ? \"Example title\" : \"\";\n    const shortDescription = shouldClearPastedExample\n      ? \"Example short description\"\n      : \"\";\n    const text = shouldClearPastedExample ? exampleText : \"\";\n\n    this.setState({\n      ...this.state,\n      formInput: {\n        title,\n        shortDescription,\n        text\n      },\n      parsedText: this.mdToHtmlConverter.makeHtml(text),\n      controllers: {\n        ...this.state.controllers,\n        shouldClearPastedExample\n      }\n    });\n  };\n\n  handleInputChange = event => {\n    let text = event.target.value;\n    const parsedText =\n      event.target.name === \"text\" ? this.mdToHtmlConverter.makeHtml(text) : [];\n    this.setState({\n      ...this.state,\n      formInput: {\n        ...this.state.formInput,\n        [event.target.name]: text\n      },\n      parsedText\n    });\n  };\n\n  handleAddPost = () => {\n    this.props.addPost(\n      new Post(\n        uuidv1(),\n        this.state.formInput.title,\n        this.state.formInput.shortDescription,\n        this.state.parsedText,\n        \"twistezo\",\n        new Date(),\n        [\"#rust\", \"#javascript\", \"#linux\"],\n        \"https://avatars.dicebear.com/v2/identicon/test.svg\"\n      )\n    );\n  };\n\n  Form = () => {\n    return (\n      <div className=\"pt-4\">\n        <h4>Create your post!</h4>\n        <hr />\n        <Form className=\"pt-2\">\n          <Form.Group>\n            <Form.Control\n              name=\"title\"\n              value={this.state.formInput.title}\n              type=\"text\"\n              placeholder=\"Post title\"\n              required\n              maxLength=\"30\"\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              name=\"shortDescription\"\n              as=\"textarea\"\n              value={this.state.formInput.shortDescription}\n              placeholder=\"Short description\"\n              required\n              rows=\"3\"\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              name=\"text\"\n              as=\"textarea\"\n              value={this.state.formInput.text}\n              placeholder=\"Post body\"\n              rows=\"10\"\n              required\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Button onClick={this.handleAddPost}>Add</Button>\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  };\n\n  Helper = () => {\n    return (\n      <div>\n        <h4>Need a little help?</h4>\n        <hr />\n        <Col>\n          <Row className=\"pt-2\">\n            <span>Formatting options:</span>\n            <Button className=\"ml-2\" onClick={this.handleShowFormattingHelp}>\n              {this.state.controllers.showFormattingHelp ? \"Hide\" : \"Show\"}\n            </Button>\n          </Row>\n          <Row className=\"pt-2\">\n            <span>Example post:</span>\n            <Button className=\"ml-2\" onClick={this.handlePasteExample}>\n              {this.state.controllers.shouldClearPastedExample\n                ? \"Clear\"\n                : \"Paste\"}\n            </Button>\n          </Row>\n        </Col>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Container>\n        <this.Helper />\n        {this.state.controllers.showFormattingHelp && <FormattingHelp />}\n        <this.Form />\n        <Preview\n          title={this.state.formInput.title}\n          shortDescription={this.state.formInput.shortDescription}\n          parsedText={this.state.parsedText}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default AddPost;\n","import { connect } from \"react-redux\";\nimport AddPost from \"../components/MainPanel/AddPost/AddPost\";\nimport { addPost, filterPosts, unwrapTags, unwrapDates } from \"../actions\";\n\nconst mapStateToProps = state => ({\n  posts: state.posts,\n  filters: state.filters\n});\n\nconst mapDispatchToProps = { addPost, filterPosts, unwrapTags, unwrapDates };\n\nexport const AddPostContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddPost);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { DataGenerator } from \"../data/generator\";\nimport { NavbarContainer } from \"../containers/NavbarContainer\";\nimport SidePanel from \"./SidePanel/SidePanel\";\nimport { SearchResultContainer } from \"../containers/SearchResultContainer\";\nimport { MainBoardContainer } from \"../containers/MainBoardContainer\";\nimport { PostContainer } from \"../containers/PostContainer\";\nimport { AddPostContainer } from \"../containers/AddPostContainer\";\nimport { Row, Col, Container } from \"react-bootstrap\";\n\nclass App extends Component {\n  static publicURL = process.env.PUBLIC_URL;\n\n  constructor() {\n    super();\n    this.state = {\n      error: {\n        occured: false,\n        message: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    new DataGenerator()\n      .fetch(10)\n      .then(posts => {\n        this.props.fetchPosts(posts);\n      })\n      .then(() => {\n        this.props.unwrapTags(this.props.posts);\n        this.props.unwrapDates(this.props.posts);\n      })\n      .then(() => {\n        this.props.filterPosts(this.props.posts, this.props.filters);\n      })\n      .catch(err => {\n        this.setState({\n          error: {\n            occured: true,\n            message: err.message\n          }\n        });\n      });\n  }\n\n  componentDidUpdate() {\n    // console.log(window.store.getState());\n  }\n\n  ErrorContainer = () => {\n    return (\n      <div className=\"text-center pt-5\">\n        <div className=\"pb-2\">\n          <h2>Error. Please reload the page.</h2>\n          <h5>Error message: \"{this.state.error.message}\"</h5>\n        </div>\n      </div>\n    );\n  };\n\n  WaitContainer = () => {\n    return (\n      <div className=\"text-center pt-5\">\n        <div className=\"pb-2\">\n          <h2>Downloading data...</h2>\n        </div>\n      </div>\n    );\n  };\n\n  MainContainer = () => {\n    return (\n      <Router>\n        <div>\n          <NavbarContainer />\n          <Container>\n            <Row className=\"pt-5\">\n              <Col sm={3}>\n                <SidePanel />\n              </Col>\n              <Col sm={9}>\n                <Switch>\n                  <Route\n                    exact\n                    path={App.publicURL + \"/\"}\n                    component={MainBoardContainer}\n                  />\n                  <Route\n                    path={App.publicURL + \"/search\"}\n                    component={SearchResultContainer}\n                  />\n                  <Route\n                    path={App.publicURL + \"/post/id-:id\"}\n                    component={route => (\n                      <PostContainer routeParamId={route.match.params.id} />\n                    )}\n                  />\n                  <Route\n                    path={App.publicURL + \"/addpost\"}\n                    component={AddPostContainer}\n                  />\n                </Switch>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </Router>\n    );\n  };\n\n  render() {\n    if (this.props.posts.length !== 0 && !this.state.error.occured) {\n      return <this.MainContainer />;\n    } else if (this.state.error.occured) {\n      return <this.ErrorContainer />;\n    } else {\n      return <this.WaitContainer />;\n    }\n  }\n}\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport { fetchPosts, filterPosts, unwrapTags, unwrapDates } from \"../actions\";\nimport App from \"../components/App\";\n\nconst mapStateToProps = state => ({\n  posts: state.posts,\n  filters: state.filters\n});\n\nconst mapDispatchToProps = { fetchPosts, filterPosts, unwrapTags, unwrapDates };\n\nexport const AppContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport { AppContainer } from \"./containers/AppContainer\";\nimport \"./index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n// TODO: Remove. For debugging purposes only!\nwindow.store = store;\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}